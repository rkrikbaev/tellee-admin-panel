{"version":3,"sources":["static/icons/turbine.svg","static/icons/pump.svg","static/icons/generator.svg","components/Main.js","components/TopBar.js","components/applications/AppModalCreate.jsx","components/applications/AppModalEdit.jsx","components/devices/DeviceModalCreate.jsx","components/devices/DeviceModalEdit.jsx","components/connections/ConnectionModalRemove.jsx","components/errorModal.jsx","components/connections/Connections.jsx","components/channels/ChannelModalCreate.jsx","components/channels/ChannelModalRemove.jsx","components/channels/Channels.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","statusTypes","statusColorTypes","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","getToken","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","concat","process","method","headers","Accept","Content-Type","mode","credentials","body","JSON","stringify","email","stop","getDevicesFromMainflux","_callee2","_context2","then","res","json","devices","parseDataFromBootstrap","catch","err","data","filter","item","content","parse","type","map","id","mainflux_id","icon","device_type","name","status","Math","floor","random","length","ram","memory","customizeDataForRender","forEach","turbine","pump","generator","push","setState","state","react_default","createElement","className","Card","Group","i","fluid","color","key","src","alt","htmlFor","toUpperCase","role","aria-label","Component","trigger","Image","avatar","options","text","TopBar","Segment","clearing","Header","floated","Dropdown","pointing","AppModalCreate","getThings","oldThings","console","log","getConnections","oldConnections","createThing","_callee3","_context3","newThing","createChannel","_callee4","channel","_context4","createAppConnection","_callee5","_this$state","connectionName","arr","thing","obj","_this$state2","showModalCreateApp","_context5","oldChannels","sent","t0","mac","metadata","channels","callbackFromParent","t1","close","_callee6","_this$state3","_context6","handleChangeConnectionName","e","str","target","value","regexpName","test","prevState","_objectSpread","isConnectionNameEnabled","handleChangeThingMac","regexpMac","isThingMacEnabled","nextProps","nextState","_this2","_this$state4","Modal","closeIcon","dimmer","open","onClose","Content","Form","Field","placeholder","onChange","Actions","Button","onClick","positive","labelPosition","disabled","AppModalEdit","getConfigById","_ref","config","selectedChannels","mainflux_channels","_x","apply","arguments","getChannels","chan","editApp","_this$state$config$co","showModalEditApp","handleChangeName","handleChangeChannel","_ref4","connection","external_id","undefined","readOnly","mainflux_key","multiple","selection","alertMessagesText","title","subtitle","assettext","assetvalue","DeviceModalCreate","apps","getDeviceTypes","types","formattedTypes","deviceTypes","getChannel","_ref5","appMac","app","abrupt","getGlobalChannel","_ref6","channelName","globalChannel","_x2","createDeviceConnection","_callee7","cycle","sendToApp","sendToDB","createdThing","_this$state$newDevice","severity","alerttext","alertvalue","messagetext","longitude","latitude","newDevice","showModalCreateDevice","_context7","response","device_name","device_id","device_key","DeviceModalCreate_objectSpread","_callee8","_context8","closeError","showModalError","errorText","isConnectionNameDisabled","isThingMacDisabled","handleChangeCycle","isEnabled","handleChangeSendToApp","_ref9","checked","handleChangeSendToDB","_ref10","handleChangeDeviceType","_ref11","handleChangeApp","_ref12","handleChangeNewDevice","keys","alertext","Checkbox","label","DeviceModalEdit","selectedApp","selectedDeviceType","handleSendToApp","handleSendToDB","currentThing","split","_x3","getDeviceInfoFromDB","_ref7","device","editDevice","DeviceModalEdit_objectSpread","_x4","showModalEditDevice","_callee9","_this$state$editDevic","_this$state$editDevic2","_title","_subtitle","_severity","_alerttext","_alertvalue","_assettext","_assetvalue","_messagetext","_longitude","_latitude","currentDevice","_context9","_x5","editThing","editThingIndex","indexOf","currentValue","_ref13","handleChangeEditDevice","_this$props$connectio","forceUpdate","_this3","ConnectionModalRemove","removeConnection","_ref2","_connection$content","showModalRemove","isRemoveable","_this$props","basic","size","inverted","Icon","ErrorModal","Connections","connections","parsedConnections","loader","createAppModalCallback","createDeviceModalCallback","removeModalCallback","_connection$0$content","connectedApp","edittedApp","editAppModalCallback","editDeviceModalCallback","errorModalCallback","edittingApp","edittingDevice","removingConnection","Item","relaxed","Loader","active","verticalAlign","Popup","Description","Extra","applications_AppModalCreate","devices_DeviceModalCreate","connections_ConnectionModalRemove","errorModal","applications_AppModalEdit","devices_DeviceModalEdit","ChannelModalCreate","showModalCreate","ChannelModalCreate_objectSpread","ChannelModalRemove","removeChannel","event","Channels","removeItemId","createChannelModalCallback","_ref3","removingChannel","channels_ChannelModalRemove","channels_ChannelModalCreate","Notfound","App","handleHome","home","handleChannels","handleConnections","react_router_dom","Menu","secondary","vertical","to","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a3074a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/turbine.06474a16.svg\";","module.exports = __webpack_public_path__ + \"static/media/pump.1df4e95b.svg\";","module.exports = __webpack_public_path__ + \"static/media/generator.7a7e96ae.svg\";","import React, { Component } from 'react'\nimport { Card } from 'semantic-ui-react'\n\nimport 'semantic-ui-css/semantic.min.css'\n\nimport turbine from '../static/icons/turbine.svg'\nimport pump from '../static/icons/pump.svg'\nimport generator from '../static/icons/generator.svg'\n\nconst statusTypes = ['connected', 'not connected']\nconst statusColorTypes = []\n\nclass Main extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      devices: [],\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getToken()\n    this.getDevicesFromMainflux()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getToken = async () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getDevicesFromMainflux = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((devices) => {\n        this.parseDataFromBootstrap(devices)\n      })\n      .catch((err) => err)\n  }\n\n  parseDataFromBootstrap = (devices) => {\n    const data = devices\n      .filter((item) => {\n        item.content = JSON.parse(item.content)\n        return item.content.type === 'device'\n      })\n      .map((item) => ({\n        id: item.mainflux_id,\n        icon: item.content.device_type,\n        name: item.name,\n        status: statusTypes[Math.floor(Math.random() * statusTypes.length)],\n        ram: Math.floor(Math.random() * 100) + 1,\n        memory: `7976/${Math.floor(Math.random() * 7976) + 1}`,\n      }))\n    this.customizeDataForRender(data)\n  }\n\n  customizeDataForRender = (devices) => {\n    devices.forEach((item) => {\n      switch (item.icon) {\n        case 'turbine':\n          item.icon = turbine\n          break\n        case 'e-meter_v2':\n          item.icon = pump\n          break\n        case 'e-meter_v1':\n          item.icon = generator\n          break\n        default:\n          break\n      }\n    })\n\n    devices.forEach((item) => {\n      switch (item.status) {\n        case 'connected':\n          statusColorTypes.push('green')\n          break\n        case 'not connected':\n          statusColorTypes.push('yellow')\n          break\n        default:\n          break\n      }\n    })\n\n    if (this._isMounted) this.setState({ devices })\n  }\n\n  render() {\n    const { devices } = this.state\n\n    return (\n      <div className=\"main_wrapper\">\n        <h1>Home</h1>\n        <hr />\n        {devices.length !== 0 ? (\n          <Card.Group>\n            {devices.map((item, i) => (\n              <Card\n                fluid\n                color={statusColorTypes[i]}\n                key={item.id}\n                className=\"home_card\"\n              >\n                <img\n                  src={item.icon}\n                  alt={`${item.name}`}\n                  className=\"home_card__item\"\n                />\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"name\">\n                    name:\n                  </label>\n                  {item.name.toUpperCase()}\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"status\">\n                    status:\n                  </label>\n                  {item.status.toUpperCase()}\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"cpu\">\n                    CPU:\n                  </label>\n                  {item.ram}\n%\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"memory\">\n                    memory:\n                  </label>\n                  {item.memory}\n                  kB\n                </p>\n              </Card>\n            ))}\n          </Card.Group>\n        ) : (\n          <p>\n            Here you can put everything your heart desires.\n            <span role=\"img\" aria-label=\"Hooray\">\n              🙂\n            </span>\n          </p>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport {\n  Header, Segment, Dropdown, Image,\n} from 'semantic-ui-react'\n\nconst trigger = (\n  <span>\n    <Image avatar src=\"http://zsse.zeinetsse.com/favicon.ico\" />\n    {' '}\nUser Admin\n  </span>\n)\n\nconst options = [\n  { key: 'user', text: 'Account', icon: 'user' },\n  { key: 'settings', text: 'Settings', icon: 'settings' },\n  { key: 'sign-out', text: 'Sign Out', icon: 'sign out' },\n]\n\nexport default function TopBar() {\n  return (\n    <div id=\"TopBar\">\n      <Segment clearing id=\"top_menu\">\n        <Header className=\"topbar_left\" floated=\"left\">\n          <img className=\"top_logo\" alt=\"Tellee_logo\" src=\"/Tellee_logo.svg\" />\n        </Header>\n        <Header className=\"topbar_right\" floated=\"right\">\n          <Dropdown\n            className=\"top_dropdown\"\n            trigger={trigger}\n            options={options}\n            pointing=\"top left\"\n            icon={null}\n          />\n        </Header>\n      </Segment>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Modal, Form } from 'semantic-ui-react'\n\nclass AppModalCreate extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalCreateApp: false,\n      isThingMacEnabled: false,\n      isConnectionNameEnabled: false,\n      oldThings: [],\n      oldConnections: [],\n      newThing: {\n        name: '',\n        metadata: {\n          type: 'app',\n          mac: '',\n        },\n      },\n      channel: {\n        name: '',\n        metadata: {},\n      },\n      connectionName: '',\n    }\n\n    this.regexpName = /^\\w+$/\n    this.regexpMac = /^[0-9a-z]{1,2}([.:-])(?:[0-9a-z]{1,2}\\1){4}[0-9a-z]{2}$/gim\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        if (this._isMounted) {\n          this.setState({ oldThings })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        if (this._isMounted) {\n          this.setState({ oldConnections })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  createThing = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify(this.state.newThing),\n    })\n  }\n\n  createChannel = async () => {\n    const { channel } = this.state\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ channel }),\n    })\n  }\n\n  createAppConnection = async () => {\n    const { newThing, connectionName } = this.state\n    try {\n      let arr = []\n      await this.createChannel()\n      arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((res) => res.json())\n        .then((oldChannels) => {\n          return oldChannels\n        })\n        .catch((err) => console.log(err))\n      var channel = arr.filter((item) => {\n        return item.name === `zsse/${newThing.name}`\n      })\n      await this.createThing()\n      arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((res) => res.json())\n        .then((oldThings) => {\n          return oldThings\n        })\n        .catch((err) => console.log(err))\n\n      var thing = arr.filter((item) => {\n        return item.name === `zsse/${newThing.name}`\n      })\n    } catch (err) {\n      console.log(err)\n    }\n\n    const obj = {\n      mac: newThing.metadata.mac,\n      id: thing[0].id,\n      channels: `${channel[0].id}`,\n      name: connectionName,\n    }\n\n    try {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/create/app`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(obj),\n      })\n\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel[0].id}/things/${thing[0].id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        }\n      )\n      await this.getConnections()\n\n      // Close and send data to parent\n      const { showModalCreateApp, oldConnections } = this.state\n      if (this._isMounted) {\n        this.setState({ showModalCreateApp: false })\n      }\n      this.props.callbackFromParent(showModalCreateApp, oldConnections)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  close = async () => {\n    const { showModalCreateApp, oldConnections } = this.state\n    if (this._isMounted) this.setState({ showModalCreateApp: false })\n    this.props.callbackFromParent(showModalCreateApp, oldConnections)\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getThings()\n    this.getConnections()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(this.props === nextProps && this.state === nextState)\n  }\n\n  handleChangeConnectionName = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldConnections.filter((item) => {\n      return item.name === str\n    })\n    if (arr.length !== 0 || !this.regexpName.test(str)) {\n      if (this._isMounted) this.setState({ isConnectionNameEnabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            name: str,\n          },\n          channel: {\n            ...prevState.channel,\n            name: str,\n          },\n          connectionName: str,\n          isConnectionNameEnabled: false,\n        }))\n      }\n    }\n  }\n\n  handleChangeThingMac = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldThings.filter((item) => {\n      return item.metadata.mac === str\n    })\n    if (arr.length !== 0 || !this.regexpMac.test(str)) {\n      if (this._isMounted) this.setState({ isThingMacEnabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            metadata: {\n              ...prevState.newThing.metadata,\n              mac: str,\n            },\n          },\n          isThingMacEnabled: false,\n        }))\n      }\n    }\n  }\n\n  render() {\n    const { showModalCreateApp } = this.props\n    const { isThingMacEnabled, isConnectionNameEnabled } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalCreateApp}\n        onClose={this.close}\n      >\n        <Modal.Header> CREATE APP </Modal.Header>\n\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label> Name </label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                className={isConnectionNameEnabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Mac </label>\n              <input\n                placeholder=\"mac\"\n                onChange={(e) => this.handleChangeThingMac(e)}\n                className={isThingMacEnabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            Cancel\n          </Button>\n          <Button\n            positive\n            icon=\"plus\"\n            labelPosition=\"right\"\n            content=\"Create\"\n            disabled={isThingMacEnabled || isConnectionNameEnabled}\n            onClick={this.createAppConnection}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default AppModalCreate\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Form, Modal, Dropdown } from 'semantic-ui-react'\n\nclass AppModalEdit extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      config: {},\n      channels: [],\n      selectedChannels: [],\n      showModalEditApp: false,\n    }\n  }\n\n  getConfigById = async (id) => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((config) => {\n        const selectedChannels = []\n\n        config.content = JSON.parse(config.content)\n\n        for (let i = 0; i < config.mainflux_channels.length; i++) {\n          selectedChannels.push(config.mainflux_channels[i].id)\n        }\n        if (this._isMounted) {\n          this.setState({\n            selectedChannels,\n            config,\n          })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getChannels = async () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((channels) => {\n        const chan = channels.map((item, i) => {\n          return { value: item.id, text: item.name }\n        })\n        if (this._isMounted) this.setState({ channels: chan })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  editApp = async () => {\n    const { config } = this.state\n    const { mac, name } = this.state.config.content\n    const obj = {\n      mac,\n      id: config.mainflux_id,\n      channels: config.mainflux_channels,\n      name,\n      type: 'app',\n      content: config.content,\n    }\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      }\n    )\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/channels/edit/${obj.channels[0].id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ name: obj.name, metadata: {} }),\n      }\n    )\n\n    this.close()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextProps === this.props && nextState === this.state)\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getConfigById(this.props.connection.external_id)\n    this.getChannels()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  close = () => {\n    if (this._isMounted) this.setState({ showModalEditApp: false })\n    this.props.callbackFromParent(this.state.showModalEditApp)\n  }\n\n  handleChangeName = (e) => {\n    const obj = this.state.config\n    obj.content.name = e.target.value\n    if (this._isMounted) this.setState({ config: obj })\n  }\n\n  handleChangeChannel = (e, { value }) => {\n    let obj = this.state.config\n    obj.mainflux_channels = value\n    if (this._isMounted) this.setState({ config: obj })\n  }\n\n  render() {\n    const { showModalEditApp } = this.props\n    const { config, channels, selectedChannels } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalEditApp}\n        onClose={this.close}\n      >\n        <Modal.Header>EDIT APPLICATION</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Thing ID</label>\n              <input\n                placeholder=\"mainflux_id\"\n                value={config.content !== undefined ? config.mainflux_id : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Thing Key</label>\n              <input\n                placeholder=\"mainflux_key\"\n                value={config.content !== undefined ? config.mainflux_key : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"name\"\n                value={config.content !== undefined ? config.content.name : ''}\n                onChange={(e) => this.handleChangeName(e)}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Channels</label>\n              <Dropdown\n                placeholder=\"channels\"\n                multiple\n                fluid\n                selection\n                options={channels}\n                onChange={this.handleChangeChannel}\n                value={selectedChannels}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={this.editApp}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default AppModalEdit\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Form, Modal, Dropdown, Checkbox } from 'semantic-ui-react'\n\nconst alertMessagesText = {\n  title: 'Turbine',\n  subtitle: 'LM2500',\n  assettext: 'MTU',\n  assetvalue: 'operation',\n}\n\nclass DeviceModalCreate extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      deviceTypes: [],\n      apps: [],\n      oldThings: [],\n      oldConnections: [],\n      isEnabled: true,\n      showModalCreateDevice: false,\n      isThingMacDisabled: false,\n      isConnectionNameDisabled: false,\n      newThing: {\n        name: '',\n        metadata: {\n          type: 'device',\n          mac: '',\n        },\n      },\n      config: {\n        id: '',\n        channel: [],\n        name: '',\n        cycle: '',\n        sendToApp: false,\n        sendToDB: false,\n        device_type: undefined,\n        app: undefined,\n      },\n      newDevice: {\n        id: '',\n        title: alertMessagesText.title,\n        subtitle: alertMessagesText.subtitle,\n        assettext: alertMessagesText.assettext,\n        assetvalue: alertMessagesText.assetvalue,\n        longitude: '',\n        latitude: '',\n        severity: '',\n        alertext: '',\n        alertvalue: '',\n        messagetext: '',\n      },\n    }\n\n    this.oldThings = []\n    this.regexpName = /^\\w+$/\n    this.regexpMac = /^[0-9a-z]{1,2}([.:-])(?:[0-9a-z]{1,2}\\1){4}[0-9a-z]{2}$/gim\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        this.setState({ oldConnections })\n        const connections = oldConnections.filter((item) => {\n          item.content = JSON.parse(item.content)\n          return item.content.type === 'app'\n        })\n        const apps = connections.map((item) => {\n          return { key: item.external_id, text: item.name, value: item.external_id }\n        })\n        if (this._isMounted) this.setState({ apps })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getDeviceTypes = async () => {\n    fetch('http://134.209.240.215:8300/devices')\n      .then((res) => res.json())\n      .then((types) => {\n        const formattedTypes = types.map((type, i) => {\n          return { text: type, value: type }\n        })\n        if (this._isMounted) this.setState({ deviceTypes: formattedTypes })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        this.oldThings = oldThings\n        if (this._isMounted) this.setState({ oldThings })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  createThing = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify(this.state.newThing),\n    })\n  }\n\n  getChannel = async (appMac) => {\n    const { oldConnections } = this.state\n    let app = oldConnections.filter((item) => {\n      return item.external_id === appMac\n    })\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n\n    var channel = arr.filter((item) => {\n      return item.name === app[0].name\n    })\n    return channel[0]\n  }\n\n  getGlobalChannel = async (channelName) => {\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n    const globalChannel = arr.filter((item) => {\n      return item.name === `zsse/${channelName}`\n    })\n    return globalChannel[0]\n  }\n\n  // -- Start of creating device --\n  createDeviceConnection = async () => {\n    const { newThing, connectionName, config } = this.state\n    const { cycle, sendToApp, sendToDB, device_type, app } = config\n\n    try {\n      await this.createThing()\n      await this.getThings()\n\n      var createdThing = this.oldThings.filter((item) => {\n        return item.name === `zsse/${newThing.name}`\n      })\n    } catch (err) {\n      console.log(err)\n    }\n\n    let obj = {},\n      channel = {}\n    if (sendToApp) {\n      channel = await this.getChannel(app)\n      obj = {\n        mac: newThing.metadata.mac,\n        id: createdThing[0].id,\n        channel: channel.id,\n        name: connectionName,\n        cycle,\n        sendToApp,\n        sendToDB,\n        device_type,\n        app,\n      }\n    } else {\n      channel = await this.getGlobalChannel(process.env.REACT_APP_CHANNEL_NAME)\n      obj = {\n        mac: newThing.metadata.mac,\n        id: createdThing[0].id,\n        channel: channel.id,\n        name: connectionName,\n        cycle,\n        device_type,\n        sendToApp,\n        sendToDB,\n      }\n    }\n\n    try {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/create/device`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n          body: JSON.stringify(obj),\n        }\n      )\n\n      if (sendToApp) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n          mode: 'cors',\n          credentials: 'include',\n        })\n          .then((response) => response.json())\n          .then((response) => {\n            response.content = JSON.parse(response.content)\n            let { content } = response\n            content.devices.push({\n              device_name: `zsse/${connectionName}`,\n              device_id: createdThing[0].id,\n              device_key: createdThing[0].key,\n              device_type: obj.device_type,\n            })\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify({ response }),\n              }\n            )\n            // - Connecting to App's channel - //\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${response.mainflux_channels[0].id}/things/${createdThing[0].id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n              }\n            )\n          })\n      } else {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${createdThing[0].id}`,\n          {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            mode: 'cors',\n            credentials: 'include',\n          }\n        )\n      }\n      if (sendToDB) {\n        const {\n          title,\n          subtitle,\n          severity,\n          alerttext,\n          alertvalue,\n          assettext,\n          assetvalue,\n          messagetext,\n          longitude,\n          latitude,\n        } = this.state.newDevice\n        let newDevice = {\n          id: newThing.name,\n          title,\n          subtitle,\n          severity,\n          alerttext,\n          alertvalue,\n          assettext,\n          assetvalue,\n          messagetext,\n          longitude,\n          latitude,\n        }\n\n        await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/create`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n          body: JSON.stringify(newDevice),\n        })\n      }\n      await this.getConnections()\n\n      // Close and send data to parent\n      const { showModalCreateDevice, oldConnections } = this.state\n      if (this._isMounted) this.setState({ showModalCreateDevice: false })\n      this.props.callbackFromParent(showModalCreateDevice, oldConnections)\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          config: {\n            ...prevState.config,\n            sendToApp: false,\n          },\n        }))\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  // -- End of creating device --\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.getConnections()\n      this.getThings()\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getThings()\n    this.getConnections()\n    this.getDeviceTypes()\n  }\n\n  close = async () => {\n    const { showModalCreateDevice, oldConnections } = this.state\n    this.setState({ showModalCreateDevice: false })\n    this.setState((prevState) => ({\n      config: {\n        ...prevState.config,\n        sendToApp: false,\n      },\n    }))\n    this.props.callbackFromParent(showModalCreateDevice, oldConnections)\n  }\n\n  closeError = () => {\n    if (this._isMounted) this.setState({ showModalError: false, errorText: '' })\n  }\n\n  handleChangeConnectionName = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldConnections.filter((item) => {\n      return item.name === `zsse/${str}`\n    })\n    if (arr.length !== 0 || !this.regexpName.test(str)) {\n      if (this._isMounted) this.setState({ isConnectionNameDisabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            name: str,\n          },\n          connectionName: str,\n          isConnectionNameDisabled: false,\n        }))\n      }\n    }\n  }\n\n  handleChangeThingMac = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldThings.filter((item) => {\n      return item.metadata.mac === str\n    })\n    if (arr.length !== 0 || !this.regexpMac.test(str)) {\n      if (this._isMounted) this.setState({ isThingMacDisabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            metadata: {\n              ...prevState.newThing.metadata,\n              mac: str,\n            },\n          },\n          isThingMacDisabled: false,\n        }))\n      }\n    }\n  }\n\n  // TODO:\n  // handleChangeConfig = e => {\n  //   if(this._isMounted) {\n  //     var config = {...this.state.config};\n  //     config[Object.keys(e)[0]] = e[Object.keys(e)[0]];\n  //     this.setState({config});\n  //   }\n  // };\n\n  handleChangeCycle = (e) => {\n    let str = e.target.value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          cycle: str,\n        },\n        isEnabled:\n          prevState.config.cycle.length <= 4 && /^\\d+$/.test(prevState.config.cycle),\n      }))\n    }\n  }\n\n  handleChangeSendToApp = (e, { checked }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          sendToApp: checked,\n        },\n      }))\n    }\n    this.getConnections()\n  }\n\n  handleChangeSendToDB = (e, { checked }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          sendToDB: checked,\n        },\n      }))\n    }\n  }\n\n  handleChangeDeviceType = (e, { value }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          device_type: value,\n        },\n      }))\n    }\n  }\n\n  handleChangeApp = (e, { value }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          app: value,\n        },\n      }))\n    }\n  }\n\n  handleChangeNewDevice = (e) => {\n    if (this._isMounted) {\n      var newDevice = { ...this.state.newDevice }\n      newDevice[Object.keys(e)[0]] = e[Object.keys(e)[0]]\n      this.setState({ newDevice })\n    }\n  }\n\n  render() {\n    const { showModalCreateDevice } = this.props\n    const {\n      isThingMacDisabled,\n      isConnectionNameDisabled,\n      isEnabled,\n      deviceTypes,\n      apps,\n      config,\n      newDevice,\n    } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalCreateDevice}\n        onClose={this.close}\n      >\n        <Modal.Header> CREATE DEVICE </Modal.Header>\n\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                className={isConnectionNameDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Mac</label>\n              <input\n                placeholder=\"mac\"\n                onChange={(e) => this.handleChangeThingMac(e)}\n                className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Device type</label>\n              <Dropdown\n                placeholder=\"type\"\n                fluid\n                selection\n                options={deviceTypes}\n                onChange={this.handleChangeDeviceType}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Cycle</label>\n              <input\n                placeholder=\"cycle\"\n                className={!isEnabled ? 'showError' : 'showSuccess'}\n                onChange={(e) => this.handleChangeCycle(e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Checkbox\n                label={\n                  config.sendToApp\n                    ? 'This device will be sent to App'\n                    : 'Click checkbox for send this config to App'\n                }\n                onChange={this.handleChangeSendToApp}\n              />\n              <Checkbox\n                label={\n                  config.sendToDB\n                    ? 'This device have additional info'\n                    : 'Click checkbox for additional info'\n                }\n                onChange={this.handleChangeSendToDB}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToApp ? '' : 'hide'}>\n              <label>Apps</label>\n              <Dropdown\n                placeholder=\"apps\"\n                fluid\n                selection\n                options={apps}\n                onChange={this.handleChangeApp}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Title</label>\n              <input\n                placeholder=\"Device title\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ title: e.target.value })\n                }\n                value={newDevice.title}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Subtitle</label>\n              <input\n                placeholder=\"Device subtitle\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ subtitle: e.target.value })\n                }\n                value={newDevice.subtitle}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Latitude</label>\n              <input\n                placeholder=\"Device latitude\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ latitude: e.target.value })\n                }\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Longitude</label>\n              <input\n                placeholder=\"Device longitude\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ longitude: e.target.value })\n                }\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Asset text</label>\n              <input\n                placeholder=\"Asset text\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ assettext: e.target.value })\n                }\n                value={newDevice.assettext}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Asset value</label>\n              <input\n                placeholder=\"Asset value\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ assetvalue: e.target.value })\n                }\n                value={newDevice.assetvalue}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            {/* <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Severity</label>\n              <input\n                placeholder='Device severity'\n                onChange={e => this.handleChangeNewDevice({severity: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Alert text</label>\n              <input\n                placeholder='Alert text'\n                onChange={e => this.handleChangeNewDevice({alerttext: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Alert value</label>\n              <input\n                placeholder='Alert value'\n                onChange={e => this.handleChangeNewDevice({alertvalue: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Message text</label>\n              <input\n                placeholder='Message text'\n                onChange={e => this.handleChangeNewDevice({messagetext: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field> */}\n          </Form>\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            Cancel\n          </Button>\n          <Button\n            positive\n            icon=\"plus\"\n            labelPosition=\"right\"\n            content=\"Create\"\n            disabled={isThingMacDisabled || isConnectionNameDisabled || !isEnabled}\n            onClick={this.createDeviceConnection}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default DeviceModalCreate\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Modal, Form, Dropdown, Checkbox } from 'semantic-ui-react'\n\nconst alertMessagesText = {\n  title: 'Turbine',\n  subtitle: 'LM2500',\n  assettext: 'MTU',\n  assetvalue: 'operation',\n}\n\nclass DeviceModalEdit extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalEditDevice: false,\n      isEnabled: true,\n      deviceTypes: [],\n      apps: [],\n      config: {},\n      selectedDeviceType: '',\n      selectedApp: '',\n      oldConnections: [],\n      isConnectionNameDisabled: false,\n      handleSendToApp: undefined,\n      handleSendToDB: undefined,\n      editDevice: {\n        id: '',\n        title: alertMessagesText.title,\n        subtitle: alertMessagesText.subtitle,\n        latitude: '',\n        longitude: '',\n        assettext: alertMessagesText.assettext,\n        assetvalue: alertMessagesText.assetvalue,\n        severity: '',\n        alerttext: '',\n        alertvalue: '',\n        messagetext: '',\n      },\n    }\n  }\n\n  getConfigById = async (id) => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((config) => {\n        config.content = JSON.parse(config.content)\n        let selectedApp = config.content.app\n        let selectedDeviceType = config.content.device_type\n        let handleSendToApp = config.content.sendToApp\n        let handleSendToDB = config.content.sendToDB\n        if (this._isMounted) {\n          this.setState({\n            selectedApp,\n            selectedDeviceType,\n            config,\n            handleSendToApp,\n            handleSendToDB,\n          })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        const currentThing = oldThings.filter((item) => {\n          return item.id === this.props.connection.mainflux_id\n        })\n        if (this._isMounted) this.setState({ currentThing: currentThing[0] })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        const connections = oldConnections.filter((item) => {\n          item.content = JSON.parse(item.content)\n          return item.content.type === 'app'\n        })\n        const apps = connections.map((item) => {\n          return { value: item.external_id, text: item.name.split('.')[0] }\n        })\n        if (this._isMounted) this.setState({ apps, oldConnections })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getDeviceTypes = async () => {\n    fetch('http://134.209.240.215:8300/devices')\n      .then((res) => res.json())\n      .then((types) => {\n        const formattedTypes = types.map((type, i) => {\n          return { text: type, value: type }\n        })\n        if (this._isMounted) this.setState({ deviceTypes: formattedTypes })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getChannel = async (appMac) => {\n    const { oldConnections } = this.state\n    let app = oldConnections.filter((item) => {\n      return item.external_id === appMac\n    })\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n\n    var channel = arr.filter((item) => {\n      return item.name === app[0].name\n    })\n    return channel[0]\n  }\n\n  getGlobalChannel = async (channelName) => {\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n    const globalChannel = arr.filter((item) => {\n      return item.name === `zsse/${channelName}`\n    })\n    return globalChannel[0]\n  }\n\n  getDeviceInfoFromDB = async (device_id) => {\n    const device = await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/device/${device_id}`,\n      {\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n      .then((res) => res.json())\n      .catch((e) => console.log(e))\n    const {\n      id,\n      title,\n      subtitle,\n      severity,\n      alerttext,\n      alertvalue,\n      assettext,\n      assetvalue,\n      messagetext,\n      longitude,\n      latitude,\n    } = device\n    this.setState((prevState) => ({\n      editDevice: {\n        ...prevState.editDevice,\n        id,\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      },\n    }))\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextProps === this.props && nextState === this.state)\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    const { external_id, name, content } = this.props.connection\n    this.getConfigById(external_id)\n    this.getThings().then(() => {\n      if (this._isMounted) this.forceUpdate()\n    })\n    this.getDeviceTypes()\n    this.getConnections()\n    if (content.sendToDB) {\n      this.getDeviceInfoFromDB(name.split('/')[1])\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  close = () => {\n    if (this._isMounted) this.setState({ showModalEditDevice: false })\n    this.props.callbackFromParent(this.state.showModalEditDevice)\n  }\n\n  editDevice = async () => {\n    const { config, oldConnections, handleSendToApp, handleSendToDB } = this.state\n    const {\n      name,\n      cycle,\n      device_type,\n      app,\n      sendToApp,\n      sendToDB,\n      mac,\n    } = this.state.config.content\n    let obj = {}\n\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/things/${config.mainflux_id}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n      .then((response) => response.json())\n      .then(async (thing) => {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/things/edit/${config.mainflux_id}`,\n          {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            mode: 'cors',\n            credentials: 'include',\n            body: JSON.stringify({ name, metadata: thing.metadata }),\n          }\n        )\n      })\n\n    let channel = {}\n    if (handleSendToApp) {\n      channel = await this.getChannel(app)\n      obj = {\n        type: 'device',\n        id: config.mainflux_id,\n        mac,\n        channel: channel.id,\n        sendToApp: handleSendToApp,\n        sendToDB: handleSendToDB,\n        name,\n        cycle,\n        device_type,\n        app,\n      }\n    } else {\n      channel = await this.getGlobalChannel(process.env.REACT_APP_CHANNEL_NAME)\n      obj = {\n        type: 'device',\n        id: config.mainflux_id,\n        mac,\n        channel: channel.id,\n        sendToApp: handleSendToApp,\n        sendToDB: handleSendToDB,\n        name,\n        device_type,\n        cycle,\n      }\n    }\n\n    // -- Update Device\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      }\n    )\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/channels/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      }\n    )\n\n    if (sendToDB === true && handleSendToDB === false) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/device/remove/${\n          this.state.editDevice.id.split('/')[1]\n        }`,\n        {\n          method: 'DELETE',\n          mode: 'cors',\n          credentials: 'include',\n        }\n      ).catch((err) => console.log(err))\n    } else if (sendToDB === false && handleSendToDB === true) {\n      const {\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      } = this.state.editDevice\n      let newDevice = {\n        id: this.state.config.content.name.split('/')[1],\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(newDevice),\n      })\n    } else if (sendToDB === true && handleSendToDB === true) {\n      const {\n        id,\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      } = this.state.editDevice\n      let editDevice = {\n        id: this.state.config.content.name.split('/')[1],\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(editDevice),\n      })\n    }\n\n    // -- IF DEVICE CONNECTED TO APP BUT IT SHOULD BE DISCONNECTED -- //\n    if (sendToApp === true && handleSendToApp === false) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n\n          content.devices = content.devices.filter((item) => {\n            return item.device_id !== config.mainflux_id\n          })\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n        })\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        }\n      )\n      this.close()\n      return\n    }\n    // -- IF DEVICE DOESN'T CONNECTED TO APP BUT IT SHOULD BE CONNECTED -- //\n    else if (sendToApp === false && handleSendToApp === true) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          let { content } = response\n          content.devices.push({\n            device_name: `zsse/${obj.name}`,\n            device_id: config.mainflux_id,\n            device_key: config.mainflux_key,\n            device_type: obj.device_type,\n          })\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n        })\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        }\n      )\n      await this.getConnections()\n    }\n\n    if (sendToApp) {\n      // -- Get current Device config\n      const currentDevice = oldConnections.filter((item) => {\n        return item.mainflux_id === config.mainflux_id\n      })\n\n      if (currentDevice[0].content.app !== obj.app) {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${currentDevice[0].content.app}`,\n          {\n            mode: 'cors',\n            credentials: 'include',\n          }\n        )\n          .then((response) => response.json())\n          .then((response) => {\n            response.content = JSON.parse(response.content)\n            const { content } = response\n            content.devices = content.devices.filter((item) => {\n              return item.device_id !== currentDevice[0].mainflux_id\n            })\n\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify({ response }),\n              }\n            )\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n              }\n            )\n          })\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n          const editThing = content.devices.filter((item) => {\n            return item.device_id === config.mainflux_id\n          })\n          if (editThing.length === 0) {\n            content.devices.push({\n              device_name: name,\n              device_id: config.mainflux_id,\n              device_key: config.mainflux_key,\n              device_type,\n            })\n          } else {\n            const editThingIndex = content.devices.indexOf(editThing[0])\n            content.devices[editThingIndex] = {\n              device_name: name,\n              device_id: config.mainflux_id,\n              device_key: config.mainflux_key,\n              device_type,\n            }\n          }\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n            }\n          )\n        })\n    }\n\n    this.close()\n  }\n\n  handleChangeConnectionName = (e) => {\n    const currentValue = e.target.value\n    let arr = this.state.oldConnections.filter((item) => {\n      return item.name === `zsse/${currentValue}`\n    })\n    if (arr.length !== 0) {\n      if (this._isMounted) this.setState({ isConnectionNameDisabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          config: {\n            ...prevState.config,\n            content: {\n              ...prevState.config.content,\n              name: currentValue,\n            },\n          },\n          isConnectionNameDisabled: false,\n        }))\n      }\n    }\n  }\n\n  handleChangeCycle = (e) => {\n    const currentValue = e.target.value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            cycle: currentValue,\n          },\n        },\n        isEnabled:\n          prevState.config.content.cycle.length <= 4 &&\n          /^\\d+$/.test(prevState.config.content.cycle),\n      }))\n    }\n  }\n\n  handleChangeDeviceType = (e, { value }) => {\n    const currentValue = value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            device_type: currentValue,\n          },\n        },\n        selectedDeviceType: value,\n      }))\n    }\n  }\n\n  handleChangeSendToApp = (e, { checked }) => {\n    if (this._isMounted) this.setState({ handleSendToApp: checked })\n    this.getConnections()\n  }\n\n  handleChangeSendToDB = (e, { checked }) => {\n    if (this._isMounted) this.setState({ handleSendToDB: checked })\n  }\n\n  handleChangeApp = (e, { value }) => {\n    const currentValue = value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            app: currentValue,\n          },\n        },\n        selectedApp: value,\n      }))\n    }\n  }\n\n  handleChangeEditDevice = (e) => {\n    if (this._isMounted) {\n      var editDevice = { ...this.state.editDevice }\n      editDevice[Object.keys(e)[0]] = e[Object.keys(e)[0]]\n      this.setState({ editDevice })\n    }\n  }\n\n  render() {\n    const { showModalEditDevice } = this.props\n    const {\n      config,\n      isEnabled,\n      deviceTypes,\n      apps,\n      selectedDeviceType,\n      selectedApp,\n      isConnectionNameDisabled,\n      handleSendToApp,\n      handleSendToDB,\n      editDevice,\n    } = this.state\n    const {\n      title,\n      subtitle,\n      // severity,\n      // alerttext,\n      // alertvalue,\n      assettext,\n      assetvalue,\n      // messagetext,\n      longitude,\n      latitude,\n    } = editDevice\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalEditDevice}\n        onClose={this.close}\n      >\n        <Modal.Header>EDIT DEVICE</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Thing ID</label>\n              <input\n                placeholder=\"mainflux_id\"\n                value={config.content !== undefined ? config.mainflux_id : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Thing Key</label>\n              <input\n                placeholder=\"mainflux_key\"\n                value={config.content !== undefined ? config.mainflux_key : ''}\n                readOnly\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Name </label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                value={config.content !== undefined ? config.content.name : ''}\n                className={isConnectionNameDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Cycle </label>\n              <input\n                placeholder=\"cycle\"\n                value={config.content !== undefined ? config.content.cycle : ''}\n                className={!isEnabled ? 'showError' : 'showSuccess'}\n                onChange={(e) => this.handleChangeCycle(e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Device Type </label>\n              <Dropdown\n                placeholder=\"device type\"\n                fluid\n                selection\n                options={deviceTypes}\n                value={selectedDeviceType}\n                onChange={this.handleChangeDeviceType}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Checkbox\n                label={\n                  handleSendToApp\n                    ? \"This device's config sent to App\"\n                    : \"Click checkbox for send this device's config to App\"\n                }\n                onChange={this.handleChangeSendToApp}\n                checked={handleSendToApp}\n              />\n              <Checkbox\n                label={\n                  handleSendToDB\n                    ? 'This device have additional info'\n                    : 'Click checkbox for additional info'\n                }\n                onChange={this.handleChangeSendToDB}\n                checked={handleSendToDB}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToApp ? '' : 'hide'}>\n              <label>Apps</label>\n              <Dropdown\n                placeholder=\"apps\"\n                fluid\n                selection\n                options={apps}\n                onChange={this.handleChangeApp}\n                value={selectedApp}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Title</label>\n              <input\n                placeholder=\"Device title\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ title: e.target.value })\n                }\n                value={title !== undefined ? title : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Subtitle</label>\n              <input\n                placeholder=\"Device subtitle\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ subtitle: e.target.value })\n                }\n                value={subtitle !== undefined ? subtitle : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Latitude</label>\n              <input\n                placeholder=\"Device latitude\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ latitude: e.target.value })\n                }\n                value={latitude !== undefined ? latitude : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Longitude</label>\n              <input\n                placeholder=\"Device longitude\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ longitude: e.target.value })\n                }\n                value={longitude !== undefined ? longitude : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Asset text</label>\n              <input\n                placeholder=\"Asset text\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ assettext: e.target.value })\n                }\n                value={assettext !== undefined ? assettext : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Asset value</label>\n              <input\n                placeholder=\"Asset value\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ assetvalue: e.target.value })\n                }\n                value={assetvalue !== undefined ? assetvalue : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            {/* <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Severity</label>\n              <input\n                placeholder='Device severity'\n                onChange={e => this.handleChangeEditDevice({severity: e.target.value})}\n                value={severity !== undefined ? severity : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Alert text</label>\n              <input\n                placeholder='Alert text'\n                onChange={e => this.handleChangeEditDevice({alerttext: e.target.value})}\n                value={alerttext !== undefined ? alerttext : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Alert value</label>\n              <input\n                placeholder='Alert value'\n                onChange={e => this.handleChangeEditDevice({alertvalue: e.target.value})}\n                value={alertvalue !== undefined ? alertvalue : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Message text</label>\n              <input\n                placeholder='Message text'\n                onChange={e => this.handleChangeEditDevice({messagetext: e.target.value})}\n                value={messagetext !== undefined ? messagetext : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field> */}\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={this.editDevice}\n            disabled={isConnectionNameDisabled || !isEnabled}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default DeviceModalEdit\n","import React, { Component } from 'react'\nimport './Connections.scss'\nimport { Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass ConnectionModalRemove extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalRemove: false,\n      isRemoveable: true,\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getChannel = async (app) => {\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n\n    var channel = arr.filter((item) => {\n      return item.name === app\n    })\n    return channel[0]\n  }\n\n  removeConnection = async (connection) => {\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/things/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/device/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n    const { sendToApp, app, type } = connection.content\n    if (sendToApp) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n\n          content.devices = content.devices.filter((item) => {\n            return item.device_id !== connection.mainflux_id\n          })\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n        })\n    }\n    if (type === 'app') {\n      let arr = await this.getChannel(connection.name)\n      fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/remove/${arr.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      })\n    }\n\n    if (this._isMounted) this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalRemove, connection.mainflux_id)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { content } = nextProps.connection\n    if (\n      content !== undefined &&\n      content.type === 'app' &&\n      content.devices.length !== 0\n    ) {\n      if (this._isMounted) this.setState({ isRemoveable: false })\n    } else {\n      if (this._isMounted) this.setState({ isRemoveable: true })\n    }\n  }\n\n  close = () => {\n    if (this._isMounted) {\n      this.setState({ showModalRemove: false, isRemoveable: true }, () => {\n        this.props.callbackFromParent(this.state.showModalRemove)\n      })\n    }\n  }\n\n  render() {\n    const { showModalRemove, connection } = this.props\n    const { isRemoveable } = this.state\n    return (\n      <Modal basic size=\"small\" open={showModalRemove}>\n        <Header\n          icon=\"archive\"\n          content={isRemoveable ? 'REMOVE CONNECTION?' : 'CAN NOT REMOVE CONNECTION'}\n        />\n        <Modal.Content>\n          <p>\n            {isRemoveable\n              ? `Do you want to remove connection: ${connection.name}`\n              : `CONNECTION '${connection.name}' HAVE CONNECTED DEVICES. FIRST REMOVE CONNECTED DEVICES.`}\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"red\"\n            inverted\n            onClick={() => {\n              isRemoveable ? this.removeConnection(connection) : this.close()\n            }}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionModalRemove\n","import React, { Component } from 'react'\nimport { Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass ErrorModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalError: false,\n    }\n  }\n\n  close = () => {\n    this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalError)\n  }\n\n  render() {\n    const { showModalError, errorText } = this.props\n\n    return (\n      <Modal basic size=\"small\" open={showModalError}>\n        <Header icon=\"archive\" content=\"ERROR\" />\n        <Modal.Content>\n          <p>{errorText}</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ErrorModal\n","import React, { Component } from 'react'\nimport './Connections.scss'\nimport { Item, Button, Icon, Popup, Loader } from 'semantic-ui-react'\nimport AppModalCreate from '../applications/AppModalCreate'\nimport AppModalEdit from '../applications/AppModalEdit'\nimport DeviceModalCreate from '../devices/DeviceModalCreate'\nimport DeviceModalEdit from '../devices/DeviceModalEdit'\nimport ConnectionModalRemove from './ConnectionModalRemove'\nimport ErrorModal from '../errorModal'\n\nclass Connections extends Component {\n  _isMounted = false\n\n  constructor() {\n    super()\n\n    this.state = {\n      connections: [],\n      showModalCreateApp: false,\n      showModalEditApp: false,\n      showModalCreateDevice: false,\n      showModalEditDevice: false,\n      showModalError: false,\n      edittingApp: {},\n      edittingDevice: {},\n      removingConnection: {},\n      errorText: '',\n      loader: true,\n    }\n  }\n\n  getToken = async () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((connections) => {\n        const parsedConnections = connections.map((item) => {\n          item.content = JSON.parse(item.content)\n          return item\n        })\n        if (this._isMounted)\n          this.setState({ connections: parsedConnections, loader: false })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getToken()\n    this.getConnections()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.getConnections()\n    }\n  }\n\n  createAppModalCallback = (showModalCreateApp, oldConnections) => {\n    if (this._isMounted)\n      this.setState({ showModalCreateApp, connections: oldConnections })\n    this.getConnections()\n  }\n\n  createDeviceModalCallback = (showModalCreateDevice, oldConnections) => {\n    if (this._isMounted)\n      this.setState({ showModalCreateDevice, connections: oldConnections })\n    this.getConnections()\n  }\n\n  removeModalCallback = (showModalRemove, id) => {\n    if (this._isMounted) this.setState({ showModalRemove })\n    if (id) {\n      // FIXME:\n      const connections = this.state.connections\n      let connection = connections.filter((i) => i.mainflux_id === id)\n      const { type, app } = connection[0].content\n      if (type === 'device' && app !== undefined) {\n        let connectedApp = connections.filter((i) => i.external_id === app)\n        const edittedApp = connectedApp[0].content.devices.filter(\n          (i) => i.device_id !== id\n        )\n        connections[\n          connections.indexOf(connectedApp[0])\n        ].content.devices = edittedApp\n        if (this._isMounted) this.setState({ connections })\n      }\n      if (this._isMounted) {\n        this.setState({\n          connections: this.state.connections.filter((i) => i.mainflux_id !== id),\n        })\n      }\n    }\n  }\n\n  editAppModalCallback = (showModalEditApp) => {\n    if (this._isMounted) this.setState({ showModalEditApp })\n    this.getConnections()\n  }\n\n  editDeviceModalCallback = (showModalEditDevice) => {\n    if (this._isMounted) this.setState({ showModalEditDevice })\n    this.getConnections()\n  }\n\n  errorModalCallback = (showModalError) => {\n    if (this._isMounted) this.setState({ showModalError })\n  }\n\n  render() {\n    const {\n      connections,\n      showModalCreateApp,\n      showModalCreateDevice,\n      showModalRemove,\n      showModalEditApp,\n      showModalEditDevice,\n      showModalError,\n      edittingApp,\n      edittingDevice,\n      removingConnection,\n      errorText,\n      loader,\n    } = this.state\n\n    return (\n      <div id=\"connections\" className=\"main_wrapper\">\n        <div className=\"connection_top\">\n          <h1> Connections </h1>\n          <div className=\"connection_btn__wrapper\">\n            <Button\n              icon\n              labelPosition=\"left\"\n              onClick={() => this.setState({ showModalCreateApp: true })}\n            >\n              <Icon name=\"chain\" />\n              Create App\n            </Button>\n            <Button\n              icon\n              labelPosition=\"left\"\n              onClick={() => this.setState({ showModalCreateDevice: true })}\n            >\n              <Icon name=\"chain\" />\n              Create Device\n            </Button>\n          </div>\n        </div>\n        <hr />\n        <Item.Group relaxed>\n          {<Loader active={loader} content=\"Loading\" />}\n          {connections.length === 0 ? (\n            <p>\n              Unfortunately we did not find your connections. It will be great to\n              create some.\n              <span role=\"img\" aria-label=\"Sad\">\n                🙁\n              </span>\n            </p>\n          ) : (\n            connections.map((item) => (\n              <Item key={item.mainflux_id}>\n                <Item.Content verticalAlign=\"middle\">\n                  <Popup\n                    content={\n                      <div>\n                        <p>id: {item.mainflux_id}</p>\n                        <p>key: {item.mainflux_key}</p>\n                      </div>\n                    }\n                    trigger={<Item.Header>{item.name}</Item.Header>}\n                  />\n                  <Item.Description>{item.content.type}</Item.Description>\n                  <Item.Description>{item.external_id}</Item.Description>\n                  <Item.Extra>\n                    <Button\n                      color=\"red\"\n                      floated=\"right\"\n                      icon=\"trash alternate outline\"\n                      labelPosition=\"right\"\n                      content=\"Remove\"\n                      onClick={() =>\n                        this.setState({\n                          showModalRemove: true,\n                          removingConnection: item,\n                        })\n                      }\n                    />\n                    <Button\n                      color=\"yellow\"\n                      floated=\"right\"\n                      icon=\"edit outline\"\n                      labelPosition=\"right\"\n                      content=\"Edit\"\n                      onClick={() =>\n                        item.content.type === 'app'\n                          ? this.setState({\n                              showModalEditApp: true,\n                              edittingApp: item,\n                            })\n                          : this.setState({\n                              showModalEditDevice: true,\n                              edittingDevice: item,\n                            })\n                      }\n                    />\n                  </Item.Extra>\n                </Item.Content>\n              </Item>\n            ))\n          )}\n        </Item.Group>\n\n        {this.state.showModalCreateApp ? (\n          <AppModalCreate\n            showModalCreateApp={showModalCreateApp}\n            callbackFromParent={this.createAppModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalCreateDevice ? (\n          <DeviceModalCreate\n            showModalCreateDevice={showModalCreateDevice}\n            callbackFromParent={this.createDeviceModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalRemove ? (\n          <ConnectionModalRemove\n            showModalRemove={showModalRemove}\n            connection={removingConnection}\n            callbackFromParent={this.removeModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalError ? (\n          <ErrorModal\n            showModalError={showModalError}\n            errorText={errorText}\n            callbackFromParent={this.errorModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalEditApp ? (\n          <AppModalEdit\n            showModalEditApp={showModalEditApp}\n            connection={edittingApp}\n            callbackFromParent={this.editAppModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalEditDevice ? (\n          <DeviceModalEdit\n            showModalEditDevice={showModalEditDevice}\n            connection={edittingDevice}\n            callbackFromParent={this.editDeviceModalCallback}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Connections\n","import React, { Component } from 'react'\nimport './Channels.scss'\nimport { Button, Form, Modal } from 'semantic-ui-react'\n\nclass ChannelModalCreate extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalCreate: false,\n      channel: {\n        name: '',\n        metadata: {},\n      },\n    }\n  }\n\n  createChannel = async (name) => {\n    const { channel } = this.state\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ channel }),\n    })\n    this.close()\n  }\n\n  close = () => {\n    this.setState({ showModalCreate: false })\n    this.props.callbackFromParent(this.state.showModalCreate)\n  }\n\n  handleChangeName = (e) => {\n    let str = e.target.value\n    this.setState((prevState) => ({\n      channel: {\n        ...prevState.channel,\n        name: str,\n      },\n    }))\n  }\n\n  render() {\n    const { showModalCreate } = this.props\n    const { name } = this.state\n\n    return (\n      <Modal closeIcon dimmer=\"blurring\" open={showModalCreate} onClose={this.close}>\n        <Modal.Header>CREATE THING</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"name\"\n                value={name}\n                onChange={(e) => this.handleChangeName(e)}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={() => this.createChannel(name)}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ChannelModalCreate\n","import React, { Component } from 'react'\nimport './Channels.scss'\nimport { Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass ChannelModalRemove extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalRemove: false,\n    }\n  }\n\n  removeChannel = async (id, event) => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/remove/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n    this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalRemove, id)\n  }\n\n  close = () => {\n    this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalRemove)\n  }\n\n  render() {\n    const { showModalRemove, channel } = this.props\n\n    return (\n      <Modal basic size=\"small\" open={showModalRemove}>\n        <Header icon=\"archive\" content=\"REMOVE CHANNEL?\" />\n        <Modal.Content>\n          <p>Do you want to remove channel: {channel.name}</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"red\"\n            inverted\n            onClick={(event) => {\n              this.removeChannel(channel.id, event)\n            }}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ChannelModalRemove\n","import React, { Component } from 'react'\nimport './Channels.scss'\nimport {\n  Item, Button, Icon, Loader,\n} from 'semantic-ui-react'\nimport ChannelModalCreate from './ChannelModalCreate'\nimport ChannelModalRemove from './ChannelModalRemove'\n// import ChannelModalEdit from './ChannelModalEdit';\n\nclass Channels extends Component {\n  constructor() {\n    super()\n    this.state = {\n      channels: [],\n      // edittingChannel: {},\n      removingChannel: {},\n      showModalRemove: false,\n      // showModalEdit: false,\n      showModalCreate: false,\n      loader: true,\n    }\n  }\n\n  async componentDidMount() {\n    await this.getToken()\n    this.getChannels()\n  }\n\n  getToken = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getChannels = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((channels) => this.setState({ channels, loader: false }))\n      .catch((err) => err)\n  }\n\n  removeModalCallback = (showModalRemove, removeItemId) => {\n    this.setState({ showModalRemove })\n    if (removeItemId) {\n      this.setState((prevState) => ({\n        channels: prevState.channels.filter((item) => item.id !== removeItemId),\n      }))\n    }\n  }\n\n  // editModalCallback = showModalEdit => {\n  //   this.setState({ showModalEdit });\n  // };\n\n  createChannelModalCallback = async (showModalCreate) => {\n    this.setState({ showModalCreate })\n    await this.getChannels()\n  }\n\n  render() {\n    const {\n      channels,\n      // showModalEdit,\n      showModalCreate,\n      showModalRemove,\n      removingChannel,\n      // edittingChannel,\n      loader,\n    } = this.state\n\n    return (\n      <div id=\"channels\" className=\"main_wrapper\">\n        <div className=\"channel_top\">\n          <h1>Channels</h1>\n          <Button\n            icon\n            labelPosition=\"left\"\n            onClick={() => this.setState({ showModalCreate: true })}\n          >\n            <Icon name=\"podcast\" />\n            Create Channel\n          </Button>\n        </div>\n        <hr />\n        <Item.Group relaxed>\n          {<Loader active={loader} content=\"Loading\" />}\n          {channels.length === 0 ? (\n            <p>\n              Unfortunately we did not find your channels.\n              <span role=\"img\" aria-label=\"Sad\">\n                🙁\n              </span>\n            </p>\n          ) : (\n            channels.map((item) => (\n              <Item key={item.id}>\n                <Item.Content verticalAlign=\"middle\">\n                  <Item.Header>{item.name}</Item.Header>\n                  <Item.Description>{item.id}</Item.Description>\n                  <Item.Extra>\n                    <Button\n                      color=\"red\"\n                      floated=\"right\"\n                      icon=\"trash alternate outline\"\n                      labelPosition=\"right\"\n                      content=\"Remove\"\n                      onClick={() => this.setState({\n                        showModalRemove: true,\n                        removingChannel: item,\n                      })}\n                    />\n                    {/* <Button\n                      color=\"yellow\"\n                      floated='right'\n                      icon='edit outline'\n                      labelPosition='right'\n                      content=\"Edit\"\n                      onClick={() => this.setState({ showModalEdit: true, edittingChannel: item })}\n                    /> */}\n                  </Item.Extra>\n                </Item.Content>\n              </Item>\n            ))\n          )}\n        </Item.Group>\n\n        {showModalRemove ? (\n          <ChannelModalRemove\n            showModalRemove={showModalRemove}\n            channel={removingChannel}\n            callbackFromParent={this.removeModalCallback}\n          />\n        ) : null}\n\n        {/* {\n          showModalEdit\n          ? <ChannelModalEdit\n              showModalEdit={showModalEdit}\n              channel={edittingChannel}\n              callbackFromParent={this.editModalCallback}\n            />\n          : null\n        } */}\n\n        {showModalCreate ? (\n          <ChannelModalCreate\n            showModalCreate={showModalCreate}\n            callbackFromParent={this.createChannelModalCallback}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Channels\n","import React from 'react'\n\nconst Notfound = () => (\n  <div className=\"main_wrapper\">\n    <h1>Nothing was found</h1>\n    <p>\n      Unfortunately we did not find anything for your request.\n      <span role=\"img\" aria-label=\"Sad\">\n        🙁\n      </span>\n    </p>\n  </div>\n)\n\nexport default Notfound\n","import React, { Component } from 'react'\nimport {\n  Route, Link, BrowserRouter as Router, Switch,\n} from 'react-router-dom'\nimport { Menu } from 'semantic-ui-react'\nimport './App.scss'\nimport 'semantic-ui-css/semantic.min.css'\nimport Main from './components/Main'\nimport TopBar from './components/TopBar'\nimport Connections from './components/connections/Connections'\nimport Channels from './components/channels/Channels'\nimport Notfound from './components/NotFound'\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      home: true,\n      channels: false,\n      connections: false,\n    }\n  }\n\n  handleHome = () => {\n    this.setState({\n      home: true,\n      channels: false,\n      connections: false,\n    })\n  }\n\n  handleChannels = () => {\n    this.setState({\n      home: false,\n      channels: true,\n      connections: false,\n    })\n  }\n\n  handleConnections = () => {\n    this.setState({\n      home: false,\n      channels: false,\n      connections: true,\n    })\n  }\n\n  render() {\n    const { home, channels, connections } = this.state\n\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Router>\n          <div id=\"sidebar_wrapper\">\n            <Menu id=\"sidebar_menu\" secondary vertical>\n              <ul>\n                <li className={home ? 'active_item' : ''}>\n                  <Link onClick={this.handleHome} to=\"/\">\n                    Home\n                  </Link>\n                </li>\n                <li className={channels ? 'active_item' : ''}>\n                  <Link onClick={this.handleChannels} to=\"/channels\">\n                    Channels\n                  </Link>\n                </li>\n                <li className={connections ? 'active_item' : ''}>\n                  <Link onClick={this.handleConnections} to=\"/connections\">\n                    Connections\n                  </Link>\n                </li>\n              </ul>\n            </Menu>\n            <Switch>\n              <Route exact path=\"/\" component={Main} />\n              <Route path=\"/channels\" component={Channels} />\n              <Route path=\"/connections\" component={Connections} />\n              <Route component={Notfound} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n// import Keycloak from 'keycloak-js';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\n// keycloak init options\n// const initOptions = {\n//   url: 'http://key.zeinetsse.com/auth',\n//   realm: 'zeinetsse',\n//   clientId: 'mainflux_admin',\n//   onLoad: 'login-required',\n// };\n\n// const keycloak = Keycloak(initOptions);\n\n// keycloak.init({ onLoad: initOptions.onLoad }).success((auth) => {\n//   if (!auth) {\n//     window.location.reload();\n//   } else {\n//     console.info('Authenticated');\n//   }\n\n//   // React Render\n//   ReactDOM.render(<App />, document.getElementById('root'));\n\n//   localStorage.setItem('react-token', keycloak.token);\n//   localStorage.setItem('react-refresh-token', keycloak.refreshToken);\n\n//   setTimeout(() => {\n//     keycloak.updateToken(70).success((refreshed) => {\n//       if (refreshed) {\n//         console.debug(`Token refreshed${refreshed}`);\n//       } else {\n//         console.warn(`Token not refreshed, valid for ${\n// Math.round(\n//   keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000)}\n//   seconds`);\n//       }\n//     }).error(() => {\n//       console.error('Failed to refresh token');\n//     });\n//   }, 60000);\n// }).error(() => {\n//   console.error('Authenticated Failed');\n// });\n"],"sourceRoot":""}