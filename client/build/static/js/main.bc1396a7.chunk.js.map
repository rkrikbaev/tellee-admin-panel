{"version":3,"sources":["static/icons/turbine.svg","static/icons/pump.svg","static/icons/generator.svg","static/icons/edit.svg","static/icons/delete.svg","types/user.js","shared/reducers/user.js","types/graphs.js","shared/reducers/graphs.js","shared/reducers/rootReducer.js","store/configureStore.js","shared/actions/user.js","components/Home.js","components/TopBar.js","components/applications/AppModalCreate.jsx","components/applications/AppModalEdit.jsx","components/devices/DeviceModalCreate.jsx","components/devices/DeviceModalEdit.jsx","components/connections/ConnectionModalRemove.jsx","components/errorModal.jsx","components/connections/Connections.jsx","components/channels/ChannelModalCreate.jsx","components/channels/ChannelModalRemove.jsx","components/channels/Channels.js","shared/actions/graphs.js","shared/components/GraphActionWindow.jsx","shared/components/ToggleComponent.jsx","shared/components/Timeseries.jsx","shared/components/GraphWrapper/GraphWrapperHeader.jsx","shared/components/GraphWrapper/GraphWrapper.jsx","components/graphs/Graphs.jsx","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ADD_USER","initialState","items","user","userDataReducer","state","arguments","length","undefined","action","type","actionTypes","_objectSpread","concat","Object","toConsumableArray","payload","SHOW_GRAPH_ACTION_WINDOW","ADD_GRAPH_CONFIG","TOGGLE_GRAPH_DRAGGING","DATA_REQUEST_STARTED","DATA_RECIEVE_SUCCESS","DATA_RECIEVE_FAILURE","defaultWidth","defaultHeight","showGraphActionWindow","isGraphDraggable","graphsConfigList","title","device","date","parameter","graphsData","loading","error","graphsDataReducer","graphs_objectSpread","combineReducers","users","graph","graphs","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","addUser","data","dispatch","statusTypes","statusColorTypes","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","getToken","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","process","method","headers","Accept","Content-Type","mode","credentials","body","JSON","stringify","email","stop","getDevicesFromMainflux","then","res","json","devices","parseDataFromBootstrap","catch","err","filter","item","content","parse","map","id","mainflux_id","icon","device_type","name","status","Math","floor","random","ram","memory","customizeDataForRender","forEach","turbine","pump","generator","push","setState","react_default","createElement","className","Card","Group","i","fluid","color","key","src","alt","htmlFor","toUpperCase","role","aria-label","Component","connect","article","trigger","Image","avatar","options","text","TopBar","Segment","clearing","Header","floated","Dropdown","pointing","Console","log","console","AppModalCreate","getThings","oldThings","getConnections","_callee2","_context2","oldConnections","createThing","_callee3","newThing","_context3","createChannel","_callee4","channel","_context4","createAppConnection","_callee5","_this$state","connectionName","callbackFromParent","thing","arr","obj","_this$state2","showModalCreateApp","_context5","oldChannels","sent","t0","mac","metadata","channels","t1","close","_callee6","_this$state3","_context6","handleChangeConnectionName","e","str","target","value","regexpName","test","prevState","AppModalCreate_objectSpread","isConnectionNameEnabled","handleChangeThingMac","regexpMac","isThingMacEnabled","nextProps","nextState","_this2","_this$state4","Modal","closeIcon","dimmer","open","onClose","Content","Form","Field","placeholder","onChange","Actions","Button","onClick","positive","labelPosition","disabled","AppModalEdit","getConfigById","_ref","config","selectedChannels","mainflux_channels","_x","getChannels","chan","editApp","_config$content","showModalEditApp","handleChangeName","handleChangeChannel","_ref4","connection","external_id","readOnly","mainflux_key","multiple","selection","alertMessagesText","subtitle","assettext","assetvalue","DeviceModalCreate","apps","getDeviceTypes","types","formattedTypes","deviceTypes","getChannel","_ref5","appMac","app","abrupt","getGlobalChannel","_ref6","channelName","globalChannel","_x2","createDeviceConnection","_callee7","newDevice","cycle","sendToApp","sendToDB","deviceType","createdThing","severity","alerttext","alertvalue","messagetext","longitude","latitude","createdDevice","showModalCreateDevice","_context7","response","device_name","device_id","device_key","DeviceModalCreate_objectSpread","_callee8","_context8","isConnectionNameDisabled","isThingMacDisabled","handleChangeCycle","isEnabled","handleChangeSendToApp","_ref9","checked","handleChangeSendToDB","_ref10","handleChangeDeviceType","_ref11","handleChangeApp","_ref12","handleChangeNewDevice","keys","alertext","Checkbox","label","DeviceModalEdit","selectedApp","selectedDeviceType","handleSendToApp","handleSendToDB","split","_x3","getDeviceInfoFromDB","deviceId","editDevice","DeviceModalEdit_objectSpread","_x4","showModalEditDevice","_title","_subtitle","_severity","_alerttext","_alertvalue","_assettext","_assetvalue","_messagetext","_longitude","_latitude","editedDevice","currentDevice","_ref8","_x5","editThing","editThingIndex","indexOf","currentValue","handleChangeEditDevice","editingDevice","externalId","forceUpdate","_this3","ConnectionModalRemove","removeConnection","_ref2","showModalRemove","_connection$content","isRemoveable","_this$props","basic","size","inverted","Icon","ErrorModal","showModalError","errorText","Connections","connections","parsedConnections","loader","createAppModalCallback","createDeviceModalCallback","removeModalCallback","_connection$0$content","connectedApp","edittedApp","editAppModalCallback","editDeviceModalCallback","errorModalCallback","edittingApp","edittingDevice","removingConnection","Item","relaxed","Loader","active","verticalAlign","Popup","Description","Extra","applications_AppModalCreate","devices_DeviceModalCreate","connections_ConnectionModalRemove","errorModal","applications_AppModalEdit","devices_DeviceModalEdit","ChannelModalCreate","showModalCreate","ChannelModalCreate_objectSpread","ChannelModalRemove","removeChannel","event","Channels","removeItemId","createChannelModalCallback","_ref3","removingChannel","channels_ChannelModalRemove","channels_ChannelModalCreate","graphActionWindow","addGraphConfigAction","addGraphDataAction","resp","validData","defineProperty","Date","time","toLocaleTimeString","replace","dates","GraphActionWindow","handleChangeData","dropdownValue","GraphActionWindow_objectSpread","handleSubmit","addGraphData","addGraphConfig","isVisible","showEditWindow","graphTitle","graphType","deviceName","deviceParameter","requestDate","ToggleComponent","toggleComponent","opened","Store","subscribe","getState","children","Timeseries","handleMouseEnter","o","dataKey","opacity","Timeseries_objectSpread","handleMouseLeave","uv","prevProps","width","height","param","es6","margin","top","right","left","bottom","strokeDasharray","domain","onMouseEnter","onMouseLeave","strokeOpacity","pv","stroke","activeDot","r","GraphWrapperHeader","handleClick","node","editWindow","info","editBtnRef","React","createRef","removeBtnRef","style","borderTopLeftRadius","borderTopRightRadius","current","ref","EditIcon","RemoveIcon","components_GraphActionWindow","GraphWrapper","_Store$getState$graph","component","components_Timeseries","paddingBottom","lib","default","x","y","background","position","padding","borderRadius","onResize","direction","delta","GraphWrapper_objectSpread","parseInt","cancel","GraphWrapperHeader_GraphWrapperHeader","Graphs","createGraph","_Store$getState$graph2","components_GraphWrapper_GraphWrapper","components_ToggleComponent","Notfound","App","checkActive","location","url","react_router_dom","Menu","secondary","vertical","to","activeClassName","isActive","react_router","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","es","App_App","document","getElementById","URL","href","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bc1396a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/turbine.06474a16.svg\";","module.exports = __webpack_public_path__ + \"static/media/pump.1df4e95b.svg\";","module.exports = __webpack_public_path__ + \"static/media/generator.7a7e96ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.2927f8de.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.650cdc57.svg\";","/* eslint-disable import/prefer-default-export */\n\nexport const ADD_USER = 'ADD_USER'\n","import * as actionTypes from '../../types/user'\n\nconst initialState = {\n  items: [2, 3],\n  user: {},\n}\n\nfunction userDataReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_USER:\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n      }\n    default:\n      return state\n  }\n}\n\nexport default userDataReducer\n","/* eslint-disable import/prefer-default-export */\n\nexport const SHOW_GRAPH_ACTION_WINDOW = 'SHOW_GRAPH_ACTION_WINDOW'\nexport const ADD_GRAPH_CONFIG = 'ADD_GRAPH_CONFIG'\nexport const TOGGLE_GRAPH_DRAGGING = 'TOGGLE_GRAPH_DRAGGING'\nexport const DATA_REQUEST_STARTED = 'DATA_REQUEST_STARTED'\nexport const DATA_RECIEVE_SUCCESS = 'DATA_RECIEVE_SUCCESS'\nexport const DATA_RECIEVE_FAILURE = 'DATA_RECIEVE_FAILURE'\n","import * as actionTypes from '../../types/graphs'\n\nconst initialState = {\n  defaultWidth: 620,\n  defaultHeight: 350,\n  showGraphActionWindow: false,\n  isGraphDraggable: false,\n  graphsConfigList: [\n    {\n      title: 'My Ambient',\n      type: 'timeseries',\n      device: 'turbine',\n      date: '24',\n      parameter: 'Ambient_temp',\n    },\n    {\n      title: 'My Inlete',\n      type: 'timeseries',\n      device: 'turbine',\n      date: '24',\n      parameter: 'Inlete_temp',\n    },\n  ],\n  graphsData: [],\n  loading: false,\n  error: null,\n}\n\nfunction graphsDataReducer(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.SHOW_GRAPH_ACTION_WINDOW:\n      return ({\n        ...state,\n        showGraphActionWindow: action.payload,\n      })\n    case actionTypes.ADD_GRAPH_CONFIG:\n      return ({\n        ...state,\n        graphsConfigList: [...state.graphsConfigList, action.payload],\n      })\n    case actionTypes.TOGGLE_GRAPH_DRAGGING:\n      return ({\n        ...state,\n        isGraphDraggable: action.payload,\n      })\n    case actionTypes.DATA_REQUEST_STARTED:\n      return ({\n        ...state,\n        loading: true,\n      })\n    case actionTypes.DATA_RECIEVE_SUCCESS:\n      return ({\n        ...state,\n        loading: false,\n        error: null,\n        graphsData: [...state.graphsData, action.payload],\n      })\n    case actionTypes.DATA_RECIEVE_FAILURE:\n      return ({\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      })\n    default:\n      return state\n  }\n}\n\nexport default graphsDataReducer\n","import { combineReducers } from 'redux'\nimport user from './user'\nimport graphs from './graphs'\n\nexport default combineReducers({\n  users: user,\n  graph: graphs,\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../shared/reducers/rootReducer'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    // eslint-disable-next-line no-underscore-dangle\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n)\n\nexport default store\n","import * as actionTypes from '../../types/user'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const addUser = (data) => (dispatch) => {\n  dispatch({\n    type: actionTypes.ADD_USER,\n    payload: data, // action payload\n  })\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Card } from 'semantic-ui-react'\nimport { addUser } from '../shared/actions/user'\n\n\nimport 'semantic-ui-css/semantic.min.css'\n\nimport turbine from '../static/icons/turbine.svg'\nimport pump from '../static/icons/pump.svg'\nimport generator from '../static/icons/generator.svg'\n\nconst statusTypes = ['connected', 'not connected']\nconst statusColorTypes = []\n\nclass Home extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      devices: [],\n    }\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillMount() {\n    // eslint-disable-next-line react/destructuring-assignment\n    this.props.addUser('milk')\n  }\n\n  async componentDidMount() {\n    this._isMounted = true\n    await this.getToken()\n    this.getDevicesFromMainflux()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getToken = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getDevicesFromMainflux = () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((devices) => {\n        this.parseDataFromBootstrap(devices)\n      })\n      .catch((err) => err)\n  }\n\n  parseDataFromBootstrap = (devices) => {\n    const data = devices\n      .filter((item) => {\n        item.content = JSON.parse(item.content)\n        return item.content.type === 'device'\n      })\n      .map((item) => ({\n        id: item.mainflux_id,\n        icon: item.content.device_type,\n        name: item.name,\n        status: statusTypes[Math.floor(Math.random() * statusTypes.length)],\n        ram: Math.floor(Math.random() * 100) + 1,\n        memory: `7976/${Math.floor(Math.random() * 7976) + 1}`,\n      }))\n    this.customizeDataForRender(data)\n  }\n\n  customizeDataForRender = (devices) => {\n    devices.forEach((item) => {\n      switch (item.icon) {\n        case 'turbine':\n          item.icon = turbine\n          break\n        case 'e-meter_v2':\n          item.icon = pump\n          break\n        case 'e-meter_v1':\n          item.icon = generator\n          break\n        default:\n          break\n      }\n    })\n\n    devices.forEach((item) => {\n      switch (item.status) {\n        case 'connected':\n          statusColorTypes.push('green')\n          break\n        case 'not connected':\n          statusColorTypes.push('yellow')\n          break\n        default:\n          break\n      }\n    })\n\n    if (this._isMounted) this.setState({ devices })\n  }\n\n  render() {\n    const { devices } = this.state\n    return (\n      <div className=\"main_wrapper\">\n        <h1>Home</h1>\n        <hr />\n        {devices.length !== 0 ? (\n          <Card.Group>\n            {devices.map((item, i) => (\n              <Card\n                fluid\n                color={statusColorTypes[i]}\n                key={item.id}\n                className=\"home_card\"\n              >\n                <img\n                  src={item.icon}\n                  alt={`${item.name}`}\n                  className=\"home_card__item\"\n                />\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"name\">\n                    name:\n                  </label>\n                  {item.name.toUpperCase()}\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"status\">\n                    status:\n                  </label>\n                  {item.status.toUpperCase()}\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"cpu\">\n                    CPU:\n                  </label>\n                  {item.ram}\n%\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"memory\">\n                    memory:\n                  </label>\n                  {item.memory}\n                  kB\n                </p>\n              </Card>\n            ))}\n          </Card.Group>\n        ) : (\n          <p>\n            Here you can put everything your heart desires.\n            <span role=\"img\" aria-label=\"Hooray\">\n              🙂\n            </span>\n          </p>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users.items,\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUser: (article) => dispatch(addUser(article)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n\nHome.propTypes = {\n  addUser: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport {\n  Header, Segment, Dropdown, Image,\n} from 'semantic-ui-react'\n\nconst trigger = (\n  <span>\n    <Image avatar src=\"http://zsse.zeinetsse.com/favicon.ico\" />\n    {' '}\nUser Admin\n  </span>\n)\n\nconst options = [\n  { key: 'user', text: 'Account', icon: 'user' },\n  { key: 'settings', text: 'Settings', icon: 'settings' },\n  { key: 'sign-out', text: 'Sign Out', icon: 'sign out' },\n]\n\nexport default function TopBar() {\n  return (\n    <div id=\"TopBar\">\n      <Segment clearing id=\"top_menu\">\n        <Header className=\"topbar_left\" floated=\"left\">\n          <img className=\"top_logo\" alt=\"Tellee_logo\" src=\"/Tellee_logo.svg\" />\n        </Header>\n        <Header className=\"topbar_right\" floated=\"right\">\n          <Dropdown\n            className=\"top_dropdown\"\n            trigger={trigger}\n            options={options}\n            pointing=\"top left\"\n            icon={null}\n          />\n        </Header>\n      </Segment>\n    </div>\n  )\n}\n","/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport '../connections/Connections.scss'\nimport { Button, Modal, Form } from 'semantic-ui-react'\n\nconst Console = {\n  log: (text) => console.log(text),\n}\nclass AppModalCreate extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalCreateApp: false,\n      isThingMacEnabled: false,\n      isConnectionNameEnabled: false,\n      oldThings: [],\n      oldConnections: [],\n      newThing: {\n        name: '',\n        metadata: {\n          type: 'app',\n          mac: '',\n        },\n      },\n      channel: {\n        name: '',\n        metadata: {},\n      },\n      connectionName: '',\n    }\n\n    this.regexpName = /^\\w+$/\n    this.regexpMac = /^[0-9a-z]{1,2}([.:-])(?:[0-9a-z]{1,2}\\1){4}[0-9a-z]{2}$/gim\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getThings()\n    this.getConnections()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(this.props === nextProps && this.state === nextState)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        if (this._isMounted) {\n          this.setState({ oldThings })\n        }\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        if (this._isMounted) {\n          this.setState({ oldConnections })\n        }\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  createThing = async () => {\n    const { newThing } = this.state\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify(newThing),\n    })\n  }\n\n  createChannel = async () => {\n    const { channel } = this.state\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ channel }),\n    })\n  }\n\n  createAppConnection = async () => {\n    const { newThing, connectionName } = this.state\n    const { callbackFromParent } = this.props\n    let channel\n    let thing\n    try {\n      let arr = []\n      await this.createChannel()\n      arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((res) => res.json())\n        .then((oldChannels) => oldChannels)\n        .catch((err) => Console.log(err))\n      channel = arr.filter((item) => item.name === `zsse/${newThing.name}`)\n      await this.createThing()\n      arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((res) => res.json())\n        .then((oldThings) => oldThings)\n        .catch((err) => Console.log(err))\n\n      thing = arr.filter((item) => item.name === `zsse/${newThing.name}`)\n    } catch (err) {\n      Console.log(err)\n    }\n\n    const obj = {\n      mac: newThing.metadata.mac,\n      id: thing[0].id,\n      channels: `${channel[0].id}`,\n      name: connectionName,\n    }\n\n    try {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/create/app`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(obj),\n      })\n\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel[0].id}/things/${thing[0].id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        },\n      )\n      await this.getConnections()\n\n      // Close and send data to parent\n      const { showModalCreateApp, oldConnections } = this.state\n      if (this._isMounted) {\n        this.setState({ showModalCreateApp: false })\n      }\n      callbackFromParent(showModalCreateApp, oldConnections)\n    } catch (err) {\n      Console.log(err)\n    }\n  }\n\n  close = async () => {\n    const { showModalCreateApp, oldConnections } = this.state\n    const { callbackFromParent } = this.props\n    if (this._isMounted) this.setState({ showModalCreateApp: false })\n    callbackFromParent(showModalCreateApp, oldConnections)\n  }\n\n  handleChangeConnectionName = (e) => {\n    const { oldConnections } = this.state\n    const str = e.target.value\n    const arr = oldConnections.filter((item) => item.name === str)\n    if ((arr.length !== 0 || !this.regexpName.test(str)) && this._isMounted) {\n      this.setState({ isConnectionNameEnabled: true })\n    } else if ((arr.length === 0 || this.regexpName.test(str)) && this._isMounted) {\n      this.setState((prevState) => ({\n        newThing: {\n          ...prevState.newThing,\n          name: str,\n        },\n        channel: {\n          ...prevState.channel,\n          name: str,\n        },\n        connectionName: str,\n        isConnectionNameEnabled: false,\n      }))\n    }\n  }\n\n  handleChangeThingMac = (e) => {\n    const { oldThings } = this.state\n    const str = e.target.value\n    const arr = oldThings.filter((item) => item.metadata.mac === str)\n    if ((arr.length !== 0 || !this.regexpMac.test(str)) && this._isMounted) {\n      this.setState({ isThingMacEnabled: true })\n    } else if ((arr.length === 0 || this.regexpMac.test(str)) && this._isMounted) {\n      this.setState((prevState) => ({\n        newThing: {\n          ...prevState.newThing,\n          metadata: {\n            ...prevState.newThing.metadata,\n            mac: str,\n          },\n        },\n        isThingMacEnabled: false,\n      }))\n    }\n  }\n\n  render() {\n    const { showModalCreateApp } = this.props\n    const { isThingMacEnabled, isConnectionNameEnabled } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalCreateApp}\n        onClose={this.close}\n      >\n        <Modal.Header> CREATE APP </Modal.Header>\n\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"name\"> Name </label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                className={isConnectionNameEnabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"mac\"> Mac </label>\n              <input\n                placeholder=\"mac\"\n                onChange={(e) => this.handleChangeThingMac(e)}\n                className={isThingMacEnabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            Cancel\n          </Button>\n          <Button\n            positive\n            icon=\"plus\"\n            labelPosition=\"right\"\n            content=\"Create\"\n            disabled={isThingMacEnabled || isConnectionNameEnabled}\n            onClick={this.createAppConnection}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default AppModalCreate\n\nAppModalCreate.propTypes = {\n  callbackFromParent: PropTypes.func.isRequired,\n  showModalCreateApp: PropTypes.bool.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport '../connections/Connections.scss'\nimport {\n  Button,\n  Form,\n  Modal,\n  Dropdown,\n} from 'semantic-ui-react'\n\nconst Console = {\n  log: (text) => console.log(text),\n}\n\nclass AppModalEdit extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      config: {},\n      channels: [],\n      selectedChannels: [],\n      showModalEditApp: false,\n    }\n  }\n\n  componentDidMount() {\n    const { connection } = this.props\n    this._isMounted = true\n    this.getConfigById(connection.external_id)\n    this.getChannels()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextProps === this.props && nextState === this.state)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getConfigById = async (id) => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((config) => {\n        const selectedChannels = []\n\n        config.content = JSON.parse(config.content)\n\n        for (let i = 0; i < config.mainflux_channels.length; i += 1) {\n          selectedChannels.push(config.mainflux_channels[i].id)\n        }\n        if (this._isMounted) {\n          this.setState({\n            selectedChannels,\n            config,\n          })\n        }\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  getChannels = async () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((channels) => {\n        const chan = channels.map((item) => ({ value: item.id, text: item.name }))\n        if (this._isMounted) this.setState({ channels: chan })\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  editApp = async () => {\n    const { config } = this.state\n    const { mac, name } = config.content\n    const obj = {\n      mac,\n      id: config.mainflux_id,\n      channels: config.mainflux_channels,\n      name,\n      type: 'app',\n      content: config.content,\n    }\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      },\n    )\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/channels/edit/${obj.channels[0].id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ name: obj.name, metadata: {} }),\n      },\n    )\n\n    this.close()\n  }\n\n  close = () => {\n    const { callbackFromParent } = this.props\n    const { showModalEditApp } = this.state\n    if (this._isMounted) this.setState({ showModalEditApp: false })\n    callbackFromParent(showModalEditApp)\n  }\n\n  handleChangeName = (e) => {\n    const { config } = this.state\n    const obj = config\n    obj.content.name = e.target.value\n    if (this._isMounted) this.setState({ config: obj })\n  }\n\n  handleChangeChannel = (e, { value }) => {\n    const { config } = this.state\n    const obj = config\n    obj.mainflux_channels = value\n    if (this._isMounted) this.setState({ config: obj })\n  }\n\n  render() {\n    const { showModalEditApp } = this.props\n    const { config, channels, selectedChannels } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalEditApp}\n        onClose={this.close}\n      >\n        <Modal.Header>EDIT APPLICATION</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"mainflux_id\">Thing ID</label>\n              <input\n                placeholder=\"mainflux_id\"\n                value={config.content !== undefined ? config.mainflux_id : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label htmlFor=\"mainflux_key\">Thing Key</label>\n              <input\n                placeholder=\"mainflux_key\"\n                value={config.content !== undefined ? config.mainflux_key : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label htmlFor=\"name\">Name</label>\n              <input\n                placeholder=\"name\"\n                value={config.content !== undefined ? config.content.name : ''}\n                onChange={(e) => this.handleChangeName(e)}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label htmlFor=\"channels\">Channels</label>\n              <Dropdown\n                placeholder=\"channels\"\n                multiple\n                fluid\n                selection\n                options={channels}\n                onChange={this.handleChangeChannel}\n                value={selectedChannels}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={this.editApp}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default AppModalEdit\n\nAppModalEdit.propTypes = {\n  connection: PropTypes.instanceOf(Object).isRequired,\n  callbackFromParent: PropTypes.func.isRequired,\n  showModalEditApp: PropTypes.bool.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport '../connections/Connections.scss'\nimport {\n  Button,\n  Form,\n  Modal,\n  Dropdown,\n  Checkbox,\n} from 'semantic-ui-react'\n\nconst alertMessagesText = {\n  title: 'Turbine',\n  subtitle: 'LM2500',\n  assettext: 'MTU',\n  assetvalue: 'operation',\n}\n\nconst Console = {\n  log: (text) => console.log(text),\n}\n\nclass DeviceModalCreate extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      deviceTypes: [],\n      apps: [],\n      oldThings: [],\n      oldConnections: [],\n      isEnabled: true,\n      showModalCreateDevice: false,\n      isThingMacDisabled: false,\n      isConnectionNameDisabled: false,\n      newThing: {\n        name: '',\n        metadata: {\n          type: 'device',\n          mac: '',\n        },\n      },\n      config: {\n        id: '',\n        channel: [],\n        name: '',\n        cycle: '',\n        sendToApp: false,\n        sendToDB: false,\n        deviceType: undefined,\n        app: undefined,\n      },\n      newDevice: {\n        id: '',\n        title: alertMessagesText.title,\n        subtitle: alertMessagesText.subtitle,\n        assettext: alertMessagesText.assettext,\n        assetvalue: alertMessagesText.assetvalue,\n        longitude: '',\n        latitude: '',\n        severity: '',\n        alertext: '',\n        alertvalue: '',\n        messagetext: '',\n      },\n    }\n\n    this.oldThings = []\n    this.regexpName = /^\\w+$/\n    this.regexpMac = /^[0-9a-z]{1,2}([.:-])(?:[0-9a-z]{1,2}\\1){4}[0-9a-z]{2}$/gim\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getThings()\n    this.getConnections()\n    this.getDeviceTypes()\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.getConnections()\n      this.getThings()\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        this.setState({ oldConnections })\n        const connections = oldConnections.filter((item) => {\n          item.content = JSON.parse(item.content)\n          return item.content.type === 'app'\n        })\n        const apps = connections.map((item) => ({\n          key: item.external_id,\n          text: item.name,\n          value: item.external_id,\n        }))\n        if (this._isMounted) this.setState({ apps })\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  getDeviceTypes = async () => {\n    fetch('http://134.209.240.215:8300/devices')\n      .then((res) => res.json())\n      .then((types) => {\n        const formattedTypes = types.map((type) => ({\n          text: type,\n          value: type,\n        }))\n        if (this._isMounted) {\n          this.setState({ deviceTypes: formattedTypes })\n        }\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        this.oldThings = oldThings\n        if (this._isMounted) this.setState({ oldThings })\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  createThing = async () => {\n    const { newThing } = this.state\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify(newThing),\n    })\n  }\n\n  getChannel = async (appMac) => {\n    const { oldConnections } = this.state\n    let channel = []\n    const app = oldConnections.filter((item) => (\n      item.external_id === appMac\n    ))\n    const arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => oldChannels)\n      .catch((err) => Console.log(err))\n\n    channel = arr.filter((item) => (\n      item.name === app[0].name\n    ))\n    return channel[0]\n  }\n\n  getGlobalChannel = async (channelName) => {\n    const arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => oldChannels)\n      .catch((err) => Console.log(err))\n    const globalChannel = arr.filter((item) => (\n      item.name === `zsse/${channelName}`\n    ))\n    return globalChannel[0]\n  }\n\n  // -- Start of creating device --\n  createDeviceConnection = async () => {\n    const { callbackFromParent } = this.props\n    const {\n      newThing,\n      connectionName,\n      config,\n      newDevice,\n    } = this.state\n    const {\n      cycle,\n      sendToApp,\n      sendToDB,\n      deviceType,\n      app,\n    } = config\n    let createdThing = []\n\n    try {\n      await this.createThing()\n      await this.getThings()\n\n      createdThing = this.oldThings.filter((item) => (\n        item.name === `zsse/${newThing.name}`\n      ))\n    } catch (err) {\n      Console.log(err)\n    }\n\n    let obj = {}\n    let channel = {}\n    if (sendToApp) {\n      channel = await this.getChannel(app)\n      obj = {\n        mac: newThing.metadata.mac,\n        id: createdThing[0].id,\n        channel: channel.id,\n        name: connectionName,\n        cycle,\n        sendToApp,\n        sendToDB,\n        deviceType,\n        app,\n      }\n    } else {\n      channel = await this.getGlobalChannel(process.env.REACT_APP_CHANNEL_NAME)\n      obj = {\n        mac: newThing.metadata.mac,\n        id: createdThing[0].id,\n        channel: channel.id,\n        name: connectionName,\n        cycle,\n        deviceType,\n        sendToApp,\n        sendToDB,\n      }\n    }\n\n    try {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/create/device`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n          body: JSON.stringify(obj),\n        },\n      )\n\n      if (sendToApp) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n          mode: 'cors',\n          credentials: 'include',\n        })\n          .then((response) => response.json())\n          .then((response) => {\n            response.content = JSON.parse(response.content)\n            const { content } = response\n            content.devices.push({\n              device_name: `zsse/${connectionName}`,\n              device_id: createdThing[0].id,\n              device_key: createdThing[0].key,\n              deviceType: obj.deviceType,\n            })\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify({ response }),\n              },\n            )\n            // - Connecting to App's channel - //\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${response.mainflux_channels[0].id}/things/${createdThing[0].id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n              },\n            )\n          })\n      } else {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${createdThing[0].id}`,\n          {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            mode: 'cors',\n            credentials: 'include',\n          },\n        )\n      }\n      if (sendToDB) {\n        const {\n          title,\n          subtitle,\n          severity,\n          alerttext,\n          alertvalue,\n          assettext,\n          assetvalue,\n          messagetext,\n          longitude,\n          latitude,\n        } = newDevice\n        const createdDevice = {\n          id: newThing.name,\n          title,\n          subtitle,\n          severity,\n          alerttext,\n          alertvalue,\n          assettext,\n          assetvalue,\n          messagetext,\n          longitude,\n          latitude,\n        }\n\n        await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/create`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n          body: JSON.stringify(createdDevice),\n        })\n      }\n      await this.getConnections()\n\n      // Close and send data to parent\n      const { showModalCreateDevice, oldConnections } = this.state\n      if (this._isMounted) this.setState({ showModalCreateDevice: false })\n      callbackFromParent(showModalCreateDevice, oldConnections)\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          config: {\n            ...prevState.config,\n            sendToApp: false,\n          },\n        }))\n      }\n    } catch (err) {\n      Console.log(err)\n    }\n  }\n  // -- End of creating device --\n\n  close = async () => {\n    const { callbackFromParent } = this.props\n    const { showModalCreateDevice, oldConnections } = this.state\n    this.setState({ showModalCreateDevice: false })\n    this.setState((prevState) => ({\n      config: {\n        ...prevState.config,\n        sendToApp: false,\n      },\n    }))\n    callbackFromParent(showModalCreateDevice, oldConnections)\n  }\n\n  handleChangeConnectionName = (e) => {\n    const { oldConnections } = this.state\n    const str = e.target.value\n    const arr = oldConnections.filter((item) => (\n      item.name === `zsse/${str}`\n    ))\n    if ((arr.length !== 0 || !this.regexpName.test(str)) && this._isMounted) {\n      if (this._isMounted) this.setState({ isConnectionNameDisabled: true })\n    } else if ((arr.length === 0 || this.regexpName.test(str)) && this._isMounted) {\n      this.setState((prevState) => ({\n        newThing: {\n          ...prevState.newThing,\n          name: str,\n        },\n        connectionName: str,\n        isConnectionNameDisabled: false,\n      }))\n    }\n  }\n\n  handleChangeThingMac = (e) => {\n    const { oldThings } = this.state\n    const str = e.target.value\n    const arr = oldThings.filter((item) => (\n      item.metadata.mac === str\n    ))\n    if ((arr.length !== 0 || !this.regexpMac.test(str)) && this._isMounted) {\n      this.setState({ isThingMacDisabled: true })\n    } else if ((arr.length === 0 || this.regexpMac.test(str)) && this._isMounted) {\n      this.setState((prevState) => ({\n        newThing: {\n          ...prevState.newThing,\n          metadata: {\n            ...prevState.newThing.metadata,\n            mac: str,\n          },\n        },\n        isThingMacDisabled: false,\n      }))\n    }\n  }\n\n  // TODO:\n  // handleChangeConfig = e => {\n  //   if(this._isMounted) {\n  //     var config = {...this.state.config};\n  //     config[Object.keys(e)[0]] = e[Object.keys(e)[0]];\n  //     this.setState({config});\n  //   }\n  // };\n\n  handleChangeCycle = (e) => {\n    const str = e.target.value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          cycle: str,\n        },\n        isEnabled:\n          prevState.config.cycle.length <= 4 && /^\\d+$/.test(prevState.config.cycle),\n      }))\n    }\n  }\n\n  handleChangeSendToApp = (e, { checked }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          sendToApp: checked,\n        },\n      }))\n    }\n    this.getConnections()\n  }\n\n  handleChangeSendToDB = (e, { checked }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          sendToDB: checked,\n        },\n      }))\n    }\n  }\n\n  handleChangeDeviceType = (e, { value }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          deviceType: value,\n        },\n      }))\n    }\n  }\n\n  handleChangeApp = (e, { value }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          app: value,\n        },\n      }))\n    }\n  }\n\n  handleChangeNewDevice = (e) => {\n    const { newDevice } = this.state\n    if (this._isMounted) {\n      const createdDevice = { ...newDevice }\n      createdDevice[Object.keys(e)[0]] = e[Object.keys(e)[0]]\n      this.setState({ newDevice: createdDevice })\n    }\n  }\n\n  render() {\n    const { showModalCreateDevice } = this.props\n    const {\n      isThingMacDisabled,\n      isConnectionNameDisabled,\n      isEnabled,\n      deviceTypes,\n      apps,\n      config,\n      newDevice,\n    } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalCreateDevice}\n        onClose={this.close}\n      >\n        <Modal.Header> CREATE DEVICE </Modal.Header>\n\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"mainflux_key\">Name</label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                className={isConnectionNameDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"mainflux_key\">Mac</label>\n              <input\n                placeholder=\"mac\"\n                onChange={(e) => this.handleChangeThingMac(e)}\n                className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"mainflux_key\">Device type</label>\n              <Dropdown\n                placeholder=\"type\"\n                fluid\n                selection\n                options={deviceTypes}\n                onChange={this.handleChangeDeviceType}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"mainflux_key\">Cycle</label>\n              <input\n                placeholder=\"cycle\"\n                className={!isEnabled ? 'showError' : 'showSuccess'}\n                onChange={(e) => this.handleChangeCycle(e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Checkbox\n                label={\n                  config.sendToApp\n                    ? 'This device will be sent to App'\n                    : 'Click checkbox for send this config to App'\n                }\n                onChange={this.handleChangeSendToApp}\n              />\n              <Checkbox\n                label={\n                  config.sendToDB\n                    ? 'This device have additional info'\n                    : 'Click checkbox for additional info'\n                }\n                onChange={this.handleChangeSendToDB}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToApp ? '' : 'hide'}>\n              <label htmlFor=\"mainflux_key\">Apps</label>\n              <Dropdown\n                placeholder=\"apps\"\n                fluid\n                selection\n                options={apps}\n                onChange={this.handleChangeApp}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label htmlFor=\"mainflux_key\">Title</label>\n              <input\n                placeholder=\"Device title\"\n                onChange={(e) => this.handleChangeNewDevice({ title: e.target.value })}\n                value={newDevice.title}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label htmlFor=\"mainflux_key\">Subtitle</label>\n              <input\n                placeholder=\"Device subtitle\"\n                onChange={(e) => this.handleChangeNewDevice({ subtitle: e.target.value })}\n                value={newDevice.subtitle}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label htmlFor=\"mainflux_key\">Latitude</label>\n              <input\n                placeholder=\"Device latitude\"\n                onChange={(e) => this.handleChangeNewDevice({ latitude: e.target.value })}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label htmlFor=\"mainflux_key\">Longitude</label>\n              <input\n                placeholder=\"Device longitude\"\n                onChange={(e) => this.handleChangeNewDevice({ longitude: e.target.value })}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label htmlFor=\"mainflux_key\">Asset text</label>\n              <input\n                placeholder=\"Asset text\"\n                onChange={(e) => this.handleChangeNewDevice({ assettext: e.target.value })}\n                value={newDevice.assettext}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label htmlFor=\"mainflux_key\">Asset value</label>\n              <input\n                placeholder=\"Asset value\"\n                onChange={(e) => this.handleChangeNewDevice({ assetvalue: e.target.value })}\n                value={newDevice.assetvalue}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            Cancel\n          </Button>\n          <Button\n            positive\n            icon=\"plus\"\n            labelPosition=\"right\"\n            content=\"Create\"\n            disabled={isThingMacDisabled || isConnectionNameDisabled || !isEnabled}\n            onClick={this.createDeviceConnection}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default DeviceModalCreate\n\nDeviceModalCreate.propTypes = {\n  callbackFromParent: PropTypes.func.isRequired,\n  showModalCreateDevice: PropTypes.bool.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport '../connections/Connections.scss'\nimport {\n  Button,\n  Modal,\n  Form,\n  Dropdown,\n  Checkbox,\n} from 'semantic-ui-react'\n\nconst alertMessagesText = {\n  title: 'Turbine',\n  subtitle: 'LM2500',\n  assettext: 'MTU',\n  assetvalue: 'operation',\n}\n\nconst Console = {\n  log: (text) => console.log(text),\n}\n\nclass DeviceModalEdit extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalEditDevice: false,\n      isEnabled: true,\n      deviceTypes: [],\n      apps: [],\n      config: {},\n      selectedDeviceType: '',\n      selectedApp: '',\n      oldConnections: [],\n      isConnectionNameDisabled: false,\n      handleSendToApp: undefined,\n      handleSendToDB: undefined,\n      editDevice: {\n        id: '',\n        title: alertMessagesText.title,\n        subtitle: alertMessagesText.subtitle,\n        latitude: '',\n        longitude: '',\n        assettext: alertMessagesText.assettext,\n        assetvalue: alertMessagesText.assetvalue,\n        severity: '',\n        alerttext: '',\n        alertvalue: '',\n        messagetext: '',\n      },\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    const { connection } = this.props\n    const { externalId, name, content } = connection\n    this.getConfigById(externalId)\n    this.getThings().then(() => {\n      if (this._isMounted) this.forceUpdate()\n    })\n    this.getDeviceTypes()\n    this.getConnections()\n    if (content.sendToDB) {\n      this.getDeviceInfoFromDB(name.split('/')[1])\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextProps === this.props && nextState === this.state)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getConfigById = async (id) => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((config) => {\n        config.content = JSON.parse(config.content)\n        const selectedApp = config.content.app\n        const selectedDeviceType = config.content.device_type\n        const handleSendToApp = config.content.sendToApp\n        const handleSendToDB = config.content.sendToDB\n        if (this._isMounted) {\n          this.setState({\n            selectedApp,\n            selectedDeviceType,\n            config,\n            handleSendToApp,\n            handleSendToDB,\n          })\n        }\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  // getThings = async () => {\n  //   const { connection } = this.props\n  //   await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n  //     mode: 'cors',\n  //     credentials: 'include',\n  //   })\n  //     .then((res) => res.json())\n  //     .then((oldThings) => {\n  //       const currentThing = oldThings.filter((item) => item.id === connection.mainflux_id)\n  //       if (this._isMounted) {\n  //         this.setState({ currentThing: currentThing[0] })\n  //       }\n  //     })\n  //     .catch((err) => Console.log(err))\n  // }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        const connections = oldConnections.filter((item) => {\n          item.content = JSON.parse(item.content)\n          return item.content.type === 'app'\n        })\n        const apps = connections.map((item) => ({ value: item.external_id, text: item.name.split('.')[0] }))\n        if (this._isMounted) this.setState({ apps, oldConnections })\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  getDeviceTypes = async () => {\n    fetch('http://134.209.240.215:8300/devices')\n      .then((res) => res.json())\n      .then((types) => {\n        const formattedTypes = types.map((type) => ({ text: type, value: type }))\n        if (this._isMounted) this.setState({ deviceTypes: formattedTypes })\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  getChannel = async (appMac) => {\n    const { oldConnections } = this.state\n    const app = oldConnections.filter((item) => item.external_id === appMac)\n    const arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => oldChannels)\n      .catch((err) => Console.log(err))\n\n    const channel = arr.filter((item) => item.name === app[0].name)\n    return channel[0]\n  }\n\n  getGlobalChannel = async (channelName) => {\n    const arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => oldChannels)\n      .catch((err) => Console.log(err))\n    const globalChannel = arr.filter((item) => item.name === `zsse/${channelName}`)\n    return globalChannel[0]\n  }\n\n  getDeviceInfoFromDB = async (deviceId) => {\n    const device = await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/device/${deviceId}`,\n      {\n        mode: 'cors',\n        credentials: 'include',\n      },\n    )\n      .then((res) => res.json())\n      .catch((e) => Console.log(e))\n    const {\n      id,\n      title,\n      subtitle,\n      severity,\n      alerttext,\n      alertvalue,\n      assettext,\n      assetvalue,\n      messagetext,\n      longitude,\n      latitude,\n    } = device\n    this.setState((prevState) => ({\n      editDevice: {\n        ...prevState.editDevice,\n        id,\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      },\n    }))\n  }\n\n  close = () => {\n    const { callbackFromParent } = this.props\n    const { showModalEditDevice } = this.state\n    if (this._isMounted) this.setState({ showModalEditDevice: false })\n    callbackFromParent(showModalEditDevice)\n  }\n\n  editDevice = async () => {\n    const {\n      config,\n      oldConnections,\n      handleSendToApp,\n      handleSendToDB,\n      editDevice,\n    } = this.state\n    const {\n      name,\n      cycle,\n      deviceType,\n      app,\n      sendToApp,\n      sendToDB,\n      mac,\n    } = config.content\n    let obj = {}\n\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/things/${config.mainflux_id}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      },\n    )\n      .then((response) => response.json())\n      .then(async (thing) => {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/things/edit/${config.mainflux_id}`,\n          {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            mode: 'cors',\n            credentials: 'include',\n            body: JSON.stringify({ name, metadata: thing.metadata }),\n          },\n        )\n      })\n\n    let channel = {}\n    if (handleSendToApp) {\n      channel = await this.getChannel(app)\n      obj = {\n        type: 'device',\n        id: config.mainflux_id,\n        mac,\n        channel: channel.id,\n        sendToApp: handleSendToApp,\n        sendToDB: handleSendToDB,\n        name,\n        cycle,\n        deviceType,\n        app,\n      }\n    } else {\n      channel = await this.getGlobalChannel(process.env.REACT_APP_CHANNEL_NAME)\n      obj = {\n        type: 'device',\n        id: config.mainflux_id,\n        mac,\n        channel: channel.id,\n        sendToApp: handleSendToApp,\n        sendToDB: handleSendToDB,\n        name,\n        deviceType,\n        cycle,\n      }\n    }\n\n    // -- Update Device\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      },\n    )\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/channels/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      },\n    )\n\n    if (sendToDB === true && handleSendToDB === false) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/device/remove/${\n          editDevice.id.split('/')[1]\n        }`,\n        {\n          method: 'DELETE',\n          mode: 'cors',\n          credentials: 'include',\n        },\n      ).catch((err) => Console.log(err))\n    } else if (sendToDB === false && handleSendToDB === true) {\n      const {\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      } = editDevice\n      const newDevice = {\n        id: config.content.name.split('/')[1],\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(newDevice),\n      })\n    } else if (sendToDB === true && handleSendToDB === true) {\n      const {\n        id,\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      } = editDevice\n      const editedDevice = {\n        id: config.content.name.split('/')[1],\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(editedDevice),\n      })\n    }\n\n    // -- IF DEVICE CONNECTED TO APP BUT IT SHOULD BE DISCONNECTED -- //\n    if (sendToApp === true && handleSendToApp === false) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n\n          content.devices = content.devices.filter((item) => item.device_id !== config.mainflux_id)\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            },\n          )\n        })\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        },\n      )\n      this.close()\n      return\n    }\n    // -- IF DEVICE DOESN'T CONNECTED TO APP BUT IT SHOULD BE CONNECTED -- //\n    if (sendToApp === false && handleSendToApp === true) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n          content.devices.push({\n            device_name: `zsse/${obj.name}`,\n            device_id: config.mainflux_id,\n            device_key: config.mainflux_key,\n            device_type: obj.device_type,\n          })\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            },\n          )\n        })\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        },\n      )\n      await this.getConnections()\n    }\n\n    if (sendToApp) {\n      // -- Get current Device config\n      const currentDevice = oldConnections.filter((item) => item.mainflux_id === config.mainflux_id)\n\n      if (currentDevice[0].content.app !== obj.app) {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${currentDevice[0].content.app}`,\n          {\n            mode: 'cors',\n            credentials: 'include',\n          },\n        )\n          .then((response) => response.json())\n          .then((response) => {\n            response.content = JSON.parse(response.content)\n            const { content } = response\n            content.devices = content.devices\n              .filter((item) => item.device_id !== currentDevice[0].mainflux_id)\n\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify({ response }),\n              },\n            )\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n              },\n            )\n          })\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n          const editThing = content.devices.filter((item) => item.device_id === config.mainflux_id)\n          if (editThing.length === 0) {\n            content.devices.push({\n              device_name: name,\n              device_id: config.mainflux_id,\n              device_key: config.mainflux_key,\n              deviceType,\n            })\n          } else {\n            const editThingIndex = content.devices.indexOf(editThing[0])\n            content.devices[editThingIndex] = {\n              device_name: name,\n              device_id: config.mainflux_id,\n              device_key: config.mainflux_key,\n              deviceType,\n            }\n          }\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            },\n          )\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n            },\n          )\n        })\n    }\n\n    this.close()\n  }\n\n  handleChangeConnectionName = (e) => {\n    const { oldConnections } = this.state\n    const currentValue = e.target.value\n    const arr = oldConnections.filter((item) => item.name === `zsse/${currentValue}`)\n    if (arr.length !== 0 && this._isMounted) {\n      this.setState({ isConnectionNameDisabled: true })\n    } else if (arr.length === 0 && this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            name: currentValue,\n          },\n        },\n        isConnectionNameDisabled: false,\n      }))\n    }\n  }\n\n  handleChangeCycle = (e) => {\n    const currentValue = e.target.value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            cycle: currentValue,\n          },\n        },\n        isEnabled:\n          prevState.config.content.cycle.length <= 4\n          && /^\\d+$/.test(prevState.config.content.cycle),\n      }))\n    }\n  }\n\n  handleChangeDeviceType = (e, { value }) => {\n    const currentValue = value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            device_type: currentValue,\n          },\n        },\n        selectedDeviceType: value,\n      }))\n    }\n  }\n\n  handleChangeSendToApp = (e, { checked }) => {\n    if (this._isMounted) this.setState({ handleSendToApp: checked })\n    this.getConnections()\n  }\n\n  handleChangeSendToDB = (e, { checked }) => {\n    if (this._isMounted) this.setState({ handleSendToDB: checked })\n  }\n\n  handleChangeApp = (e, { value }) => {\n    const currentValue = value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            app: currentValue,\n          },\n        },\n        selectedApp: value,\n      }))\n    }\n  }\n\n  handleChangeEditDevice = (e) => {\n    const { editDevice } = this.state\n    if (this._isMounted) {\n      const editingDevice = { ...editDevice }\n      editingDevice[Object.keys(e)[0]] = e[Object.keys(e)[0]]\n      this.setState({ editDevice: editingDevice })\n    }\n  }\n\n  render() {\n    const { showModalEditDevice } = this.props\n    const {\n      config,\n      isEnabled,\n      deviceTypes,\n      apps,\n      selectedDeviceType,\n      selectedApp,\n      isConnectionNameDisabled,\n      handleSendToApp,\n      handleSendToDB,\n      editDevice,\n    } = this.state\n    const {\n      title,\n      subtitle,\n      // severity,\n      // alerttext,\n      // alertvalue,\n      assettext,\n      assetvalue,\n      // messagetext,\n      longitude,\n      latitude,\n    } = editDevice\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalEditDevice}\n        onClose={this.close}\n      >\n        <Modal.Header>EDIT DEVICE</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"mainflux_id\">Thing ID</label>\n              <input\n                placeholder=\"mainflux_id\"\n                value={config.content !== undefined ? config.mainflux_id : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label htmlFor=\"mainflux_key\">Thing Key</label>\n              <input\n                placeholder=\"mainflux_key\"\n                value={config.content !== undefined ? config.mainflux_key : ''}\n                readOnly\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"name\"> Name </label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                value={config.content !== undefined ? config.content.name : ''}\n                className={isConnectionNameDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"cycle\"> Cycle </label>\n              <input\n                placeholder=\"cycle\"\n                value={config.content !== undefined ? config.content.cycle : ''}\n                className={!isEnabled ? 'showError' : 'showSuccess'}\n                onChange={(e) => this.handleChangeCycle(e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"device_type\"> Device Type </label>\n              <Dropdown\n                placeholder=\"device type\"\n                fluid\n                selection\n                options={deviceTypes}\n                value={selectedDeviceType}\n                onChange={this.handleChangeDeviceType}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Checkbox\n                label={\n                  handleSendToApp\n                    ? \"This device's config sent to App\"\n                    : \"Click checkbox for send this device's config to App\"\n                }\n                onChange={this.handleChangeSendToApp}\n                checked={handleSendToApp}\n              />\n              <Checkbox\n                label={\n                  handleSendToDB\n                    ? 'This device have additional info'\n                    : 'Click checkbox for additional info'\n                }\n                onChange={this.handleChangeSendToDB}\n                checked={handleSendToDB}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToApp ? '' : 'hide'}>\n              <label htmlFor=\"apps\">Apps</label>\n              <Dropdown\n                placeholder=\"apps\"\n                fluid\n                selection\n                options={apps}\n                onChange={this.handleChangeApp}\n                value={selectedApp}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label htmlFor=\"title\">Title</label>\n              <input\n                placeholder=\"Device title\"\n                onChange={(e) => this.handleChangeEditDevice({ title: e.target.value })}\n                value={title !== undefined ? title : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label htmlFor=\"subtitle\">Subtitle</label>\n              <input\n                placeholder=\"Device subtitle\"\n                onChange={(e) => this.handleChangeEditDevice({ subtitle: e.target.value })}\n                value={subtitle !== undefined ? subtitle : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label htmlFor=\"latitude\">Latitude</label>\n              <input\n                placeholder=\"Device latitude\"\n                onChange={(e) => this.handleChangeEditDevice({ latitude: e.target.value })}\n                value={latitude !== undefined ? latitude : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label htmlFor=\"longitude\">Longitude</label>\n              <input\n                placeholder=\"Device longitude\"\n                onChange={(e) => this.handleChangeEditDevice({ longitude: e.target.value })}\n                value={longitude !== undefined ? longitude : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label htmlFor=\"asset_text\">Asset text</label>\n              <input\n                placeholder=\"Asset text\"\n                onChange={(e) => this.handleChangeEditDevice({ assettext: e.target.value })}\n                value={assettext !== undefined ? assettext : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label htmlFor=\"asset_value\">Asset value</label>\n              <input\n                placeholder=\"Asset value\"\n                onChange={(e) => this.handleChangeEditDevice({ assetvalue: e.target.value })}\n                value={assetvalue !== undefined ? assetvalue : ''}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={this.editDevice}\n            disabled={isConnectionNameDisabled || !isEnabled}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default DeviceModalEdit\n\nDeviceModalEdit.propTypes = {\n  connection: PropTypes.instanceOf(Object).isRequired,\n  callbackFromParent: PropTypes.func.isRequired,\n  showModalEditDevice: PropTypes.bool.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Connections.scss'\nimport {\n  Button,\n  Header,\n  Modal,\n  Icon,\n} from 'semantic-ui-react'\n\nconst Console = {\n  log: (text) => console.log(text),\n}\n\nclass ConnectionModalRemove extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalRemove: false,\n      isRemoveable: true,\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { content } = nextProps.connection\n    if (\n      (content !== undefined\n      && content.type === 'app'\n      && content.devices.length !== 0)\n      && this._isMounted\n    ) {\n      this.setState({ isRemoveable: false })\n    } else if (\n      (content !== undefined\n      && content.type !== 'app'\n      && content.devices.length === 0)\n      && this._isMounted) {\n      this.setState({ isRemoveable: true })\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getChannel = async (app) => {\n    const arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => oldChannels)\n      .catch((err) => Console.log(err))\n\n    const channel = arr.filter((item) => item.name === app)\n    return channel[0]\n  }\n\n  removeConnection = async (connection) => {\n    const { callbackFromParent } = this.props\n    const { showModalRemove } = this.state\n    const { sendToApp, app, type } = connection.content\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/things/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      },\n    )\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      },\n    )\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/device/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      },\n    )\n    if (sendToApp) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n\n          content.devices = content.devices.filter((item) => (\n            item.device_id !== connection.mainflux_id))\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            },\n          )\n        })\n    }\n    if (type === 'app') {\n      const arr = await this.getChannel(connection.name)\n      fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/remove/${arr.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      })\n    }\n\n    if (this._isMounted) {\n      this.setState({ showModalRemove: false })\n    }\n    callbackFromParent(showModalRemove, connection.mainflux_id)\n  }\n\n  close = () => {\n    const { callbackFromParent } = this.props\n    const { showModalRemove } = this.state\n    if (this._isMounted) {\n      this.setState({ showModalRemove: false, isRemoveable: true }, () => {\n        callbackFromParent(showModalRemove)\n      })\n    }\n  }\n\n  render() {\n    const { showModalRemove, connection } = this.props\n    const { isRemoveable } = this.state\n    return (\n      <Modal basic size=\"small\" open={showModalRemove}>\n        <Header\n          icon=\"archive\"\n          content={isRemoveable ? 'REMOVE CONNECTION?' : 'CAN NOT REMOVE CONNECTION'}\n        />\n        <Modal.Content>\n          <p>\n            {isRemoveable\n              ? `Do you want to remove connection: ${connection.name}`\n              : `CONNECTION '${connection.name}' HAVE CONNECTED DEVICES. FIRST REMOVE CONNECTED DEVICES.`}\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" />\n            {' '}\n            No\n          </Button>\n          <Button\n            color=\"red\"\n            inverted\n            onClick={() => (isRemoveable ? this.removeConnection(connection) : this.close())}\n          >\n            <Icon name=\"checkmark\" />\n            {' '}\n            Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionModalRemove\n\nConnectionModalRemove.propTypes = {\n  connection: PropTypes.instanceOf(Object).isRequired,\n  callbackFromParent: PropTypes.func.isRequired,\n  showModalRemove: PropTypes.bool.isRequired,\n}\n","import React, { Component } from 'react'\nimport { Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass ErrorModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalError: false,\n    }\n  }\n\n  close = () => {\n    this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalError)\n  }\n\n  render() {\n    const { showModalError, errorText } = this.props\n\n    return (\n      <Modal basic size=\"small\" open={showModalError}>\n        <Header icon=\"archive\" content=\"ERROR\" />\n        <Modal.Content>\n          <p>{errorText}</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ErrorModal\n","import React, { Component } from 'react'\nimport './Connections.scss'\nimport {\n  Item,\n  Button,\n  Icon,\n  Popup,\n  Loader,\n} from 'semantic-ui-react'\nimport AppModalCreate from '../applications/AppModalCreate'\nimport AppModalEdit from '../applications/AppModalEdit'\nimport DeviceModalCreate from '../devices/DeviceModalCreate'\nimport DeviceModalEdit from '../devices/DeviceModalEdit'\nimport ConnectionModalRemove from './ConnectionModalRemove'\nimport ErrorModal from '../errorModal'\n\nconst Console = {\n  log: (text) => console.log(text),\n}\n\nclass Connections extends Component {\n  _isMounted = false\n\n  constructor() {\n    super()\n\n    this.state = {\n      connections: [],\n      showModalCreateApp: false,\n      showModalEditApp: false,\n      showModalCreateDevice: false,\n      showModalEditDevice: false,\n      showModalError: false,\n      edittingApp: {},\n      edittingDevice: {},\n      removingConnection: {},\n      errorText: '',\n      loader: true,\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getToken()\n    this.getConnections()\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.getConnections()\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getToken = async () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((connections) => {\n        const parsedConnections = connections.map((item) => {\n          item.content = JSON.parse(item.content)\n          return item\n        })\n        if (this._isMounted) {\n          this.setState({ connections: parsedConnections, loader: false })\n        }\n      })\n      .catch((err) => Console.log(err))\n  }\n\n  createAppModalCallback = (showModalCreateApp, oldConnections) => {\n    if (this._isMounted) {\n      this.setState({ showModalCreateApp, connections: oldConnections })\n    }\n    this.getConnections()\n  }\n\n  createDeviceModalCallback = (showModalCreateDevice, oldConnections) => {\n    if (this._isMounted) {\n      this.setState({ showModalCreateDevice, connections: oldConnections })\n    }\n    this.getConnections()\n  }\n\n  removeModalCallback = (showModalRemove, id) => {\n    const { connections } = this.state\n    if (this._isMounted) this.setState({ showModalRemove })\n    if (id) {\n      // FIXME:\n      const bunchOfConnections = connections\n      const connection = bunchOfConnections.filter((i) => i.mainflux_id === id)\n      const { type, app } = connection[0].content\n      if (type === 'device' && app !== undefined) {\n        const connectedApp = connections.filter((i) => i.external_id === app)\n        const edittedApp = connectedApp[0].content.devices.filter(\n          (i) => i.device_id !== id,\n        )\n        connections[\n          connections.indexOf(connectedApp[0])\n        ].content.devices = edittedApp\n        if (this._isMounted) this.setState({ connections })\n      }\n      if (this._isMounted) {\n        this.setState({\n          connections: connections.filter((i) => i.mainflux_id !== id),\n        })\n      }\n    }\n  }\n\n  editAppModalCallback = (showModalEditApp) => {\n    if (this._isMounted) this.setState({ showModalEditApp })\n    this.getConnections()\n  }\n\n  editDeviceModalCallback = (showModalEditDevice) => {\n    if (this._isMounted) this.setState({ showModalEditDevice })\n    this.getConnections()\n  }\n\n  errorModalCallback = (showModalError) => {\n    if (this._isMounted) this.setState({ showModalError })\n  }\n\n  render() {\n    const {\n      connections,\n      showModalCreateApp,\n      showModalCreateDevice,\n      showModalRemove,\n      showModalEditApp,\n      showModalEditDevice,\n      showModalError,\n      edittingApp,\n      edittingDevice,\n      removingConnection,\n      errorText,\n      loader,\n    } = this.state\n\n    return (\n      <div id=\"connections\" className=\"main_wrapper\">\n        <div className=\"connection_top\">\n          <h1> Connections </h1>\n          <div className=\"connection_btn__wrapper\">\n            <Button\n              icon\n              labelPosition=\"left\"\n              onClick={() => this.setState({ showModalCreateApp: true })}\n            >\n              <Icon name=\"chain\" />\n              Create App\n            </Button>\n            <Button\n              icon\n              labelPosition=\"left\"\n              onClick={() => this.setState({ showModalCreateDevice: true })}\n            >\n              <Icon name=\"chain\" />\n              Create Device\n            </Button>\n          </div>\n        </div>\n        <hr />\n        <Item.Group relaxed>\n          {<Loader active={loader} content=\"Loading\" />}\n          {connections.length === 0 ? (\n            <p>\n              Unfortunately we did not find your connections. It will be great to\n              create some.\n              <span role=\"img\" aria-label=\"Sad\">\n                🙁\n              </span>\n            </p>\n          ) : (\n            connections.map((item) => (\n              <Item key={item.mainflux_id}>\n                <Item.Content verticalAlign=\"middle\">\n                  <Popup\n                    content={(\n                      <div>\n                        <p>\n                          id:\n                          {' '}\n                          {item.mainflux_id}\n                        </p>\n                        <p>\n                          key:\n                          {' '}\n                          {item.mainflux_key}\n                        </p>\n                      </div>\n                    )}\n                    trigger={<Item.Header>{item.name}</Item.Header>}\n                  />\n                  <Item.Description>{item.content.type}</Item.Description>\n                  <Item.Description>{item.external_id}</Item.Description>\n                  <Item.Extra>\n                    <Button\n                      color=\"red\"\n                      floated=\"right\"\n                      icon=\"trash alternate outline\"\n                      labelPosition=\"right\"\n                      content=\"Remove\"\n                      onClick={() => this.setState({\n                        showModalRemove: true,\n                        removingConnection: item,\n                      })}\n                    />\n                    <Button\n                      color=\"yellow\"\n                      floated=\"right\"\n                      icon=\"edit outline\"\n                      labelPosition=\"right\"\n                      content=\"Edit\"\n                      onClick={() => (item.content.type === 'app'\n                        ? this.setState({\n                          showModalEditApp: true,\n                          edittingApp: item,\n                        })\n                        : this.setState({\n                          showModalEditDevice: true,\n                          edittingDevice: item,\n                        }))}\n                    />\n                  </Item.Extra>\n                </Item.Content>\n              </Item>\n            ))\n          )}\n        </Item.Group>\n\n        {showModalCreateApp ? (\n          <AppModalCreate\n            showModalCreateApp={showModalCreateApp}\n            callbackFromParent={this.createAppModalCallback}\n          />\n        ) : null}\n\n        {showModalCreateDevice ? (\n          <DeviceModalCreate\n            showModalCreateDevice={showModalCreateDevice}\n            callbackFromParent={this.createDeviceModalCallback}\n          />\n        ) : null}\n\n        {showModalRemove ? (\n          <ConnectionModalRemove\n            showModalRemove={showModalRemove}\n            connection={removingConnection}\n            callbackFromParent={this.removeModalCallback}\n          />\n        ) : null}\n\n        {showModalError ? (\n          <ErrorModal\n            showModalError={showModalError}\n            errorText={errorText}\n            callbackFromParent={this.errorModalCallback}\n          />\n        ) : null}\n\n        {showModalEditApp ? (\n          <AppModalEdit\n            showModalEditApp={showModalEditApp}\n            connection={edittingApp}\n            callbackFromParent={this.editAppModalCallback}\n          />\n        ) : null}\n\n        {showModalEditDevice ? (\n          <DeviceModalEdit\n            showModalEditDevice={showModalEditDevice}\n            connection={edittingDevice}\n            callbackFromParent={this.editDeviceModalCallback}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Connections\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Channels.scss'\nimport { Button, Form, Modal } from 'semantic-ui-react'\n\nclass ChannelModalCreate extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalCreate: false,\n      channel: {\n        name: '',\n        metadata: {},\n      },\n    }\n  }\n\n  createChannel = async () => {\n    const { channel } = this.state\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ channel }),\n    })\n    this.close()\n  }\n\n  close = () => {\n    const { callbackFromParent } = this.props\n    const { showModalCreate } = this.state\n    this.setState({ showModalCreate: false })\n    callbackFromParent(showModalCreate)\n  }\n\n  handleChangeName = (e) => {\n    const str = e.target.value\n    this.setState((prevState) => ({\n      channel: {\n        ...prevState.channel,\n        name: str,\n      },\n    }))\n  }\n\n  render() {\n    const { showModalCreate } = this.props\n    const { name } = this.state\n\n    return (\n      <Modal closeIcon dimmer=\"blurring\" open={showModalCreate} onClose={this.close}>\n        <Modal.Header>CREATE THING</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"name\">Name</label>\n              <input\n                placeholder=\"name\"\n                value={name}\n                onChange={(e) => this.handleChangeName(e)}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={() => this.createChannel(name)}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ChannelModalCreate\n\nChannelModalCreate.propTypes = {\n  callbackFromParent: PropTypes.func.isRequired,\n  showModalCreate: PropTypes.bool.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Channels.scss'\nimport {\n  Button,\n  Header,\n  Modal,\n  Icon,\n} from 'semantic-ui-react'\n\nclass ChannelModalRemove extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalRemove: false,\n    }\n  }\n\n  removeChannel = async (id) => {\n    const { callbackFromParent } = this.props\n    const { showModalRemove } = this.state\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/remove/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n    this.setState({ showModalRemove: false })\n    callbackFromParent(showModalRemove, id)\n  }\n\n  close = () => {\n    const { callbackFromParent } = this.props\n    const { showModalRemove } = this.state\n    this.setState({ showModalRemove: false })\n    callbackFromParent(showModalRemove)\n  }\n\n  render() {\n    const { showModalRemove, channel } = this.props\n\n    return (\n      <Modal basic size=\"small\" open={showModalRemove}>\n        <Header icon=\"archive\" content=\"REMOVE CHANNEL?\" />\n        <Modal.Content>\n          <p>\n            Do you want to remove channel:\n            {' '}\n            {channel.name}\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" />\n            {' '}\n            No\n          </Button>\n          <Button\n            color=\"red\"\n            inverted\n            onClick={(event) => {\n              this.removeChannel(channel.id, event)\n            }}\n          >\n            <Icon name=\"checkmark\" />\n            {' '}\n            Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ChannelModalRemove\n\nChannelModalRemove.propTypes = {\n  channel: PropTypes.instanceOf(Object).isRequired,\n  callbackFromParent: PropTypes.func.isRequired,\n  showModalRemove: PropTypes.bool.isRequired,\n}\n","import React, { Component } from 'react'\nimport './Channels.scss'\nimport {\n  Item, Button, Icon, Loader,\n} from 'semantic-ui-react'\nimport ChannelModalCreate from './ChannelModalCreate'\nimport ChannelModalRemove from './ChannelModalRemove'\n// import ChannelModalEdit from './ChannelModalEdit';\n\nclass Channels extends Component {\n  constructor() {\n    super()\n    this.state = {\n      channels: [],\n      // edittingChannel: {},\n      removingChannel: {},\n      showModalRemove: false,\n      // showModalEdit: false,\n      showModalCreate: false,\n      loader: true,\n    }\n  }\n\n  async componentDidMount() {\n    await this.getToken()\n    this.getChannels()\n  }\n\n  getToken = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getChannels = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((channels) => this.setState({ channels, loader: false }))\n      .catch((err) => err)\n  }\n\n  removeModalCallback = (showModalRemove, removeItemId) => {\n    this.setState({ showModalRemove })\n    if (removeItemId) {\n      this.setState((prevState) => ({\n        channels: prevState.channels.filter((item) => item.id !== removeItemId),\n      }))\n    }\n  }\n\n  // editModalCallback = showModalEdit => {\n  //   this.setState({ showModalEdit });\n  // };\n\n  createChannelModalCallback = async (showModalCreate) => {\n    this.setState({ showModalCreate })\n    await this.getChannels()\n  }\n\n  render() {\n    const {\n      channels,\n      // showModalEdit,\n      showModalCreate,\n      showModalRemove,\n      removingChannel,\n      // edittingChannel,\n      loader,\n    } = this.state\n\n    return (\n      <div id=\"channels\" className=\"main_wrapper\">\n        <div className=\"channel_top\">\n          <h1>Channels</h1>\n          <Button\n            icon\n            labelPosition=\"left\"\n            onClick={() => this.setState({ showModalCreate: true })}\n          >\n            <Icon name=\"podcast\" />\n            Create Channel\n          </Button>\n        </div>\n        <hr />\n        <Item.Group relaxed>\n          {<Loader active={loader} content=\"Loading\" />}\n          {channels.length === 0 ? (\n            <p>\n              Unfortunately we did not find your channels.\n              <span role=\"img\" aria-label=\"Sad\">\n                🙁\n              </span>\n            </p>\n          ) : (\n            channels.map((item) => (\n              <Item key={item.id}>\n                <Item.Content verticalAlign=\"middle\">\n                  <Item.Header>{item.name}</Item.Header>\n                  <Item.Description>{item.id}</Item.Description>\n                  <Item.Extra>\n                    <Button\n                      color=\"red\"\n                      floated=\"right\"\n                      icon=\"trash alternate outline\"\n                      labelPosition=\"right\"\n                      content=\"Remove\"\n                      onClick={() => this.setState({\n                        showModalRemove: true,\n                        removingChannel: item,\n                      })}\n                    />\n                    {/* <Button\n                      color=\"yellow\"\n                      floated='right'\n                      icon='edit outline'\n                      labelPosition='right'\n                      content=\"Edit\"\n                      onClick={() => this.setState({ showModalEdit: true, edittingChannel: item })}\n                    /> */}\n                  </Item.Extra>\n                </Item.Content>\n              </Item>\n            ))\n          )}\n        </Item.Group>\n\n        {showModalRemove ? (\n          <ChannelModalRemove\n            showModalRemove={showModalRemove}\n            channel={removingChannel}\n            callbackFromParent={this.removeModalCallback}\n          />\n        ) : null}\n\n        {/* {\n          showModalEdit\n          ? <ChannelModalEdit\n              showModalEdit={showModalEdit}\n              channel={edittingChannel}\n              callbackFromParent={this.editModalCallback}\n            />\n          : null\n        } */}\n\n        {showModalCreate ? (\n          <ChannelModalCreate\n            showModalCreate={showModalCreate}\n            callbackFromParent={this.createChannelModalCallback}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Channels\n","import * as actionTypes from '../../types/graphs'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const graphActionWindow = (data) => (dispatch) => {\n  dispatch({\n    type: actionTypes.SHOW_GRAPH_ACTION_WINDOW,\n    payload: data,\n  })\n}\n\nexport const addGraphConfigAction = (data) => (dispatch) => {\n  dispatch({\n    type: actionTypes.ADD_GRAPH_CONFIG,\n    payload: data,\n  })\n}\n\nexport const toggleGraphDraggingAction = (data) => (dispatch) => {\n  dispatch({\n    type: actionTypes.TOGGLE_GRAPH_DRAGGING,\n    payload: data,\n  })\n}\n\nconst addGraphDataActionSuccess = (data) => ({\n  type: actionTypes.DATA_RECIEVE_SUCCESS,\n  payload: [\n    ...data,\n  ],\n})\n\nconst addGraphDataActionStarted = () => ({\n  type: actionTypes.DATA_REQUEST_STARTED,\n})\n\nconst addGraphDataActionFailure = (error) => ({\n  type: actionTypes.DATA_RECIEVE_FAILURE,\n  payload: {\n    error,\n  },\n})\n\nexport const addGraphDataAction = (data) => (dispatch) => {\n  dispatch(addGraphDataActionStarted())\n\n  const { device, date, parameter } = data\n  fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/data/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    mode: 'cors',\n    credentials: 'include',\n    body: JSON.stringify({ device, date: date * 3600000, parameter }),\n  })\n    .then((resp) => resp.json())\n    .then((resp) => {\n      const validData = resp.map((item) => ({\n        name: new Date(item.time * 1000).toLocaleTimeString().replace(' AM', '').replace(' PM', ''),\n        [parameter]: item[parameter],\n      }))\n      return dispatch(addGraphDataActionSuccess(validData))\n    })\n    .catch((err) => dispatch(addGraphDataActionFailure(err)))\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Form,\n  Modal,\n  Dropdown,\n} from 'semantic-ui-react'\n// import Store from '../../store/configureStore'\n\nimport { addGraphDataAction, graphActionWindow, addGraphConfigAction } from '../actions/graphs'\nimport './GraphWrapper/GraphWrapper.scss'\n\nconst types = [\n  { key: 0, text: 'Timeseries', value: 'timeseries' },\n  { key: 1, text: 'KPI', value: 'kpi' },\n  { key: 2, text: 'Table', value: 'table' },\n]\n\nconst dates = [\n  { key: 0, text: '1 hour', value: 1 },\n  { key: 1, text: '3 hours', value: 3 },\n  { key: 2, text: '6 hours', value: 6 },\n  { key: 3, text: '12 hours', value: 12 },\n  { key: 4, text: '24 hours', value: 24 },\n  { key: 5, text: '5 days', value: 120 },\n  { key: 6, text: '10 days', value: 240 },\n  { key: 7, text: '15 days', value: 360 },\n]\n\nclass GraphActionWindow extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isVisible: false,\n      config: {\n        title: '',\n        type: '',\n        device: '',\n        date: '',\n        parameter: '',\n      },\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.showEditWindow !== state.isVisible) {\n      return {\n        isVisible: true,\n        config: {\n          title: props.graphTitle,\n          type: props.graphType,\n          device: props.deviceName,\n          parameter: props.deviceParameter,\n          date: props.requestDate,\n        },\n      }\n    }\n\n    return null\n  }\n\n  handleChangeData = (key, e, dropdownValue) => {\n    const { value } = e.target\n    if (value === undefined) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          [key]: dropdownValue,\n        },\n      }))\n      return\n    }\n    this.setState((prevState) => ({\n      config: {\n        ...prevState.config,\n        [key]: value,\n      },\n    }))\n  }\n\n  handleSubmit = () => {\n    const { addGraphData, showGraphActionWindow, addGraphConfig } = this.props\n    const { config } = this.state\n    addGraphConfig(config)\n    addGraphData(config)\n    showGraphActionWindow(false)\n  }\n\n  onClose = () => {\n    const { showGraphActionWindow } = this.props\n    const { isVisible } = this.state\n    this.setState({ isVisible: false })\n    showGraphActionWindow(isVisible)\n  }\n\n  render() {\n    const { showEditWindow } = this.props\n    const { config } = this.state\n\n    return (\n      <Modal closeIcon dimmer=\"blurring\" open={showEditWindow} onClose={() => this.onClose()}>\n        <Modal.Header>\n          {config.title}\n          {' '}\n          Graph\n        </Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label htmlFor=\"name\">Title</label>\n              <input\n                placeholder=\"title\"\n                value={config.title}\n                onChange={(e) => this.handleChangeData('title', e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"mainflux_key\">Type</label>\n              <Dropdown\n                placeholder=\"types\"\n                fluid\n                selection\n                options={types}\n                value={config.type}\n                onChange={(e, { value }) => this.handleChangeData('type', e, value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"name\">Device name</label>\n              <input\n                placeholder=\"device name\"\n                value={config.device}\n                onChange={(e) => this.handleChangeData('device', e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"name\">Parameter</label>\n              <input\n                placeholder=\"parameter\"\n                value={config.parameter}\n                onChange={(e) => this.handleChangeData('parameter', e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label htmlFor=\"name\">Date</label>\n              <Dropdown\n                placeholder=\"date\"\n                fluid\n                selection\n                options={dates}\n                value={config.date}\n                onChange={(e, { value }) => this.handleChangeData('date', e, value)}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={() => this.onClose()}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={() => this.handleSubmit()}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  graph: state.config,\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    showGraphActionWindow: (isVisible) => dispatch(graphActionWindow(isVisible)),\n    addGraphConfig: (config) => dispatch(addGraphConfigAction(config)),\n    addGraphData: (config) => dispatch(addGraphDataAction(config)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GraphActionWindow)\n\nGraphActionWindow.propTypes = {\n  showGraphActionWindow: PropTypes.func.isRequired,\n  addGraphData: PropTypes.func.isRequired,\n  addGraphConfig: PropTypes.func.isRequired,\n  showEditWindow: PropTypes.bool.isRequired,\n  graphTitle: PropTypes.string.isRequired,\n  graphType: PropTypes.string.isRequired,\n  deviceName: PropTypes.string.isRequired,\n  deviceParameter: PropTypes.string.isRequired,\n  requestDate: PropTypes.number.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Store from '../../store/configureStore'\n\nclass ToggleComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      opened: false,\n    }\n    Store.subscribe(() => {\n      this.setState({ opened: Store.getState().graph.showGraphActionWindow })\n    })\n  }\n\n  toggleComponent = () => {\n    const { opened } = this.state\n    this.setState({ opened: !opened })\n  }\n\n  render() {\n    // let { title } = this.props\n    const { children } = this.props\n    const { opened } = this.state\n\n    // if (opened) {\n    //   title = 'Hide Component'\n    // } else {\n    //   title = 'Show Component'\n    // }\n\n    return (\n      <div className=\"component\">\n        {/* <button\n          type=\"button\"\n          className=\"componentTitle\"\n          onClick={this.toggleComponent}\n        >\n          { title }\n        </button> */}\n        {opened && (\n          <div className=\"componentContent\">\n            { children }\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default ToggleComponent\n\nToggleComponent.propTypes = {\n  // title: PropTypes.string.isRequired,\n  children: PropTypes.instanceOf(Object).isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Brush,\n} from 'recharts'\n\nclass Timeseries extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      opacity: {\n        uv: 1,\n      },\n    }\n  }\n\n  // eslint-disable-next-line camelcase\n  UNSAFE_componentWillReceiveProps(props, nextProps) {\n    if (props === nextProps) {\n      return false\n    }\n    return true\n  }\n\n  shouldComponentUpdate(prevProps) {\n    if (prevProps === this.props) {\n      return false\n    }\n    return true\n  }\n\n  handleMouseEnter = (o) => {\n    const { dataKey } = o\n    const { opacity } = this.state\n\n    this.setState({\n      opacity: { ...opacity, [dataKey]: 0.5 },\n    })\n  }\n\n  handleMouseLeave = (o) => {\n    const { dataKey } = o\n    const { opacity } = this.state\n\n    this.setState({\n      opacity: { ...opacity, [dataKey]: 1 },\n    })\n  }\n\n  render() {\n    const { width, height, data } = this.props\n\n    const { opacity } = this.state\n    let param = []\n    // let loader = false\n    if (data[0] === 'wait') {\n      return (\n        <p>Waiting for data...</p>\n      )\n    }\n    if (data.length > 0) {\n      param = Object.keys(data[0]).filter((item) => item !== 'name')\n    }\n    return (\n      <div id=\"timeseries\" className=\"disable-dragging\">\n        <LineChart\n          width={width - 20}\n          height={height - 20}\n          data={data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis type=\"number\" domain={[10, 11]} />\n          <Tooltip />\n          <Legend onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} />\n          <Line\n            type=\"monotone\"\n            dataKey={param[0]}\n            strokeOpacity={opacity.pv}\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n          {/* <Line type=\"monotone\" dataKey=\"uv\" strokeOpacity={opacity.uv} stroke=\"#82ca9d\" /> */}\n          <Brush />\n        </LineChart>\n      </div>\n    )\n  }\n}\n\nexport default Timeseries\n\nTimeseries.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  data: PropTypes.instanceOf(Array).isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport GraphActionWindow from '../GraphActionWindow'\n\nimport './GraphWrapper.scss'\nimport EditIcon from '../../../static/icons/edit.svg'\nimport RemoveIcon from '../../../static/icons/delete.svg'\n\nexport default class GraphWrapperHeader extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showEditWindow: false,\n    }\n    this.editBtnRef = React.createRef()\n    this.removeBtnRef = React.createRef()\n  }\n\n  handleClick = (node) => {\n    const { showEditWindow } = this.state\n    if (node.className === 'graph_edit__btn') {\n      this.editWindow(!showEditWindow)\n    } else if (node.className === 'graph_remove__btn') {\n      console.info('Remove button clicked...')\n    }\n  }\n\n  editWindow = (showEditWindow) => {\n    this.setState({ showEditWindow })\n  }\n\n  render() {\n    const { graphTitle, width } = this.props\n    const { showEditWindow } = this.state\n    return (\n      <div\n        id=\"graph_wrapper__header\"\n        style={{\n          borderTopLeftRadius: 5,\n          borderTopRightRadius: 5,\n          width,\n        }}\n      >\n        <div className=\"graph_name\">\n          <h5>{graphTitle}</h5>\n        </div>\n        <div className=\"graph_actions\">\n          <button\n            type=\"button\"\n            className=\"graph_edit__btn\"\n            onClick={() => this.handleClick(this.editBtnRef.current)}\n            ref={this.editBtnRef}\n          >\n            <img\n              src={EditIcon}\n              alt=\"Edit graph\"\n            />\n          </button>\n          <button\n            type=\"button\"\n            className=\"graph_remove__btn\"\n            onClick={() => this.handleClick(this.removeBtnRef.current)}\n            ref={this.removeBtnRef}\n          >\n            <img\n              src={RemoveIcon}\n              alt=\"Remove graph\"\n            />\n          </button>\n        </div>\n        {showEditWindow ? (\n          <GraphActionWindow\n            showEditWindow={showEditWindow}\n            callbackFromParent={this.editWindow}\n            graphTitle={graphTitle}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nGraphWrapperHeader.propTypes = {\n  graphTitle: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Rnd } from 'react-rnd'\nimport Timeseries from '../Timeseries'\nimport GraphWrapperHeader from './GraphWrapperHeader'\nimport Store from '../../../store/configureStore'\n\nclass GraphWrapper extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      width: 620,\n      height: 350,\n    }\n  }\n\n  componentDidMount() {\n    const { defaultWidth, defaultHeight } = Store.getState().graph\n    this._isMounted = true\n    this.setState({\n      width: defaultWidth,\n      height: defaultHeight,\n    })\n  }\n\n  shouldComponentUpdate(prevProps) {\n    if (prevProps === this.props) {\n      return false\n    }\n    return true\n  }\n\n  render() {\n    const {\n      width,\n      height,\n    } = this.state\n    const { type, title, data } = this.props\n\n    let component\n\n    if (type === 'timeseries') {\n      component = (\n        <Timeseries\n          width={width}\n          height={height - 30}\n          type={type}\n          title={title}\n          data={data}\n        />\n      )\n    } else {\n      component = <h4 style={{ color: 'red' }}>Error occured, please check the configs of this graph!</h4>\n    }\n\n    return (\n      <div\n        style={{ margin: 0, paddingBottom: '40px' }}\n      >\n        <Rnd\n          default={{\n            x: 0,\n            y: 0,\n            width,\n            height,\n          }}\n          style={{\n            background: '#EBEFF2',\n            position: 'relative',\n            padding: '10px',\n            borderRadius: '5px',\n          }}\n          onResize={(e, direction, ref, delta, position) => {\n            this.setState({\n              width: parseInt(ref.style.width, 10),\n              height: parseInt(ref.style.height, 10),\n              ...position,\n            })\n          }}\n          cancel=\".disable-dragging\"\n        >\n          <GraphWrapperHeader width={width - 20} graphTitle={title} />\n          {component}\n        </Rnd>\n      </div>\n    )\n  }\n}\n\nexport default GraphWrapper\n\nGraphWrapper.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.instanceOf(Object).isRequired,\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { graphActionWindow, addGraphDataAction } from '../../shared/actions/graphs'\nimport Store from '../../store/configureStore'\n\nimport './Graphs.scss'\n\nimport GraphActionWindow from '../../shared/components/GraphActionWindow'\nimport ToggleComponent from '../../shared/components/ToggleComponent'\nimport GraphWrapper from '../../shared/components/GraphWrapper/GraphWrapper'\n\nclass Graphs extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      graphsConfigList: [],\n      graphsData: [],\n      loading: false,\n    }\n    Store.subscribe(() => {\n      const { graphsConfigList, graphsData, loading } = Store.getState().graph\n      this.setState({ graphsConfigList, graphsData, loading })\n    })\n  }\n\n  componentDidMount() {\n    const { graphsConfigList, graphsData } = Store.getState().graph\n    const { addGraphData } = this.props\n    this._isMounted = true\n    this.setState({ graphsConfigList, graphsData })\n    graphsConfigList.forEach(async (item) => {\n      addGraphData(item)\n    })\n  }\n\n  shouldComponentUpdate() {\n    const { graph } = Store.getState()\n    const { graphsConfigList, graphsData } = this.state\n    if (\n      graph.graphsConfigList === graphsConfigList\n      && graph.graphsData === graphsData\n    ) {\n      return false\n    }\n    return true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  createGraph = () => {\n    const { showGraphActionWindow } = this.props\n    showGraphActionWindow(!Store.getState().graph.showGraphActionWindow)\n  }\n\n  render() {\n    const { graphsConfigList, graphsData, loading } = this.state\n\n    return (\n      <div id=\"graphs\" className=\"main_wrapper\">\n        <div className=\"graphs_header\">\n          <button type=\"button\" onClick={this.createGraph}>Create</button>\n        </div>\n        {\n          loading ? <p>LOADING...</p> : ''\n        }\n        {\n          (graphsData.length > 0)\n            ? graphsConfigList.map((item, i) => (\n              <GraphWrapper\n                // eslint-disable-next-line react/no-array-index-key\n                key={i}\n                title={item.title}\n                type={item.type}\n                data={graphsData[i] || ['wait']}\n              />\n            ))\n            : ''\n        }\n\n        <ToggleComponent title=\"Show Component\">\n          <GraphActionWindow\n            showEditWindow\n            graphTitle=\"\"\n            graphType=\"\"\n            deviceName=\"\"\n            deviceParameter=\"\"\n            requestDate={1}\n          />\n        </ToggleComponent>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  graph: state.config,\n})\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    showGraphActionWindow: (isVisible) => dispatch(graphActionWindow(isVisible)),\n    addGraphData: (config) => dispatch(addGraphDataAction(config)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graphs)\n\nGraphs.propTypes = {\n  showGraphActionWindow: PropTypes.func.isRequired,\n  addGraphData: PropTypes.func.isRequired,\n}\n","import React from 'react'\n\nconst Notfound = () => (\n  <div className=\"main_wrapper\">\n    <h1>Nothing was found</h1>\n    <p>\n      Unfortunately we did not find anything for your request.\n      <span role=\"img\" aria-label=\"Sad\">\n        🙁\n      </span>\n    </p>\n  </div>\n)\n\nexport default Notfound\n","import React, { Component } from 'react'\nimport {\n  Route, NavLink, BrowserRouter as Router, Switch,\n} from 'react-router-dom'\nimport { Menu } from 'semantic-ui-react'\nimport './App.scss'\nimport 'semantic-ui-css/semantic.min.css'\nimport Home from './components/Home'\nimport TopBar from './components/TopBar'\nimport Connections from './components/connections/Connections'\nimport Channels from './components/channels/Channels'\nimport Graphs from './components/graphs/Graphs'\nimport Notfound from './components/NotFound'\n\nexport default class App extends Component {\n  checkActive = (location) => {\n    const { url } = location\n    if (url === '/') return true\n    return false\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Router>\n          <div id=\"sidebar_wrapper\">\n            <Menu id=\"sidebar_menu\" secondary vertical>\n              <ul>\n                <li>\n                  <NavLink\n                    to=\"/\"\n                    activeClassName=\"active_item\"\n                    isActive={this.checkActive}\n                  >\n                    Home\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/channels\" activeClassName=\"active_item\">\n                    Channels\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/connections\" activeClassName=\"active_item\">\n                    Connections\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/graphs\" activeClassName=\"active_item\">\n                    Graphs\n                  </NavLink>\n                </li>\n              </ul>\n            </Menu>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/channels\" component={Channels} />\n              <Route path=\"/connections\" component={Connections} />\n              <Route path=\"/graphs\" component={Graphs} />\n              <Route component={Notfound} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\n// import Keycloak from 'keycloak-js'\nimport { Provider } from 'react-redux'\nimport store from './store/configureStore'\n\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\nserviceWorker.register()\n\n// keycloak init options\n// const initOptions = {\n//   url: 'http://key.zeinetsse.com/auth',\n//   realm: 'zeinetsse',\n//   clientId: 'mainflux_admin',\n//   onLoad: 'login-required',\n// }\n\n// const keycloak = Keycloak(initOptions)\n\n// keycloak.init({ onLoad: initOptions.onLoad }).success((auth) => {\n//   if (!auth) {\n//     window.location.reload()\n//   } else {\n//     console.info('Authenticated')\n//   }\n\n//   // React Render\n//   ReactDOM.render(<App />, document.getElementById('root'))\n\n//   localStorage.setItem('react-token', keycloak.token)\n//   localStorage.setItem('react-refresh-token', keycloak.refreshToken)\n\n//   setTimeout(() => {\n//     keycloak.updateToken(70).success((refreshed) => {\n//       if (refreshed) {\n//         console.debug(`Token refreshed${refreshed}`)\n//       } else {\n//         console.warn(`Token not refreshed, valid for ${\n//           Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000)\n//         } seconds`)\n//       }\n//     }).error(() => {\n//       console.error('Failed to refresh token')\n//     })\n//   }, 60000)\n// }).error(() => {\n//   console.error('Authenticated Failed')\n// })\n"],"sourceRoot":""}