{"version":3,"sources":["static/icons/turbine.svg","static/icons/pump.svg","static/icons/generator.svg","components/Home.js","components/TopBar.js","components/applications/AppModalCreate.jsx","components/applications/AppModalEdit.jsx","components/devices/DeviceModalCreate.jsx","components/devices/DeviceModalEdit.jsx","components/connections/ConnectionModalRemove.jsx","components/errorModal.jsx","components/connections/Connections.jsx","components/channels/ChannelModalCreate.jsx","components/channels/ChannelModalRemove.jsx","components/channels/Channels.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","statusTypes","statusColorTypes","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","getToken","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","fetch","concat","process","method","headers","Accept","Content-Type","mode","credentials","body","JSON","stringify","email","stop","getDevicesFromMainflux","then","res","json","devices","parseDataFromBootstrap","catch","err","data","filter","item","content","parse","type","map","id","mainflux_id","icon","device_type","name","status","Math","floor","random","length","ram","memory","customizeDataForRender","forEach","turbine","pump","generator","push","setState","state","react_default","createElement","className","Card","Group","i","fluid","color","key","src","alt","htmlFor","toUpperCase","role","aria-label","Component","trigger","Image","avatar","options","text","TopBar","Segment","clearing","Header","floated","Dropdown","pointing","AppModalCreate","getThings","oldThings","console","log","getConnections","_callee2","_context2","oldConnections","createThing","_callee3","_context3","newThing","createChannel","_callee4","channel","_context4","createAppConnection","_callee5","_this$state","connectionName","arr","thing","obj","_this$state2","showModalCreateApp","_context5","oldChannels","sent","t0","mac","metadata","channels","callbackFromParent","t1","close","_callee6","_this$state3","_context6","handleChangeConnectionName","e","str","target","value","regexpName","test","prevState","_objectSpread","isConnectionNameEnabled","handleChangeThingMac","regexpMac","isThingMacEnabled","nextProps","nextState","_this2","_this$state4","Modal","closeIcon","dimmer","open","onClose","Content","Form","Field","placeholder","onChange","Actions","Button","onClick","positive","labelPosition","disabled","AppModalEdit","getConfigById","_ref","config","selectedChannels","mainflux_channels","_x","apply","arguments","getChannels","chan","editApp","_this$state$config$co","showModalEditApp","handleChangeName","handleChangeChannel","_ref4","connection","external_id","undefined","readOnly","mainflux_key","multiple","selection","alertMessagesText","title","subtitle","assettext","assetvalue","DeviceModalCreate","apps","getDeviceTypes","types","formattedTypes","deviceTypes","getChannel","_ref5","appMac","app","abrupt","getGlobalChannel","_ref6","channelName","globalChannel","_x2","createDeviceConnection","_callee7","cycle","sendToApp","sendToDB","createdThing","_this$state$newDevice","severity","alerttext","alertvalue","messagetext","longitude","latitude","newDevice","showModalCreateDevice","_context7","response","device_name","device_id","device_key","DeviceModalCreate_objectSpread","_callee8","_context8","closeError","showModalError","errorText","isConnectionNameDisabled","isThingMacDisabled","handleChangeCycle","isEnabled","handleChangeSendToApp","_ref9","checked","handleChangeSendToDB","_ref10","handleChangeDeviceType","_ref11","handleChangeApp","_ref12","handleChangeNewDevice","keys","alertext","Checkbox","label","DeviceModalEdit","selectedApp","selectedDeviceType","handleSendToApp","handleSendToDB","currentThing","split","_x3","getDeviceInfoFromDB","_ref7","device","editDevice","DeviceModalEdit_objectSpread","_x4","showModalEditDevice","_callee9","_this$state$editDevic","_this$state$editDevic2","_title","_subtitle","_severity","_alerttext","_alertvalue","_assettext","_assetvalue","_messagetext","_longitude","_latitude","currentDevice","_context9","_x5","editThing","editThingIndex","indexOf","currentValue","_ref13","handleChangeEditDevice","_this$props$connectio","forceUpdate","_this3","ConnectionModalRemove","removeConnection","_ref2","_connection$content","showModalRemove","isRemoveable","_this$props","basic","size","inverted","Icon","ErrorModal","Connections","connections","parsedConnections","loader","createAppModalCallback","createDeviceModalCallback","removeModalCallback","_connection$0$content","connectedApp","edittedApp","editAppModalCallback","editDeviceModalCallback","errorModalCallback","edittingApp","edittingDevice","removingConnection","Item","relaxed","Loader","active","verticalAlign","Popup","Description","Extra","applications_AppModalCreate","devices_DeviceModalCreate","connections_ConnectionModalRemove","errorModal","applications_AppModalEdit","devices_DeviceModalEdit","ChannelModalCreate","showModalCreate","ChannelModalCreate_objectSpread","ChannelModalRemove","removeChannel","event","Channels","removeItemId","createChannelModalCallback","_ref3","removingChannel","channels_ChannelModalRemove","channels_ChannelModalCreate","Notfound","App","checkActive","location","url","react_router_dom","Menu","secondary","vertical","to","activeClassName","isActive","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f86af04a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/turbine.06474a16.svg\";","module.exports = __webpack_public_path__ + \"static/media/pump.1df4e95b.svg\";","module.exports = __webpack_public_path__ + \"static/media/generator.7a7e96ae.svg\";","import React, { Component } from 'react'\nimport { Card } from 'semantic-ui-react'\n\nimport 'semantic-ui-css/semantic.min.css'\n\nimport turbine from '../static/icons/turbine.svg'\nimport pump from '../static/icons/pump.svg'\nimport generator from '../static/icons/generator.svg'\n\nconst statusTypes = ['connected', 'not connected']\nconst statusColorTypes = []\n\nexport default class Home extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      devices: [],\n    }\n  }\n\n  async componentDidMount() {\n    this._isMounted = true\n    await this.getToken()\n    this.getDevicesFromMainflux()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getToken = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getDevicesFromMainflux = () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((devices) => {\n        this.parseDataFromBootstrap(devices)\n      })\n      .catch((err) => err)\n  }\n\n  parseDataFromBootstrap = (devices) => {\n    const data = devices\n      .filter((item) => {\n        item.content = JSON.parse(item.content)\n        return item.content.type === 'device'\n      })\n      .map((item) => ({\n        id: item.mainflux_id,\n        icon: item.content.device_type,\n        name: item.name,\n        status: statusTypes[Math.floor(Math.random() * statusTypes.length)],\n        ram: Math.floor(Math.random() * 100) + 1,\n        memory: `7976/${Math.floor(Math.random() * 7976) + 1}`,\n      }))\n    this.customizeDataForRender(data)\n  }\n\n  customizeDataForRender = (devices) => {\n    devices.forEach((item) => {\n      switch (item.icon) {\n        case 'turbine':\n          item.icon = turbine\n          break\n        case 'e-meter_v2':\n          item.icon = pump\n          break\n        case 'e-meter_v1':\n          item.icon = generator\n          break\n        default:\n          break\n      }\n    })\n\n    devices.forEach((item) => {\n      switch (item.status) {\n        case 'connected':\n          statusColorTypes.push('green')\n          break\n        case 'not connected':\n          statusColorTypes.push('yellow')\n          break\n        default:\n          break\n      }\n    })\n\n    if (this._isMounted) this.setState({ devices })\n  }\n\n  render() {\n    const { devices } = this.state\n\n    return (\n      <div className=\"main_wrapper\">\n        <h1>Home</h1>\n        <hr />\n        {devices.length !== 0 ? (\n          <Card.Group>\n            {devices.map((item, i) => (\n              <Card\n                fluid\n                color={statusColorTypes[i]}\n                key={item.id}\n                className=\"home_card\"\n              >\n                <img\n                  src={item.icon}\n                  alt={`${item.name}`}\n                  className=\"home_card__item\"\n                />\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"name\">\n                    name:\n                  </label>\n                  {item.name.toUpperCase()}\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"status\">\n                    status:\n                  </label>\n                  {item.status.toUpperCase()}\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"cpu\">\n                    CPU:\n                  </label>\n                  {item.ram}\n%\n                </p>\n                <p className=\"home_card__item\">\n                  <label className=\"home_card__label\" htmlFor=\"memory\">\n                    memory:\n                  </label>\n                  {item.memory}\n                  kB\n                </p>\n              </Card>\n            ))}\n          </Card.Group>\n        ) : (\n          <p>\n            Here you can put everything your heart desires.\n            <span role=\"img\" aria-label=\"Hooray\">\n              🙂\n            </span>\n          </p>\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {\n  Header, Segment, Dropdown, Image,\n} from 'semantic-ui-react'\n\nconst trigger = (\n  <span>\n    <Image avatar src=\"http://zsse.zeinetsse.com/favicon.ico\" />\n    {' '}\nUser Admin\n  </span>\n)\n\nconst options = [\n  { key: 'user', text: 'Account', icon: 'user' },\n  { key: 'settings', text: 'Settings', icon: 'settings' },\n  { key: 'sign-out', text: 'Sign Out', icon: 'sign out' },\n]\n\nexport default function TopBar() {\n  return (\n    <div id=\"TopBar\">\n      <Segment clearing id=\"top_menu\">\n        <Header className=\"topbar_left\" floated=\"left\">\n          <img className=\"top_logo\" alt=\"Tellee_logo\" src=\"/Tellee_logo.svg\" />\n        </Header>\n        <Header className=\"topbar_right\" floated=\"right\">\n          <Dropdown\n            className=\"top_dropdown\"\n            trigger={trigger}\n            options={options}\n            pointing=\"top left\"\n            icon={null}\n          />\n        </Header>\n      </Segment>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Modal, Form } from 'semantic-ui-react'\n\nclass AppModalCreate extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalCreateApp: false,\n      isThingMacEnabled: false,\n      isConnectionNameEnabled: false,\n      oldThings: [],\n      oldConnections: [],\n      newThing: {\n        name: '',\n        metadata: {\n          type: 'app',\n          mac: '',\n        },\n      },\n      channel: {\n        name: '',\n        metadata: {},\n      },\n      connectionName: '',\n    }\n\n    this.regexpName = /^\\w+$/\n    this.regexpMac = /^[0-9a-z]{1,2}([.:-])(?:[0-9a-z]{1,2}\\1){4}[0-9a-z]{2}$/gim\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        if (this._isMounted) {\n          this.setState({ oldThings })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        if (this._isMounted) {\n          this.setState({ oldConnections })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  createThing = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify(this.state.newThing),\n    })\n  }\n\n  createChannel = async () => {\n    const { channel } = this.state\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ channel }),\n    })\n  }\n\n  createAppConnection = async () => {\n    const { newThing, connectionName } = this.state\n    try {\n      let arr = []\n      await this.createChannel()\n      arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((res) => res.json())\n        .then((oldChannels) => {\n          return oldChannels\n        })\n        .catch((err) => console.log(err))\n      var channel = arr.filter((item) => {\n        return item.name === `zsse/${newThing.name}`\n      })\n      await this.createThing()\n      arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((res) => res.json())\n        .then((oldThings) => {\n          return oldThings\n        })\n        .catch((err) => console.log(err))\n\n      var thing = arr.filter((item) => {\n        return item.name === `zsse/${newThing.name}`\n      })\n    } catch (err) {\n      console.log(err)\n    }\n\n    const obj = {\n      mac: newThing.metadata.mac,\n      id: thing[0].id,\n      channels: `${channel[0].id}`,\n      name: connectionName,\n    }\n\n    try {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/create/app`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(obj),\n      })\n\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel[0].id}/things/${thing[0].id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        }\n      )\n      await this.getConnections()\n\n      // Close and send data to parent\n      const { showModalCreateApp, oldConnections } = this.state\n      if (this._isMounted) {\n        this.setState({ showModalCreateApp: false })\n      }\n      this.props.callbackFromParent(showModalCreateApp, oldConnections)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  close = async () => {\n    const { showModalCreateApp, oldConnections } = this.state\n    if (this._isMounted) this.setState({ showModalCreateApp: false })\n    this.props.callbackFromParent(showModalCreateApp, oldConnections)\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getThings()\n    this.getConnections()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(this.props === nextProps && this.state === nextState)\n  }\n\n  handleChangeConnectionName = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldConnections.filter((item) => {\n      return item.name === str\n    })\n    if (arr.length !== 0 || !this.regexpName.test(str)) {\n      if (this._isMounted) this.setState({ isConnectionNameEnabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            name: str,\n          },\n          channel: {\n            ...prevState.channel,\n            name: str,\n          },\n          connectionName: str,\n          isConnectionNameEnabled: false,\n        }))\n      }\n    }\n  }\n\n  handleChangeThingMac = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldThings.filter((item) => {\n      return item.metadata.mac === str\n    })\n    if (arr.length !== 0 || !this.regexpMac.test(str)) {\n      if (this._isMounted) this.setState({ isThingMacEnabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            metadata: {\n              ...prevState.newThing.metadata,\n              mac: str,\n            },\n          },\n          isThingMacEnabled: false,\n        }))\n      }\n    }\n  }\n\n  render() {\n    const { showModalCreateApp } = this.props\n    const { isThingMacEnabled, isConnectionNameEnabled } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalCreateApp}\n        onClose={this.close}\n      >\n        <Modal.Header> CREATE APP </Modal.Header>\n\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label> Name </label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                className={isConnectionNameEnabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Mac </label>\n              <input\n                placeholder=\"mac\"\n                onChange={(e) => this.handleChangeThingMac(e)}\n                className={isThingMacEnabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            Cancel\n          </Button>\n          <Button\n            positive\n            icon=\"plus\"\n            labelPosition=\"right\"\n            content=\"Create\"\n            disabled={isThingMacEnabled || isConnectionNameEnabled}\n            onClick={this.createAppConnection}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default AppModalCreate\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Form, Modal, Dropdown } from 'semantic-ui-react'\n\nclass AppModalEdit extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      config: {},\n      channels: [],\n      selectedChannels: [],\n      showModalEditApp: false,\n    }\n  }\n\n  getConfigById = async (id) => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((config) => {\n        const selectedChannels = []\n\n        config.content = JSON.parse(config.content)\n\n        for (let i = 0; i < config.mainflux_channels.length; i++) {\n          selectedChannels.push(config.mainflux_channels[i].id)\n        }\n        if (this._isMounted) {\n          this.setState({\n            selectedChannels,\n            config,\n          })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getChannels = async () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((channels) => {\n        const chan = channels.map((item, i) => {\n          return { value: item.id, text: item.name }\n        })\n        if (this._isMounted) this.setState({ channels: chan })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  editApp = async () => {\n    const { config } = this.state\n    const { mac, name } = this.state.config.content\n    const obj = {\n      mac,\n      id: config.mainflux_id,\n      channels: config.mainflux_channels,\n      name,\n      type: 'app',\n      content: config.content,\n    }\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      }\n    )\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/channels/edit/${obj.channels[0].id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ name: obj.name, metadata: {} }),\n      }\n    )\n\n    this.close()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextProps === this.props && nextState === this.state)\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getConfigById(this.props.connection.external_id)\n    this.getChannels()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  close = () => {\n    if (this._isMounted) this.setState({ showModalEditApp: false })\n    this.props.callbackFromParent(this.state.showModalEditApp)\n  }\n\n  handleChangeName = (e) => {\n    const obj = this.state.config\n    obj.content.name = e.target.value\n    if (this._isMounted) this.setState({ config: obj })\n  }\n\n  handleChangeChannel = (e, { value }) => {\n    let obj = this.state.config\n    obj.mainflux_channels = value\n    if (this._isMounted) this.setState({ config: obj })\n  }\n\n  render() {\n    const { showModalEditApp } = this.props\n    const { config, channels, selectedChannels } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalEditApp}\n        onClose={this.close}\n      >\n        <Modal.Header>EDIT APPLICATION</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Thing ID</label>\n              <input\n                placeholder=\"mainflux_id\"\n                value={config.content !== undefined ? config.mainflux_id : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Thing Key</label>\n              <input\n                placeholder=\"mainflux_key\"\n                value={config.content !== undefined ? config.mainflux_key : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"name\"\n                value={config.content !== undefined ? config.content.name : ''}\n                onChange={(e) => this.handleChangeName(e)}\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Channels</label>\n              <Dropdown\n                placeholder=\"channels\"\n                multiple\n                fluid\n                selection\n                options={channels}\n                onChange={this.handleChangeChannel}\n                value={selectedChannels}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={this.editApp}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default AppModalEdit\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Form, Modal, Dropdown, Checkbox } from 'semantic-ui-react'\n\nconst alertMessagesText = {\n  title: 'Turbine',\n  subtitle: 'LM2500',\n  assettext: 'MTU',\n  assetvalue: 'operation',\n}\n\nclass DeviceModalCreate extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      deviceTypes: [],\n      apps: [],\n      oldThings: [],\n      oldConnections: [],\n      isEnabled: true,\n      showModalCreateDevice: false,\n      isThingMacDisabled: false,\n      isConnectionNameDisabled: false,\n      newThing: {\n        name: '',\n        metadata: {\n          type: 'device',\n          mac: '',\n        },\n      },\n      config: {\n        id: '',\n        channel: [],\n        name: '',\n        cycle: '',\n        sendToApp: false,\n        sendToDB: false,\n        device_type: undefined,\n        app: undefined,\n      },\n      newDevice: {\n        id: '',\n        title: alertMessagesText.title,\n        subtitle: alertMessagesText.subtitle,\n        assettext: alertMessagesText.assettext,\n        assetvalue: alertMessagesText.assetvalue,\n        longitude: '',\n        latitude: '',\n        severity: '',\n        alertext: '',\n        alertvalue: '',\n        messagetext: '',\n      },\n    }\n\n    this.oldThings = []\n    this.regexpName = /^\\w+$/\n    this.regexpMac = /^[0-9a-z]{1,2}([.:-])(?:[0-9a-z]{1,2}\\1){4}[0-9a-z]{2}$/gim\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        this.setState({ oldConnections })\n        const connections = oldConnections.filter((item) => {\n          item.content = JSON.parse(item.content)\n          return item.content.type === 'app'\n        })\n        const apps = connections.map((item) => {\n          return { key: item.external_id, text: item.name, value: item.external_id }\n        })\n        if (this._isMounted) this.setState({ apps })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getDeviceTypes = async () => {\n    fetch('http://134.209.240.215:8300/devices')\n      .then((res) => res.json())\n      .then((types) => {\n        const formattedTypes = types.map((type, i) => {\n          return { text: type, value: type }\n        })\n        if (this._isMounted) this.setState({ deviceTypes: formattedTypes })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        this.oldThings = oldThings\n        if (this._isMounted) this.setState({ oldThings })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  createThing = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify(this.state.newThing),\n    })\n  }\n\n  getChannel = async (appMac) => {\n    const { oldConnections } = this.state\n    let app = oldConnections.filter((item) => {\n      return item.external_id === appMac\n    })\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n\n    var channel = arr.filter((item) => {\n      return item.name === app[0].name\n    })\n    return channel[0]\n  }\n\n  getGlobalChannel = async (channelName) => {\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n    const globalChannel = arr.filter((item) => {\n      return item.name === `zsse/${channelName}`\n    })\n    return globalChannel[0]\n  }\n\n  // -- Start of creating device --\n  createDeviceConnection = async () => {\n    const { newThing, connectionName, config } = this.state\n    const { cycle, sendToApp, sendToDB, device_type, app } = config\n\n    try {\n      await this.createThing()\n      await this.getThings()\n\n      var createdThing = this.oldThings.filter((item) => {\n        return item.name === `zsse/${newThing.name}`\n      })\n    } catch (err) {\n      console.log(err)\n    }\n\n    let obj = {},\n      channel = {}\n    if (sendToApp) {\n      channel = await this.getChannel(app)\n      obj = {\n        mac: newThing.metadata.mac,\n        id: createdThing[0].id,\n        channel: channel.id,\n        name: connectionName,\n        cycle,\n        sendToApp,\n        sendToDB,\n        device_type,\n        app,\n      }\n    } else {\n      channel = await this.getGlobalChannel(process.env.REACT_APP_CHANNEL_NAME)\n      obj = {\n        mac: newThing.metadata.mac,\n        id: createdThing[0].id,\n        channel: channel.id,\n        name: connectionName,\n        cycle,\n        device_type,\n        sendToApp,\n        sendToDB,\n      }\n    }\n\n    try {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/create/device`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n          body: JSON.stringify(obj),\n        }\n      )\n\n      if (sendToApp) {\n        await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n          mode: 'cors',\n          credentials: 'include',\n        })\n          .then((response) => response.json())\n          .then((response) => {\n            response.content = JSON.parse(response.content)\n            let { content } = response\n            content.devices.push({\n              device_name: `zsse/${connectionName}`,\n              device_id: createdThing[0].id,\n              device_key: createdThing[0].key,\n              device_type: obj.device_type,\n            })\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify({ response }),\n              }\n            )\n            // - Connecting to App's channel - //\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${response.mainflux_channels[0].id}/things/${createdThing[0].id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n              }\n            )\n          })\n      } else {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${createdThing[0].id}`,\n          {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            mode: 'cors',\n            credentials: 'include',\n          }\n        )\n      }\n      if (sendToDB) {\n        const {\n          title,\n          subtitle,\n          severity,\n          alerttext,\n          alertvalue,\n          assettext,\n          assetvalue,\n          messagetext,\n          longitude,\n          latitude,\n        } = this.state.newDevice\n        let newDevice = {\n          id: newThing.name,\n          title,\n          subtitle,\n          severity,\n          alerttext,\n          alertvalue,\n          assettext,\n          assetvalue,\n          messagetext,\n          longitude,\n          latitude,\n        }\n\n        await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/create`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n          body: JSON.stringify(newDevice),\n        })\n      }\n      await this.getConnections()\n\n      // Close and send data to parent\n      const { showModalCreateDevice, oldConnections } = this.state\n      if (this._isMounted) this.setState({ showModalCreateDevice: false })\n      this.props.callbackFromParent(showModalCreateDevice, oldConnections)\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          config: {\n            ...prevState.config,\n            sendToApp: false,\n          },\n        }))\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  // -- End of creating device --\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.getConnections()\n      this.getThings()\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getThings()\n    this.getConnections()\n    this.getDeviceTypes()\n  }\n\n  close = async () => {\n    const { showModalCreateDevice, oldConnections } = this.state\n    this.setState({ showModalCreateDevice: false })\n    this.setState((prevState) => ({\n      config: {\n        ...prevState.config,\n        sendToApp: false,\n      },\n    }))\n    this.props.callbackFromParent(showModalCreateDevice, oldConnections)\n  }\n\n  closeError = () => {\n    if (this._isMounted) this.setState({ showModalError: false, errorText: '' })\n  }\n\n  handleChangeConnectionName = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldConnections.filter((item) => {\n      return item.name === `zsse/${str}`\n    })\n    if (arr.length !== 0 || !this.regexpName.test(str)) {\n      if (this._isMounted) this.setState({ isConnectionNameDisabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            name: str,\n          },\n          connectionName: str,\n          isConnectionNameDisabled: false,\n        }))\n      }\n    }\n  }\n\n  handleChangeThingMac = (e) => {\n    let str = e.target.value\n    let arr = this.state.oldThings.filter((item) => {\n      return item.metadata.mac === str\n    })\n    if (arr.length !== 0 || !this.regexpMac.test(str)) {\n      if (this._isMounted) this.setState({ isThingMacDisabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          newThing: {\n            ...prevState.newThing,\n            metadata: {\n              ...prevState.newThing.metadata,\n              mac: str,\n            },\n          },\n          isThingMacDisabled: false,\n        }))\n      }\n    }\n  }\n\n  // TODO:\n  // handleChangeConfig = e => {\n  //   if(this._isMounted) {\n  //     var config = {...this.state.config};\n  //     config[Object.keys(e)[0]] = e[Object.keys(e)[0]];\n  //     this.setState({config});\n  //   }\n  // };\n\n  handleChangeCycle = (e) => {\n    let str = e.target.value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          cycle: str,\n        },\n        isEnabled:\n          prevState.config.cycle.length <= 4 && /^\\d+$/.test(prevState.config.cycle),\n      }))\n    }\n  }\n\n  handleChangeSendToApp = (e, { checked }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          sendToApp: checked,\n        },\n      }))\n    }\n    this.getConnections()\n  }\n\n  handleChangeSendToDB = (e, { checked }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          sendToDB: checked,\n        },\n      }))\n    }\n  }\n\n  handleChangeDeviceType = (e, { value }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          device_type: value,\n        },\n      }))\n    }\n  }\n\n  handleChangeApp = (e, { value }) => {\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          app: value,\n        },\n      }))\n    }\n  }\n\n  handleChangeNewDevice = (e) => {\n    if (this._isMounted) {\n      var newDevice = { ...this.state.newDevice }\n      newDevice[Object.keys(e)[0]] = e[Object.keys(e)[0]]\n      this.setState({ newDevice })\n    }\n  }\n\n  render() {\n    const { showModalCreateDevice } = this.props\n    const {\n      isThingMacDisabled,\n      isConnectionNameDisabled,\n      isEnabled,\n      deviceTypes,\n      apps,\n      config,\n      newDevice,\n    } = this.state\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalCreateDevice}\n        onClose={this.close}\n      >\n        <Modal.Header> CREATE DEVICE </Modal.Header>\n\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                className={isConnectionNameDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Mac</label>\n              <input\n                placeholder=\"mac\"\n                onChange={(e) => this.handleChangeThingMac(e)}\n                className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Device type</label>\n              <Dropdown\n                placeholder=\"type\"\n                fluid\n                selection\n                options={deviceTypes}\n                onChange={this.handleChangeDeviceType}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Cycle</label>\n              <input\n                placeholder=\"cycle\"\n                className={!isEnabled ? 'showError' : 'showSuccess'}\n                onChange={(e) => this.handleChangeCycle(e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Checkbox\n                label={\n                  config.sendToApp\n                    ? 'This device will be sent to App'\n                    : 'Click checkbox for send this config to App'\n                }\n                onChange={this.handleChangeSendToApp}\n              />\n              <Checkbox\n                label={\n                  config.sendToDB\n                    ? 'This device have additional info'\n                    : 'Click checkbox for additional info'\n                }\n                onChange={this.handleChangeSendToDB}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToApp ? '' : 'hide'}>\n              <label>Apps</label>\n              <Dropdown\n                placeholder=\"apps\"\n                fluid\n                selection\n                options={apps}\n                onChange={this.handleChangeApp}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Title</label>\n              <input\n                placeholder=\"Device title\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ title: e.target.value })\n                }\n                value={newDevice.title}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Subtitle</label>\n              <input\n                placeholder=\"Device subtitle\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ subtitle: e.target.value })\n                }\n                value={newDevice.subtitle}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Latitude</label>\n              <input\n                placeholder=\"Device latitude\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ latitude: e.target.value })\n                }\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Longitude</label>\n              <input\n                placeholder=\"Device longitude\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ longitude: e.target.value })\n                }\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Asset text</label>\n              <input\n                placeholder=\"Asset text\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ assettext: e.target.value })\n                }\n                value={newDevice.assettext}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Asset value</label>\n              <input\n                placeholder=\"Asset value\"\n                onChange={(e) =>\n                  this.handleChangeNewDevice({ assetvalue: e.target.value })\n                }\n                value={newDevice.assetvalue}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            {/* <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Severity</label>\n              <input\n                placeholder='Device severity'\n                onChange={e => this.handleChangeNewDevice({severity: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Alert text</label>\n              <input\n                placeholder='Alert text'\n                onChange={e => this.handleChangeNewDevice({alerttext: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Alert value</label>\n              <input\n                placeholder='Alert value'\n                onChange={e => this.handleChangeNewDevice({alertvalue: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={config.sendToDB ? '' : 'hide'}>\n              <label>Message text</label>\n              <input\n                placeholder='Message text'\n                onChange={e => this.handleChangeNewDevice({messagetext: e.target.value})}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field> */}\n          </Form>\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            Cancel\n          </Button>\n          <Button\n            positive\n            icon=\"plus\"\n            labelPosition=\"right\"\n            content=\"Create\"\n            disabled={isThingMacDisabled || isConnectionNameDisabled || !isEnabled}\n            onClick={this.createDeviceConnection}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default DeviceModalCreate\n","import React, { Component } from 'react'\nimport '../connections/Connections.scss'\nimport { Button, Modal, Form, Dropdown, Checkbox } from 'semantic-ui-react'\n\nconst alertMessagesText = {\n  title: 'Turbine',\n  subtitle: 'LM2500',\n  assettext: 'MTU',\n  assetvalue: 'operation',\n}\n\nclass DeviceModalEdit extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalEditDevice: false,\n      isEnabled: true,\n      deviceTypes: [],\n      apps: [],\n      config: {},\n      selectedDeviceType: '',\n      selectedApp: '',\n      oldConnections: [],\n      isConnectionNameDisabled: false,\n      handleSendToApp: undefined,\n      handleSendToDB: undefined,\n      editDevice: {\n        id: '',\n        title: alertMessagesText.title,\n        subtitle: alertMessagesText.subtitle,\n        latitude: '',\n        longitude: '',\n        assettext: alertMessagesText.assettext,\n        assetvalue: alertMessagesText.assetvalue,\n        severity: '',\n        alerttext: '',\n        alertvalue: '',\n        messagetext: '',\n      },\n    }\n  }\n\n  getConfigById = async (id) => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((config) => {\n        config.content = JSON.parse(config.content)\n        let selectedApp = config.content.app\n        let selectedDeviceType = config.content.device_type\n        let handleSendToApp = config.content.sendToApp\n        let handleSendToDB = config.content.sendToDB\n        if (this._isMounted) {\n          this.setState({\n            selectedApp,\n            selectedDeviceType,\n            config,\n            handleSendToApp,\n            handleSendToDB,\n          })\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getThings = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/things`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldThings) => {\n        const currentThing = oldThings.filter((item) => {\n          return item.id === this.props.connection.mainflux_id\n        })\n        if (this._isMounted) this.setState({ currentThing: currentThing[0] })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldConnections) => {\n        const connections = oldConnections.filter((item) => {\n          item.content = JSON.parse(item.content)\n          return item.content.type === 'app'\n        })\n        const apps = connections.map((item) => {\n          return { value: item.external_id, text: item.name.split('.')[0] }\n        })\n        if (this._isMounted) this.setState({ apps, oldConnections })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getDeviceTypes = async () => {\n    fetch('http://134.209.240.215:8300/devices')\n      .then((res) => res.json())\n      .then((types) => {\n        const formattedTypes = types.map((type, i) => {\n          return { text: type, value: type }\n        })\n        if (this._isMounted) this.setState({ deviceTypes: formattedTypes })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  getChannel = async (appMac) => {\n    const { oldConnections } = this.state\n    let app = oldConnections.filter((item) => {\n      return item.external_id === appMac\n    })\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n\n    var channel = arr.filter((item) => {\n      return item.name === app[0].name\n    })\n    return channel[0]\n  }\n\n  getGlobalChannel = async (channelName) => {\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n    const globalChannel = arr.filter((item) => {\n      return item.name === `zsse/${channelName}`\n    })\n    return globalChannel[0]\n  }\n\n  getDeviceInfoFromDB = async (device_id) => {\n    const device = await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/device/${device_id}`,\n      {\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n      .then((res) => res.json())\n      .catch((e) => console.log(e))\n    const {\n      id,\n      title,\n      subtitle,\n      severity,\n      alerttext,\n      alertvalue,\n      assettext,\n      assetvalue,\n      messagetext,\n      longitude,\n      latitude,\n    } = device\n    this.setState((prevState) => ({\n      editDevice: {\n        ...prevState.editDevice,\n        id,\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      },\n    }))\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(nextProps === this.props && nextState === this.state)\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    const { external_id, name, content } = this.props.connection\n    this.getConfigById(external_id)\n    this.getThings().then(() => {\n      if (this._isMounted) this.forceUpdate()\n    })\n    this.getDeviceTypes()\n    this.getConnections()\n    if (content.sendToDB) {\n      this.getDeviceInfoFromDB(name.split('/')[1])\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  close = () => {\n    if (this._isMounted) this.setState({ showModalEditDevice: false })\n    this.props.callbackFromParent(this.state.showModalEditDevice)\n  }\n\n  editDevice = async () => {\n    const { config, oldConnections, handleSendToApp, handleSendToDB } = this.state\n    const {\n      name,\n      cycle,\n      device_type,\n      app,\n      sendToApp,\n      sendToDB,\n      mac,\n    } = this.state.config.content\n    let obj = {}\n\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/things/${config.mainflux_id}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n      .then((response) => response.json())\n      .then(async (thing) => {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/things/edit/${config.mainflux_id}`,\n          {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            mode: 'cors',\n            credentials: 'include',\n            body: JSON.stringify({ name, metadata: thing.metadata }),\n          }\n        )\n      })\n\n    let channel = {}\n    if (handleSendToApp) {\n      channel = await this.getChannel(app)\n      obj = {\n        type: 'device',\n        id: config.mainflux_id,\n        mac,\n        channel: channel.id,\n        sendToApp: handleSendToApp,\n        sendToDB: handleSendToDB,\n        name,\n        cycle,\n        device_type,\n        app,\n      }\n    } else {\n      channel = await this.getGlobalChannel(process.env.REACT_APP_CHANNEL_NAME)\n      obj = {\n        type: 'device',\n        id: config.mainflux_id,\n        mac,\n        channel: channel.id,\n        sendToApp: handleSendToApp,\n        sendToDB: handleSendToDB,\n        name,\n        device_type,\n        cycle,\n      }\n    }\n\n    // -- Update Device\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      }\n    )\n    await fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/channels/${config.mainflux_id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify({ obj }),\n      }\n    )\n\n    if (sendToDB === true && handleSendToDB === false) {\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/device/remove/${\n          this.state.editDevice.id.split('/')[1]\n        }`,\n        {\n          method: 'DELETE',\n          mode: 'cors',\n          credentials: 'include',\n        }\n      ).catch((err) => console.log(err))\n    } else if (sendToDB === false && handleSendToDB === true) {\n      const {\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      } = this.state.editDevice\n      let newDevice = {\n        id: this.state.config.content.name.split('/')[1],\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/create`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(newDevice),\n      })\n    } else if (sendToDB === true && handleSendToDB === true) {\n      const {\n        id,\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      } = this.state.editDevice\n      let editDevice = {\n        id: this.state.config.content.name.split('/')[1],\n        title,\n        subtitle,\n        severity,\n        alerttext,\n        alertvalue,\n        assettext,\n        assetvalue,\n        messagetext,\n        longitude,\n        latitude,\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/device/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n        body: JSON.stringify(editDevice),\n      })\n    }\n\n    // -- IF DEVICE CONNECTED TO APP BUT IT SHOULD BE DISCONNECTED -- //\n    if (sendToApp === true && handleSendToApp === false) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n\n          content.devices = content.devices.filter((item) => {\n            return item.device_id !== config.mainflux_id\n          })\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n        })\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        }\n      )\n      this.close()\n      return\n    }\n    // -- IF DEVICE DOESN'T CONNECTED TO APP BUT IT SHOULD BE CONNECTED -- //\n    else if (sendToApp === false && handleSendToApp === true) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          let { content } = response\n          content.devices.push({\n            device_name: `zsse/${obj.name}`,\n            device_id: config.mainflux_id,\n            device_key: config.mainflux_key,\n            device_type: obj.device_type,\n          })\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n        })\n      await fetch(\n        `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          mode: 'cors',\n          credentials: 'include',\n        }\n      )\n      await this.getConnections()\n    }\n\n    if (sendToApp) {\n      // -- Get current Device config\n      const currentDevice = oldConnections.filter((item) => {\n        return item.mainflux_id === config.mainflux_id\n      })\n\n      if (currentDevice[0].content.app !== obj.app) {\n        await fetch(\n          `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${currentDevice[0].content.app}`,\n          {\n            mode: 'cors',\n            credentials: 'include',\n          }\n        )\n          .then((response) => response.json())\n          .then((response) => {\n            response.content = JSON.parse(response.content)\n            const { content } = response\n            content.devices = content.devices.filter((item) => {\n              return item.device_id !== currentDevice[0].mainflux_id\n            })\n\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n                body: JSON.stringify({ response }),\n              }\n            )\n            fetch(\n              `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n              {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                mode: 'cors',\n                credentials: 'include',\n              }\n            )\n          })\n      }\n\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n          const editThing = content.devices.filter((item) => {\n            return item.device_id === config.mainflux_id\n          })\n          if (editThing.length === 0) {\n            content.devices.push({\n              device_name: name,\n              device_id: config.mainflux_id,\n              device_key: config.mainflux_key,\n              device_type,\n            })\n          } else {\n            const editThingIndex = content.devices.indexOf(editThing[0])\n            content.devices[editThingIndex] = {\n              device_name: name,\n              device_id: config.mainflux_id,\n              device_key: config.mainflux_key,\n              device_type,\n            }\n          }\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/connection/create/channels/${channel.id}/things/${config.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n            }\n          )\n        })\n    }\n\n    this.close()\n  }\n\n  handleChangeConnectionName = (e) => {\n    const currentValue = e.target.value\n    let arr = this.state.oldConnections.filter((item) => {\n      return item.name === `zsse/${currentValue}`\n    })\n    if (arr.length !== 0) {\n      if (this._isMounted) this.setState({ isConnectionNameDisabled: true })\n    } else {\n      if (this._isMounted) {\n        this.setState((prevState) => ({\n          config: {\n            ...prevState.config,\n            content: {\n              ...prevState.config.content,\n              name: currentValue,\n            },\n          },\n          isConnectionNameDisabled: false,\n        }))\n      }\n    }\n  }\n\n  handleChangeCycle = (e) => {\n    const currentValue = e.target.value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            cycle: currentValue,\n          },\n        },\n        isEnabled:\n          prevState.config.content.cycle.length <= 4 &&\n          /^\\d+$/.test(prevState.config.content.cycle),\n      }))\n    }\n  }\n\n  handleChangeDeviceType = (e, { value }) => {\n    const currentValue = value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            device_type: currentValue,\n          },\n        },\n        selectedDeviceType: value,\n      }))\n    }\n  }\n\n  handleChangeSendToApp = (e, { checked }) => {\n    if (this._isMounted) this.setState({ handleSendToApp: checked })\n    this.getConnections()\n  }\n\n  handleChangeSendToDB = (e, { checked }) => {\n    if (this._isMounted) this.setState({ handleSendToDB: checked })\n  }\n\n  handleChangeApp = (e, { value }) => {\n    const currentValue = value\n    if (this._isMounted) {\n      this.setState((prevState) => ({\n        config: {\n          ...prevState.config,\n          content: {\n            ...prevState.config.content,\n            app: currentValue,\n          },\n        },\n        selectedApp: value,\n      }))\n    }\n  }\n\n  handleChangeEditDevice = (e) => {\n    if (this._isMounted) {\n      var editDevice = { ...this.state.editDevice }\n      editDevice[Object.keys(e)[0]] = e[Object.keys(e)[0]]\n      this.setState({ editDevice })\n    }\n  }\n\n  render() {\n    const { showModalEditDevice } = this.props\n    const {\n      config,\n      isEnabled,\n      deviceTypes,\n      apps,\n      selectedDeviceType,\n      selectedApp,\n      isConnectionNameDisabled,\n      handleSendToApp,\n      handleSendToDB,\n      editDevice,\n    } = this.state\n    const {\n      title,\n      subtitle,\n      // severity,\n      // alerttext,\n      // alertvalue,\n      assettext,\n      assetvalue,\n      // messagetext,\n      longitude,\n      latitude,\n    } = editDevice\n\n    return (\n      <Modal\n        closeIcon\n        dimmer=\"blurring\"\n        open={showModalEditDevice}\n        onClose={this.close}\n      >\n        <Modal.Header>EDIT DEVICE</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Thing ID</label>\n              <input\n                placeholder=\"mainflux_id\"\n                value={config.content !== undefined ? config.mainflux_id : ''}\n                readOnly\n              />\n            </Form.Field>\n\n            <Form.Field>\n              <label>Thing Key</label>\n              <input\n                placeholder=\"mainflux_key\"\n                value={config.content !== undefined ? config.mainflux_key : ''}\n                readOnly\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Name </label>\n              <input\n                placeholder=\"name\"\n                onChange={(e) => this.handleChangeConnectionName(e)}\n                value={config.content !== undefined ? config.content.name : ''}\n                className={isConnectionNameDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Cycle </label>\n              <input\n                placeholder=\"cycle\"\n                value={config.content !== undefined ? config.content.cycle : ''}\n                className={!isEnabled ? 'showError' : 'showSuccess'}\n                onChange={(e) => this.handleChangeCycle(e)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label> Device Type </label>\n              <Dropdown\n                placeholder=\"device type\"\n                fluid\n                selection\n                options={deviceTypes}\n                value={selectedDeviceType}\n                onChange={this.handleChangeDeviceType}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Checkbox\n                label={\n                  handleSendToApp\n                    ? \"This device's config sent to App\"\n                    : \"Click checkbox for send this device's config to App\"\n                }\n                onChange={this.handleChangeSendToApp}\n                checked={handleSendToApp}\n              />\n              <Checkbox\n                label={\n                  handleSendToDB\n                    ? 'This device have additional info'\n                    : 'Click checkbox for additional info'\n                }\n                onChange={this.handleChangeSendToDB}\n                checked={handleSendToDB}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToApp ? '' : 'hide'}>\n              <label>Apps</label>\n              <Dropdown\n                placeholder=\"apps\"\n                fluid\n                selection\n                options={apps}\n                onChange={this.handleChangeApp}\n                value={selectedApp}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Title</label>\n              <input\n                placeholder=\"Device title\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ title: e.target.value })\n                }\n                value={title !== undefined ? title : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Subtitle</label>\n              <input\n                placeholder=\"Device subtitle\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ subtitle: e.target.value })\n                }\n                value={subtitle !== undefined ? subtitle : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Latitude</label>\n              <input\n                placeholder=\"Device latitude\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ latitude: e.target.value })\n                }\n                value={latitude !== undefined ? latitude : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Longitude</label>\n              <input\n                placeholder=\"Device longitude\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ longitude: e.target.value })\n                }\n                value={longitude !== undefined ? longitude : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Asset text</label>\n              <input\n                placeholder=\"Asset text\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ assettext: e.target.value })\n                }\n                value={assettext !== undefined ? assettext : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Asset value</label>\n              <input\n                placeholder=\"Asset value\"\n                onChange={(e) =>\n                  this.handleChangeEditDevice({ assetvalue: e.target.value })\n                }\n                value={assetvalue !== undefined ? assetvalue : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            {/* <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Severity</label>\n              <input\n                placeholder='Device severity'\n                onChange={e => this.handleChangeEditDevice({severity: e.target.value})}\n                value={severity !== undefined ? severity : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Alert text</label>\n              <input\n                placeholder='Alert text'\n                onChange={e => this.handleChangeEditDevice({alerttext: e.target.value})}\n                value={alerttext !== undefined ? alerttext : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Alert value</label>\n              <input\n                placeholder='Alert value'\n                onChange={e => this.handleChangeEditDevice({alertvalue: e.target.value})}\n                value={alertvalue !== undefined ? alertvalue : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field>\n            <Form.Field className={handleSendToDB ? '' : 'hide'}>\n              <label>Message text</label>\n              <input\n                placeholder='Message text'\n                onChange={e => this.handleChangeEditDevice({messagetext: e.target.value})}\n                value={messagetext !== undefined ? messagetext : ''}\n                // className={isThingMacDisabled ? 'show_error' : ''}\n              />\n            </Form.Field> */}\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={this.editDevice}\n            disabled={isConnectionNameDisabled || !isEnabled}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default DeviceModalEdit\n","import React, { Component } from 'react'\nimport './Connections.scss'\nimport { Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass ConnectionModalRemove extends Component {\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalRemove: false,\n      isRemoveable: true,\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  getChannel = async (app) => {\n    let arr = await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((oldChannels) => {\n        return oldChannels\n      })\n      .catch((err) => console.log(err))\n\n    var channel = arr.filter((item) => {\n      return item.name === app\n    })\n    return channel[0]\n  }\n\n  removeConnection = async (connection) => {\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/things/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n    fetch(\n      `${process.env.REACT_APP_EXPRESS_HOST}/api/device/remove/${connection.mainflux_id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      }\n    )\n    const { sendToApp, app, type } = connection.content\n    if (sendToApp) {\n      await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/${app}`, {\n        mode: 'cors',\n        credentials: 'include',\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          response.content = JSON.parse(response.content)\n          const { content } = response\n\n          content.devices = content.devices.filter((item) => {\n            return item.device_id !== connection.mainflux_id\n          })\n\n          fetch(\n            `${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap/edit/info/${response.mainflux_id}`,\n            {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              mode: 'cors',\n              credentials: 'include',\n              body: JSON.stringify({ response }),\n            }\n          )\n        })\n    }\n    if (type === 'app') {\n      let arr = await this.getChannel(connection.name)\n      fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/remove/${arr.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n        credentials: 'include',\n      })\n    }\n\n    if (this._isMounted) this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalRemove, connection.mainflux_id)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { content } = nextProps.connection\n    if (\n      content !== undefined &&\n      content.type === 'app' &&\n      content.devices.length !== 0\n    ) {\n      if (this._isMounted) this.setState({ isRemoveable: false })\n    } else {\n      if (this._isMounted) this.setState({ isRemoveable: true })\n    }\n  }\n\n  close = () => {\n    if (this._isMounted) {\n      this.setState({ showModalRemove: false, isRemoveable: true }, () => {\n        this.props.callbackFromParent(this.state.showModalRemove)\n      })\n    }\n  }\n\n  render() {\n    const { showModalRemove, connection } = this.props\n    const { isRemoveable } = this.state\n    return (\n      <Modal basic size=\"small\" open={showModalRemove}>\n        <Header\n          icon=\"archive\"\n          content={isRemoveable ? 'REMOVE CONNECTION?' : 'CAN NOT REMOVE CONNECTION'}\n        />\n        <Modal.Content>\n          <p>\n            {isRemoveable\n              ? `Do you want to remove connection: ${connection.name}`\n              : `CONNECTION '${connection.name}' HAVE CONNECTED DEVICES. FIRST REMOVE CONNECTED DEVICES.`}\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"red\"\n            inverted\n            onClick={() => {\n              isRemoveable ? this.removeConnection(connection) : this.close()\n            }}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ConnectionModalRemove\n","import React, { Component } from 'react'\nimport { Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass ErrorModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalError: false,\n    }\n  }\n\n  close = () => {\n    this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalError)\n  }\n\n  render() {\n    const { showModalError, errorText } = this.props\n\n    return (\n      <Modal basic size=\"small\" open={showModalError}>\n        <Header icon=\"archive\" content=\"ERROR\" />\n        <Modal.Content>\n          <p>{errorText}</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" /> Close\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ErrorModal\n","import React, { Component } from 'react'\nimport './Connections.scss'\nimport { Item, Button, Icon, Popup, Loader } from 'semantic-ui-react'\nimport AppModalCreate from '../applications/AppModalCreate'\nimport AppModalEdit from '../applications/AppModalEdit'\nimport DeviceModalCreate from '../devices/DeviceModalCreate'\nimport DeviceModalEdit from '../devices/DeviceModalEdit'\nimport ConnectionModalRemove from './ConnectionModalRemove'\nimport ErrorModal from '../errorModal'\n\nclass Connections extends Component {\n  _isMounted = false\n\n  constructor() {\n    super()\n\n    this.state = {\n      connections: [],\n      showModalCreateApp: false,\n      showModalEditApp: false,\n      showModalCreateDevice: false,\n      showModalEditDevice: false,\n      showModalError: false,\n      edittingApp: {},\n      edittingDevice: {},\n      removingConnection: {},\n      errorText: '',\n      loader: true,\n    }\n  }\n\n  getToken = async () => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getConnections = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/bootstrap`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((connections) => {\n        const parsedConnections = connections.map((item) => {\n          item.content = JSON.parse(item.content)\n          return item\n        })\n        if (this._isMounted)\n          this.setState({ connections: parsedConnections, loader: false })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    this.getToken()\n    this.getConnections()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.getConnections()\n    }\n  }\n\n  createAppModalCallback = (showModalCreateApp, oldConnections) => {\n    if (this._isMounted)\n      this.setState({ showModalCreateApp, connections: oldConnections })\n    this.getConnections()\n  }\n\n  createDeviceModalCallback = (showModalCreateDevice, oldConnections) => {\n    if (this._isMounted)\n      this.setState({ showModalCreateDevice, connections: oldConnections })\n    this.getConnections()\n  }\n\n  removeModalCallback = (showModalRemove, id) => {\n    if (this._isMounted) this.setState({ showModalRemove })\n    if (id) {\n      // FIXME:\n      const connections = this.state.connections\n      let connection = connections.filter((i) => i.mainflux_id === id)\n      const { type, app } = connection[0].content\n      if (type === 'device' && app !== undefined) {\n        let connectedApp = connections.filter((i) => i.external_id === app)\n        const edittedApp = connectedApp[0].content.devices.filter(\n          (i) => i.device_id !== id\n        )\n        connections[\n          connections.indexOf(connectedApp[0])\n        ].content.devices = edittedApp\n        if (this._isMounted) this.setState({ connections })\n      }\n      if (this._isMounted) {\n        this.setState({\n          connections: this.state.connections.filter((i) => i.mainflux_id !== id),\n        })\n      }\n    }\n  }\n\n  editAppModalCallback = (showModalEditApp) => {\n    if (this._isMounted) this.setState({ showModalEditApp })\n    this.getConnections()\n  }\n\n  editDeviceModalCallback = (showModalEditDevice) => {\n    if (this._isMounted) this.setState({ showModalEditDevice })\n    this.getConnections()\n  }\n\n  errorModalCallback = (showModalError) => {\n    if (this._isMounted) this.setState({ showModalError })\n  }\n\n  render() {\n    const {\n      connections,\n      showModalCreateApp,\n      showModalCreateDevice,\n      showModalRemove,\n      showModalEditApp,\n      showModalEditDevice,\n      showModalError,\n      edittingApp,\n      edittingDevice,\n      removingConnection,\n      errorText,\n      loader,\n    } = this.state\n\n    return (\n      <div id=\"connections\" className=\"main_wrapper\">\n        <div className=\"connection_top\">\n          <h1> Connections </h1>\n          <div className=\"connection_btn__wrapper\">\n            <Button\n              icon\n              labelPosition=\"left\"\n              onClick={() => this.setState({ showModalCreateApp: true })}\n            >\n              <Icon name=\"chain\" />\n              Create App\n            </Button>\n            <Button\n              icon\n              labelPosition=\"left\"\n              onClick={() => this.setState({ showModalCreateDevice: true })}\n            >\n              <Icon name=\"chain\" />\n              Create Device\n            </Button>\n          </div>\n        </div>\n        <hr />\n        <Item.Group relaxed>\n          {<Loader active={loader} content=\"Loading\" />}\n          {connections.length === 0 ? (\n            <p>\n              Unfortunately we did not find your connections. It will be great to\n              create some.\n              <span role=\"img\" aria-label=\"Sad\">\n                🙁\n              </span>\n            </p>\n          ) : (\n            connections.map((item) => (\n              <Item key={item.mainflux_id}>\n                <Item.Content verticalAlign=\"middle\">\n                  <Popup\n                    content={\n                      <div>\n                        <p>id: {item.mainflux_id}</p>\n                        <p>key: {item.mainflux_key}</p>\n                      </div>\n                    }\n                    trigger={<Item.Header>{item.name}</Item.Header>}\n                  />\n                  <Item.Description>{item.content.type}</Item.Description>\n                  <Item.Description>{item.external_id}</Item.Description>\n                  <Item.Extra>\n                    <Button\n                      color=\"red\"\n                      floated=\"right\"\n                      icon=\"trash alternate outline\"\n                      labelPosition=\"right\"\n                      content=\"Remove\"\n                      onClick={() =>\n                        this.setState({\n                          showModalRemove: true,\n                          removingConnection: item,\n                        })\n                      }\n                    />\n                    <Button\n                      color=\"yellow\"\n                      floated=\"right\"\n                      icon=\"edit outline\"\n                      labelPosition=\"right\"\n                      content=\"Edit\"\n                      onClick={() =>\n                        item.content.type === 'app'\n                          ? this.setState({\n                              showModalEditApp: true,\n                              edittingApp: item,\n                            })\n                          : this.setState({\n                              showModalEditDevice: true,\n                              edittingDevice: item,\n                            })\n                      }\n                    />\n                  </Item.Extra>\n                </Item.Content>\n              </Item>\n            ))\n          )}\n        </Item.Group>\n\n        {this.state.showModalCreateApp ? (\n          <AppModalCreate\n            showModalCreateApp={showModalCreateApp}\n            callbackFromParent={this.createAppModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalCreateDevice ? (\n          <DeviceModalCreate\n            showModalCreateDevice={showModalCreateDevice}\n            callbackFromParent={this.createDeviceModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalRemove ? (\n          <ConnectionModalRemove\n            showModalRemove={showModalRemove}\n            connection={removingConnection}\n            callbackFromParent={this.removeModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalError ? (\n          <ErrorModal\n            showModalError={showModalError}\n            errorText={errorText}\n            callbackFromParent={this.errorModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalEditApp ? (\n          <AppModalEdit\n            showModalEditApp={showModalEditApp}\n            connection={edittingApp}\n            callbackFromParent={this.editAppModalCallback}\n          />\n        ) : null}\n\n        {this.state.showModalEditDevice ? (\n          <DeviceModalEdit\n            showModalEditDevice={showModalEditDevice}\n            connection={edittingDevice}\n            callbackFromParent={this.editDeviceModalCallback}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Connections\n","import React, { Component } from 'react'\nimport './Channels.scss'\nimport { Button, Form, Modal } from 'semantic-ui-react'\n\nclass ChannelModalCreate extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalCreate: false,\n      channel: {\n        name: '',\n        metadata: {},\n      },\n    }\n  }\n\n  createChannel = async (name) => {\n    const { channel } = this.state\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ channel }),\n    })\n    this.close()\n  }\n\n  close = () => {\n    this.setState({ showModalCreate: false })\n    this.props.callbackFromParent(this.state.showModalCreate)\n  }\n\n  handleChangeName = (e) => {\n    let str = e.target.value\n    this.setState((prevState) => ({\n      channel: {\n        ...prevState.channel,\n        name: str,\n      },\n    }))\n  }\n\n  render() {\n    const { showModalCreate } = this.props\n    const { name } = this.state\n\n    return (\n      <Modal closeIcon dimmer=\"blurring\" open={showModalCreate} onClose={this.close}>\n        <Modal.Header>CREATE THING</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>Name</label>\n              <input\n                placeholder=\"name\"\n                value={name}\n                onChange={(e) => this.handleChangeName(e)}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"black\" onClick={this.close}>\n            No\n          </Button>\n          <Button\n            positive\n            icon=\"edit outline\"\n            labelPosition=\"right\"\n            content=\"Yes\"\n            onClick={() => this.createChannel(name)}\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ChannelModalCreate\n","import React, { Component } from 'react'\nimport './Channels.scss'\nimport { Button, Header, Modal, Icon } from 'semantic-ui-react'\n\nclass ChannelModalRemove extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showModalRemove: false,\n    }\n  }\n\n  removeChannel = async (id, event) => {\n    fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels/remove/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n    this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalRemove, id)\n  }\n\n  close = () => {\n    this.setState({ showModalRemove: false })\n    this.props.callbackFromParent(this.state.showModalRemove)\n  }\n\n  render() {\n    const { showModalRemove, channel } = this.props\n\n    return (\n      <Modal basic size=\"small\" open={showModalRemove}>\n        <Header icon=\"archive\" content=\"REMOVE CHANNEL?\" />\n        <Modal.Content>\n          <p>Do you want to remove channel: {channel.name}</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"green\" inverted onClick={this.close}>\n            <Icon name=\"remove\" /> No\n          </Button>\n          <Button\n            color=\"red\"\n            inverted\n            onClick={(event) => {\n              this.removeChannel(channel.id, event)\n            }}\n          >\n            <Icon name=\"checkmark\" /> Yes\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nexport default ChannelModalRemove\n","import React, { Component } from 'react'\nimport './Channels.scss'\nimport {\n  Item, Button, Icon, Loader,\n} from 'semantic-ui-react'\nimport ChannelModalCreate from './ChannelModalCreate'\nimport ChannelModalRemove from './ChannelModalRemove'\n// import ChannelModalEdit from './ChannelModalEdit';\n\nclass Channels extends Component {\n  constructor() {\n    super()\n    this.state = {\n      channels: [],\n      // edittingChannel: {},\n      removingChannel: {},\n      showModalRemove: false,\n      // showModalEdit: false,\n      showModalCreate: false,\n      loader: true,\n    }\n  }\n\n  async componentDidMount() {\n    await this.getToken()\n    this.getChannels()\n  }\n\n  getToken = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/users/login`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n      body: JSON.stringify({ email: `${process.env.REACT_APP_MAINFLUX_USER}` }),\n    })\n  }\n\n  getChannels = async () => {\n    await fetch(`${process.env.REACT_APP_EXPRESS_HOST}/api/channels`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((res) => res.json())\n      .then((channels) => this.setState({ channels, loader: false }))\n      .catch((err) => err)\n  }\n\n  removeModalCallback = (showModalRemove, removeItemId) => {\n    this.setState({ showModalRemove })\n    if (removeItemId) {\n      this.setState((prevState) => ({\n        channels: prevState.channels.filter((item) => item.id !== removeItemId),\n      }))\n    }\n  }\n\n  // editModalCallback = showModalEdit => {\n  //   this.setState({ showModalEdit });\n  // };\n\n  createChannelModalCallback = async (showModalCreate) => {\n    this.setState({ showModalCreate })\n    await this.getChannels()\n  }\n\n  render() {\n    const {\n      channels,\n      // showModalEdit,\n      showModalCreate,\n      showModalRemove,\n      removingChannel,\n      // edittingChannel,\n      loader,\n    } = this.state\n\n    return (\n      <div id=\"channels\" className=\"main_wrapper\">\n        <div className=\"channel_top\">\n          <h1>Channels</h1>\n          <Button\n            icon\n            labelPosition=\"left\"\n            onClick={() => this.setState({ showModalCreate: true })}\n          >\n            <Icon name=\"podcast\" />\n            Create Channel\n          </Button>\n        </div>\n        <hr />\n        <Item.Group relaxed>\n          {<Loader active={loader} content=\"Loading\" />}\n          {channels.length === 0 ? (\n            <p>\n              Unfortunately we did not find your channels.\n              <span role=\"img\" aria-label=\"Sad\">\n                🙁\n              </span>\n            </p>\n          ) : (\n            channels.map((item) => (\n              <Item key={item.id}>\n                <Item.Content verticalAlign=\"middle\">\n                  <Item.Header>{item.name}</Item.Header>\n                  <Item.Description>{item.id}</Item.Description>\n                  <Item.Extra>\n                    <Button\n                      color=\"red\"\n                      floated=\"right\"\n                      icon=\"trash alternate outline\"\n                      labelPosition=\"right\"\n                      content=\"Remove\"\n                      onClick={() => this.setState({\n                        showModalRemove: true,\n                        removingChannel: item,\n                      })}\n                    />\n                    {/* <Button\n                      color=\"yellow\"\n                      floated='right'\n                      icon='edit outline'\n                      labelPosition='right'\n                      content=\"Edit\"\n                      onClick={() => this.setState({ showModalEdit: true, edittingChannel: item })}\n                    /> */}\n                  </Item.Extra>\n                </Item.Content>\n              </Item>\n            ))\n          )}\n        </Item.Group>\n\n        {showModalRemove ? (\n          <ChannelModalRemove\n            showModalRemove={showModalRemove}\n            channel={removingChannel}\n            callbackFromParent={this.removeModalCallback}\n          />\n        ) : null}\n\n        {/* {\n          showModalEdit\n          ? <ChannelModalEdit\n              showModalEdit={showModalEdit}\n              channel={edittingChannel}\n              callbackFromParent={this.editModalCallback}\n            />\n          : null\n        } */}\n\n        {showModalCreate ? (\n          <ChannelModalCreate\n            showModalCreate={showModalCreate}\n            callbackFromParent={this.createChannelModalCallback}\n          />\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Channels\n","import React from 'react'\n\nconst Notfound = () => (\n  <div className=\"main_wrapper\">\n    <h1>Nothing was found</h1>\n    <p>\n      Unfortunately we did not find anything for your request.\n      <span role=\"img\" aria-label=\"Sad\">\n        🙁\n      </span>\n    </p>\n  </div>\n)\n\nexport default Notfound\n","import React, { Component } from 'react'\nimport {\n  Route, NavLink, BrowserRouter as Router, Switch,\n} from 'react-router-dom'\nimport { Menu } from 'semantic-ui-react'\nimport './App.scss'\nimport 'semantic-ui-css/semantic.min.css'\nimport Home from './components/Home'\nimport TopBar from './components/TopBar'\nimport Connections from './components/connections/Connections'\nimport Channels from './components/channels/Channels'\nimport Notfound from './components/NotFound'\n\nexport default class App extends Component {\n  checkActive = (location) => {\n    const { url } = location\n    if (url === '/') return true\n    return false\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <Router>\n          <div id=\"sidebar_wrapper\">\n            <Menu id=\"sidebar_menu\" secondary vertical>\n              <ul>\n                <li>\n                  <NavLink\n                    to=\"/\"\n                    activeClassName=\"active_item\"\n                    isActive={this.checkActive}\n                  >\n                    Home\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/channels\" activeClassName=\"active_item\">\n                    Channels\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink to=\"/connections\" activeClassName=\"active_item\">\n                    Connections\n                  </NavLink>\n                </li>\n              </ul>\n            </Menu>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/channels\" component={Channels} />\n              <Route path=\"/connections\" component={Connections} />\n              <Route component={Notfound} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n// import Keycloak from 'keycloak-js';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\n// keycloak init options\n// const initOptions = {\n//   url: 'http://key.zeinetsse.com/auth',\n//   realm: 'zeinetsse',\n//   clientId: 'mainflux_admin',\n//   onLoad: 'login-required',\n// };\n\n// const keycloak = Keycloak(initOptions);\n\n// keycloak.init({ onLoad: initOptions.onLoad }).success((auth) => {\n//   if (!auth) {\n//     window.location.reload();\n//   } else {\n//     console.info('Authenticated');\n//   }\n\n//   // React Render\n//   ReactDOM.render(<App />, document.getElementById('root'));\n\n//   localStorage.setItem('react-token', keycloak.token);\n//   localStorage.setItem('react-refresh-token', keycloak.refreshToken);\n\n//   setTimeout(() => {\n//     keycloak.updateToken(70).success((refreshed) => {\n//       if (refreshed) {\n//         console.debug(`Token refreshed${refreshed}`);\n//       } else {\n//         console.warn(`Token not refreshed, valid for ${\n// Math.round(\n//   keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000)}\n//   seconds`);\n//       }\n//     }).error(() => {\n//       console.error('Failed to refresh token');\n//     });\n//   }, 60000);\n// }).error(() => {\n//   console.error('Authenticated Failed');\n// });\n"],"sourceRoot":""}